

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Mon Jun 15 21:42:36 2015

HI-TECH Software Omniscient Code Generator build 3884
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 3884"
     2                           
     3                           	processor	16F886
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 11 "I:\Embedded\PIC\PIC_16F873\PIC_16F873_ADC
                                 _LCD\Test_June6\main.c"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 11 "I:\Embedded\PIC\PIC_16F873\PIC_16F873_ADC
                                 _LCD\Test_June6\main.c"
    41  2007  04D4               	dw 0x3FFC & 0x3FF7 & 0x3FFF & 0x3FDF & 0x3FFF 
                                 & 0x3FFF & 0x3CFF & 0x3FFF & 0x37FF & 0x2FFF & 
                                 0x1FFF ;#
    42                           # 13 "I:\Embedded\PIC\PIC_16F873\PIC_16F873_ADC
                                 _LCD\Test_June6\main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 13 "I:\Embedded\PIC\PIC_16F873\PIC_16F873_ADC
                                 _LCD\Test_June6\main.c"
    45  2008  3EFF               	dw 0x3EFF ;#
    46                           global __tempreg
    47  0000                     __tempreg	set	95
    48                           global __Lrbss_0, __Hrbss_0
    49  0000                     __Lrbss_0 set 0x45
    50  0000                     __Hrbss_0 set 0x5F
    51                           global __Lcommon, __Hcommon
    52  0000                     __Lcommon set 0x71
    53  0000                     __Hcommon set 0x7E
    54                           global __Lrdata_0, __Hrdata_0
    55  0000                     __Lrdata_0	equ	0x0
    56  0000                     __Hrdata_0	equ	0x1
    57                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    58  0000                     __Lramdata	set	__Lrdata_0
    59  0000                     __Hramdata	set	__Hrdata_0
    60                           	GLOBAL	__databank
    61  0000                     __databank	EQU	0
    62  0000                     _Lcd8_Write_String_a	equ	??_Lcd8_Write_String+0
    63                           	global	_Lcd8_Write_String_a
    64  0000                     _Lcd8_Write_String_i	equ	??_Lcd8_Write_String+1
    65                           	global	_Lcd8_Write_String_i
    66  0000                     _GetTimer_State_TimerID	equ	??_GetTimer_State+0
    67                           	global	_GetTimer_State_TimerID
    68  0000                     _init_SWTimer_counter	equ	??_init_SWTimer+0
    69                           	global	_init_SWTimer_counter
    70  0000                     _Lcd8_Set_Cursor_a	equ	??_Lcd8_Set_Cursor+0
    71                           	global	_Lcd8_Set_Cursor_a
    72  0000                     _Lcd8_Set_Cursor_b	equ	?_Lcd8_Set_Cursor+0
    73                           	global	_Lcd8_Set_Cursor_b
    74  0000                     _Start_Timer_Timer_ID	equ	??_Start_Timer+0
    75                           	global	_Start_Timer_Timer_ID
    76  0000                     _Start_Timer_TimeoutVal	equ	?_Start_Timer+0
    77                           	global	_Start_Timer_TimeoutVal
    78  0000                     _Read_Adc_Channel	equ	??_Read_Adc+0
    79                           	global	_Read_Adc_Channel
    80  0000                     ___lwdiv_counter	equ	??___lwdiv+0
    81                           	global	___lwdiv_counter
    82  0000                     ___lwdiv_quotient	equ	??___lwdiv+1
    83                           	global	___lwdiv_quotient
    84  0000                     ___lwdiv_dividend	equ	?___lwdiv+0
    85                           	global	___lwdiv_dividend
    86  0000                     ___lwdiv_divisor	equ	?___lwdiv+2
    87                           	global	___lwdiv_divisor
    88  0000                     ___lwmod_counter	equ	??___lwmod+0
    89                           	global	___lwmod_counter
    90  0000                     ___lwmod_dividend	equ	?___lwmod+0
    91                           	global	___lwmod_dividend
    92  0000                     ___lwmod_divisor	equ	?___lwmod+2
    93                           	global	___lwmod_divisor
    94  0000                     _Lcd8_Write_Char_a	equ	??_Lcd8_Write_Char+0
    95                           	global	_Lcd8_Write_Char_a
    96  0000                     _Lcd8_Cmd_a	equ	??_Lcd8_Cmd+0
    97                           	global	_Lcd8_Cmd_a
    98  0000                     _Lcd8_Port_a	equ	??_Lcd8_Port+0
    99                           	global	_Lcd8_Port_a
   100                           ;Data sizes: Strings 18, constant 0, data 0, bs
                                 s 0, persistent 0 stack 14
   101                           	global	_main
   102                           	global	??_main
   103                           	global	?_main
   104                           
   105                           ; *************** function _main **************
                                 *
   106                           ; Defined at:
   107                           ;		line 25 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\main.c"
   108                           ; Parameters:
   109                           ;		None
   110                           ; Auto variables:
   111                           ;		None
   112                           ; Return value:
   113                           ;		type: void 
   114                           ;		size: 0
   115                           ; Registers used:
   116                           ;		wreg, fsr, status,2, status,0, pclath, cstac
                                 k
   117                           ; Tracked objects:
   118                           ;		On entry : BFF/0
   119                           ;		On exit  : 0/0
   120                           ;		Unchanged: 0/0
   121                           ; Data sizes:
   122                           ;		Autos:    0
   123                           ;		Params:   0
   124                           ;		Temp:     0
   125                           ;		Total:    0
   126                           ; This function calls:
   127                           ;		_init_DigIO
   128                           ;		_init_timer
   129                           ;		_Lcd8_Init
   130                           ;		_init_SWTimer
   131                           ;		_Start_Timer
   132                           ;		_Lcd8_Set_Cursor
   133                           ;		_Lcd8_Write_String
   134                           ;		_GetTimer_State
   135                           ;		_Read_Adc
   136                           ;		_Lcd8_Write_Char
   137                           ;		___lwdiv
   138                           ;		___lwmod
   139                           ; This function is called by:
   140                           ;		Startup code after reset
   141                           ; This function uses a non-reentrant model
   142                           ; 
   143                           	psect	maintext,class=CODE,delta=2
   144                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\main.c"
   145                           	line	25
   146                           	psect	maintext
   147                           ;main.c: 11: asm("\tpsect config,class=CONFIG,d
                                 elta=2"); asm("\tdw ""0x3FFC & 0x3FF7 & 0x3FFF 
                                 & 0x3FDF & 0x3FFF & 0x3FFF & 0x3CFF & 0x3FFF & 
                                 0x37FF & 0x2FFF & 0x1FFF");
   148                           ;main.c: 13: asm("\tpsect config,class=CONFIG,d
                                 elta=2"); asm("\tdw ""0x3EFF");
   149                           ;main.c: 15: unsigned char Elapsed_Secs=0;
   150                           ;main.c: 16: unsigned char Elapsed_Mins=0;
   151                           ;main.c: 17: unsigned char Elapsed_Hours=0;
   152                           ;main.c: 18: unsigned char Input_Time=0;
   153                           ;main.c: 19: unsigned char Time_Sec=0,Time_Min=
                                 0,Time_Hour=0;
   154                           ;main.c: 20: unsigned int adc_result_an2=0;
   155                           	
   156  002F                     _main:	
   157                           ; Regs used in _main: [wreg+fsr+status,2+status
                                 ,0+pclath+cstack]
   158                           	line	27
   159                           ;main.c: 27: init_DigIO();
   160  002F  120A  118A  2375   	fcall	_init_DigIO
              120A  118A         
   161                           	line	28
   162                           ;main.c: 28: init_timer();
   163  0034  120A  118A  24AA   	fcall	_init_timer
              120A  118A         
   164                           	line	29
   165                           ;main.c: 29: Lcd8_Init();
   166  0039  120A  118A  2221   	fcall	_Lcd8_Init
              120A  118A         
   167                           	line	31
   168                           ;main.c: 31: init_SWTimer();
   169  003E  120A  118A  23AA   	fcall	_init_SWTimer
              120A  118A         
   170                           	line	33
   171                           ;main.c: 33: PEIE = 1;
   172  0043  1283               	bcf	status, 5	;RP0=0, select bank0
   173  0044  1303               	bcf	status, 6	;RP2=0, select bank0
   174  0045  170B               	bsf	(94/8),(94)&7
   175                           	line	34
   176                           ;main.c: 34: GIE = 1;
   177  0046  178B               	bsf	(95/8),(95)&7
   178                           	line	35
   179                           ;main.c: 35: Start_Timer(0,10);
   180  0047  300A               	movlw	low(0Ah)
   181                           	
   182  0048  00DF               	movwf	(?_Start_Timer)
   183  0049  3000               	movlw	high(0Ah)
   184  004A  00E0               	movwf	((?_Start_Timer))+1
   185  004B  3000               	movlw	(0)
   186  004C  120A  118A  2473   	fcall	_Start_Timer
              120A  118A         
   187                           	line	41
   188                           ;main.c: 41: Lcd8_Set_Cursor((1),0);
   189  0051  1003               	clrc
   190  0052  1283               	bcf	status, 5	;RP0=0, select bank0
   191  0053  1303               	bcf	status, 6	;RP2=0, select bank0
   192                           	
   193  0054  3000               	movlw	0
   194  0055  1803               	btfsc	status,0
   195  0056  3001               	movlw	1
   196  0057  00DF               	movwf	(?_Lcd8_Set_Cursor)
   197  0058  3001               	movlw	(01h)
   198  0059  120A  118A  2455   	fcall	_Lcd8_Set_Cursor
              120A  118A         
   199                           	line	42
   200                           ;main.c: 42: Lcd8_Write_String("Voltage:");
   201  005E  3001               	movlw	((STR_1-__stringbase))&0ffh
   202  005F  120A  118A  23DE   	fcall	_Lcd8_Write_String
              120A  118A         
   203                           	line	44
   204                           ;main.c: 44: Lcd8_Set_Cursor((2),0);
   205  0064  1003               	clrc
   206  0065  1283               	bcf	status, 5	;RP0=0, select bank0
   207  0066  1303               	bcf	status, 6	;RP2=0, select bank0
   208                           	
   209  0067  3000               	movlw	0
   210  0068  1803               	btfsc	status,0
   211  0069  3001               	movlw	1
   212  006A  00DF               	movwf	(?_Lcd8_Set_Cursor)
   213  006B  3002               	movlw	(02h)
   214  006C  120A  118A  2455   	fcall	_Lcd8_Set_Cursor
              120A  118A         
   215                           	line	45
   216                           ;main.c: 45: Lcd8_Write_String("Current:");
   217  0071  300A               	movlw	((STR_2-__stringbase))&0ffh
   218  0072  120A  118A  23DE   	fcall	_Lcd8_Write_String
              120A  118A         
   219                           	line	49
   220                           ;main.c: 49: while (1)
   221                           	
   222  0077                     l14:	
   223                           	line	55
   224                           ;main.c: 50: {
   225                           ;main.c: 55: if (GetTimer_State(0 ==3))
   226  0077  3000               	movlw	(0)
   227  0078  120A  118A  22C1   	fcall	_GetTimer_State
              120A  118A         
   228  007D  3A00               	xorlw	0
   229  007E  1903               	skipnz
   230  007F  2881               	goto	u1511
   231  0080  2882               	goto	u1510
   232  0081                     u1511:
   233  0081  29F4               	goto	l13
   234  0082                     u1510:
   235                           	line	58
   236                           ;main.c: 56: {
   237                           ;main.c: 58: Lcd8_Set_Cursor((1),9);
   238  0082  3009               	movlw	(09h)
   239  0083  1283               	bcf	status, 5	;RP0=0, select bank0
   240  0084  1303               	bcf	status, 6	;RP2=0, select bank0
   241                           	
   242  0085  00DF               	movwf	(?_Lcd8_Set_Cursor)
   243  0086  3001               	movlw	(01h)
   244  0087  120A  118A  2455   	fcall	_Lcd8_Set_Cursor
              120A  118A         
   245                           	line	59
   246                           ;main.c: 59: adc_result_an2 = Read_Adc(0x03);
   247  008C  3003               	movlw	(03h)
   248  008D  120A  118A  2303   	fcall	_Read_Adc
              120A  118A         
   249  0092  1283               	bcf	status, 5	;RP0=0, select bank0
   250  0093  1303               	bcf	status, 6	;RP2=0, select bank0
   251                           	
   252  0094  085F               	movf	(0+?_Read_Adc),w
   253  0095  01C7               	clrf	(71)
   254  0096  07C7               	addwf	(71)
   255  0097  0860               	movf	(1+?_Read_Adc),w
   256  0098  01C8               	clrf	(71+1)
   257  0099  07C8               	addwf	(71+1)
   258                           	line	60
   259                           ;main.c: 60: if(adc_result_an2 >10)
   260                           	
   261  009A  3000               	movlw	high(0Bh)
   262  009B  0248               	subwf	(71+1),w
   263  009C  1D03               	skipz
   264  009D  28A0               	goto	u1525
   265  009E  300B               	movlw	low(0Bh)
   266  009F  0247               	subwf	(71),w
   267  00A0                     u1525:
   268  00A0  1C03               	skipc
   269  00A1  28A3               	goto	u1521
   270  00A2  28A4               	goto	u1520
   271  00A3                     u1521:
   272  00A3  28AB               	goto	l17
   273  00A4                     u1520:
   274                           	line	62
   275                           ;main.c: 61: {
   276                           ;main.c: 62: Lcd8_Write_Char('+');
   277  00A4  302B               	movlw	(02Bh)
   278  00A5  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   279                           	line	63
   280                           ;main.c: 63: }
   281  00AA  28BF               	goto	l18
   282                           	line	64
   283                           	
   284  00AB                     l17:	
   285                           	line	66
   286                           ;main.c: 64: else
   287                           ;main.c: 65: {
   288                           ;main.c: 66: Lcd8_Write_Char('-');
   289  00AB  302D               	movlw	(02Dh)
   290  00AC  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   291                           	line	67
   292                           ;main.c: 67: adc_result_an2 = Read_Adc(0x02);
   293  00B1  3002               	movlw	(02h)
   294  00B2  120A  118A  2303   	fcall	_Read_Adc
              120A  118A         
   295  00B7  1283               	bcf	status, 5	;RP0=0, select bank0
   296  00B8  1303               	bcf	status, 6	;RP2=0, select bank0
   297                           	
   298  00B9  085F               	movf	(0+?_Read_Adc),w
   299  00BA  01C7               	clrf	(71)
   300  00BB  07C7               	addwf	(71)
   301  00BC  0860               	movf	(1+?_Read_Adc),w
   302  00BD  01C8               	clrf	(71+1)
   303  00BE  07C8               	addwf	(71+1)
   304                           	line	69
   305                           	
   306  00BF                     l18:	
   307                           	line	75
   308                           ;main.c: 69: }
   309                           ;main.c: 75: adc_result_an2>>=1;
   310  00BF  1283               	bcf	status, 5	;RP0=0, select bank0
   311  00C0  1303               	bcf	status, 6	;RP2=0, select bank0
   312                           	
   313  00C1  3001               	movlw	01h
   314  00C2                     u1535:
   315  00C2  1003               	clrc
   316  00C3  0CC8               	rrf	(71+1),f
   317  00C4  0CC7               	rrf	(71),f
   318  00C5  3EFF               	addlw	-1
   319  00C6  1D03               	skipz
   320  00C7  28C2               	goto	u1535
   321                           	line	76
   322                           ;main.c: 76: temp1=adc_result_an2/100;
   323  00C8  3064               	movlw	low(064h)
   324                           	
   325  00C9  00E1               	movwf	(0+?___lwdiv+02h)&07fh
   326  00CA  3000               	movlw	high(064h)
   327  00CB  00E2               	movwf	((0+?___lwdiv+02h)&07fh)+1
   328                           	
   329                           	
   330  00CC  0847               	movf	(71),w
   331  00CD  01DF               	clrf	(?___lwdiv)
   332  00CE  07DF               	addwf	(?___lwdiv)
   333  00CF  0848               	movf	(71+1),w
   334  00D0  01E0               	clrf	(?___lwdiv+1)
   335  00D1  07E0               	addwf	(?___lwdiv+1)
   336  00D2  120A  118A  2277   	fcall	___lwdiv
              120A  118A         
   337  00D7  1283               	bcf	status, 5	;RP0=0, select bank0
   338  00D8  1303               	bcf	status, 6	;RP2=0, select bank0
   339                           	
   340  00D9  085F               	movf	(0+?___lwdiv),w
   341  00DA  01C5               	clrf	(69)
   342  00DB  07C5               	addwf	(69)
   343  00DC  0860               	movf	(1+?___lwdiv),w
   344  00DD  01C6               	clrf	(69+1)
   345  00DE  07C6               	addwf	(69+1)
   346                           	line	79
   347                           ;main.c: 79: Lcd8_Write_Char(temp1 | 0x30);
   348                           	
   349  00DF  0845               	movf	(69),w
   350                           	
   351  00E0  3830               	iorlw	030h
   352  00E1  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   353                           	line	81
   354                           ;main.c: 81: temp1=adc_result_an2/10;
   355  00E6  300A               	movlw	low(0Ah)
   356  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
   357  00E8  1303               	bcf	status, 6	;RP2=0, select bank0
   358                           	
   359  00E9  00E1               	movwf	(0+?___lwdiv+02h)&07fh
   360  00EA  3000               	movlw	high(0Ah)
   361  00EB  00E2               	movwf	((0+?___lwdiv+02h)&07fh)+1
   362                           	
   363                           	
   364  00EC  0847               	movf	(71),w
   365  00ED  01DF               	clrf	(?___lwdiv)
   366  00EE  07DF               	addwf	(?___lwdiv)
   367  00EF  0848               	movf	(71+1),w
   368  00F0  01E0               	clrf	(?___lwdiv+1)
   369  00F1  07E0               	addwf	(?___lwdiv+1)
   370  00F2  120A  118A  2277   	fcall	___lwdiv
              120A  118A         
   371  00F7  1283               	bcf	status, 5	;RP0=0, select bank0
   372  00F8  1303               	bcf	status, 6	;RP2=0, select bank0
   373                           	
   374  00F9  085F               	movf	(0+?___lwdiv),w
   375  00FA  01C5               	clrf	(69)
   376  00FB  07C5               	addwf	(69)
   377  00FC  0860               	movf	(1+?___lwdiv),w
   378  00FD  01C6               	clrf	(69+1)
   379  00FE  07C6               	addwf	(69+1)
   380                           	line	82
   381                           ;main.c: 82: temp1= temp1%10;
   382  00FF  300A               	movlw	low(0Ah)
   383                           	
   384  0100  00E1               	movwf	(0+?___lwmod+02h)&07fh
   385  0101  3000               	movlw	high(0Ah)
   386  0102  00E2               	movwf	((0+?___lwmod+02h)&07fh)+1
   387                           	
   388                           	
   389  0103  0845               	movf	(69),w
   390  0104  01DF               	clrf	(?___lwmod)
   391  0105  07DF               	addwf	(?___lwmod)
   392  0106  0846               	movf	(69+1),w
   393  0107  01E0               	clrf	(?___lwmod+1)
   394  0108  07E0               	addwf	(?___lwmod+1)
   395  0109  120A  118A  233D   	fcall	___lwmod
              120A  118A         
   396  010E  1283               	bcf	status, 5	;RP0=0, select bank0
   397  010F  1303               	bcf	status, 6	;RP2=0, select bank0
   398                           	
   399  0110  085F               	movf	(0+?___lwmod),w
   400  0111  01C5               	clrf	(69)
   401  0112  07C5               	addwf	(69)
   402  0113  0860               	movf	(1+?___lwmod),w
   403  0114  01C6               	clrf	(69+1)
   404  0115  07C6               	addwf	(69+1)
   405                           	line	84
   406                           ;main.c: 84: Lcd8_Write_Char(temp1 | 0x30);
   407                           	
   408  0116  0845               	movf	(69),w
   409                           	
   410  0117  3830               	iorlw	030h
   411  0118  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   412                           	line	85
   413                           ;main.c: 85: Lcd8_Write_Char('.');
   414  011D  302E               	movlw	(02Eh)
   415  011E  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   416                           	line	86
   417                           ;main.c: 86: temp1= adc_result_an2%10;
   418  0123  300A               	movlw	low(0Ah)
   419  0124  1283               	bcf	status, 5	;RP0=0, select bank0
   420  0125  1303               	bcf	status, 6	;RP2=0, select bank0
   421                           	
   422  0126  00E1               	movwf	(0+?___lwmod+02h)&07fh
   423  0127  3000               	movlw	high(0Ah)
   424  0128  00E2               	movwf	((0+?___lwmod+02h)&07fh)+1
   425                           	
   426                           	
   427  0129  0847               	movf	(71),w
   428  012A  01DF               	clrf	(?___lwmod)
   429  012B  07DF               	addwf	(?___lwmod)
   430  012C  0848               	movf	(71+1),w
   431  012D  01E0               	clrf	(?___lwmod+1)
   432  012E  07E0               	addwf	(?___lwmod+1)
   433  012F  120A  118A  233D   	fcall	___lwmod
              120A  118A         
   434  0134  1283               	bcf	status, 5	;RP0=0, select bank0
   435  0135  1303               	bcf	status, 6	;RP2=0, select bank0
   436                           	
   437  0136  085F               	movf	(0+?___lwmod),w
   438  0137  01C5               	clrf	(69)
   439  0138  07C5               	addwf	(69)
   440  0139  0860               	movf	(1+?___lwmod),w
   441  013A  01C6               	clrf	(69+1)
   442  013B  07C6               	addwf	(69+1)
   443                           	line	88
   444                           ;main.c: 88: Lcd8_Write_Char(temp1 | 0x30);
   445                           	
   446  013C  0845               	movf	(69),w
   447                           	
   448  013D  3830               	iorlw	030h
   449  013E  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   450                           	line	89
   451                           ;main.c: 89: Lcd8_Write_Char('V');
   452  0143  3056               	movlw	(056h)
   453  0144  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   454                           	line	95
   455                           ;main.c: 95: adc_result_an2 = Read_Adc(0x04);
   456  0149  3004               	movlw	(04h)
   457  014A  120A  118A  2303   	fcall	_Read_Adc
              120A  118A         
   458  014F  1283               	bcf	status, 5	;RP0=0, select bank0
   459  0150  1303               	bcf	status, 6	;RP2=0, select bank0
   460                           	
   461  0151  085F               	movf	(0+?_Read_Adc),w
   462  0152  01C7               	clrf	(71)
   463  0153  07C7               	addwf	(71)
   464  0154  0860               	movf	(1+?_Read_Adc),w
   465  0155  01C8               	clrf	(71+1)
   466  0156  07C8               	addwf	(71+1)
   467                           	line	105
   468                           ;main.c: 105: temp1=adc_result_an2/100;
   469  0157  3064               	movlw	low(064h)
   470                           	
   471  0158  00E1               	movwf	(0+?___lwdiv+02h)&07fh
   472  0159  3000               	movlw	high(064h)
   473  015A  00E2               	movwf	((0+?___lwdiv+02h)&07fh)+1
   474                           	
   475                           	
   476  015B  0847               	movf	(71),w
   477  015C  01DF               	clrf	(?___lwdiv)
   478  015D  07DF               	addwf	(?___lwdiv)
   479  015E  0848               	movf	(71+1),w
   480  015F  01E0               	clrf	(?___lwdiv+1)
   481  0160  07E0               	addwf	(?___lwdiv+1)
   482  0161  120A  118A  2277   	fcall	___lwdiv
              120A  118A         
   483  0166  1283               	bcf	status, 5	;RP0=0, select bank0
   484  0167  1303               	bcf	status, 6	;RP2=0, select bank0
   485                           	
   486  0168  085F               	movf	(0+?___lwdiv),w
   487  0169  01C5               	clrf	(69)
   488  016A  07C5               	addwf	(69)
   489  016B  0860               	movf	(1+?___lwdiv),w
   490  016C  01C6               	clrf	(69+1)
   491  016D  07C6               	addwf	(69+1)
   492                           	line	107
   493                           ;main.c: 107: Lcd8_Set_Cursor((2),10);
   494  016E  300A               	movlw	(0Ah)
   495                           	
   496  016F  00DF               	movwf	(?_Lcd8_Set_Cursor)
   497  0170  3002               	movlw	(02h)
   498  0171  120A  118A  2455   	fcall	_Lcd8_Set_Cursor
              120A  118A         
   499                           	line	108
   500                           ;main.c: 108: Lcd8_Write_Char(temp1 | 0x30);
   501  0176  1283               	bcf	status, 5	;RP0=0, select bank0
   502  0177  1303               	bcf	status, 6	;RP2=0, select bank0
   503                           	
   504  0178  0845               	movf	(69),w
   505                           	
   506  0179  3830               	iorlw	030h
   507  017A  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   508                           	line	110
   509                           ;main.c: 110: temp1=adc_result_an2/10;
   510  017F  300A               	movlw	low(0Ah)
   511  0180  1283               	bcf	status, 5	;RP0=0, select bank0
   512  0181  1303               	bcf	status, 6	;RP2=0, select bank0
   513                           	
   514  0182  00E1               	movwf	(0+?___lwdiv+02h)&07fh
   515  0183  3000               	movlw	high(0Ah)
   516  0184  00E2               	movwf	((0+?___lwdiv+02h)&07fh)+1
   517                           	
   518                           	
   519  0185  0847               	movf	(71),w
   520  0186  01DF               	clrf	(?___lwdiv)
   521  0187  07DF               	addwf	(?___lwdiv)
   522  0188  0848               	movf	(71+1),w
   523  0189  01E0               	clrf	(?___lwdiv+1)
   524  018A  07E0               	addwf	(?___lwdiv+1)
   525  018B  120A  118A  2277   	fcall	___lwdiv
              120A  118A         
   526  0190  1283               	bcf	status, 5	;RP0=0, select bank0
   527  0191  1303               	bcf	status, 6	;RP2=0, select bank0
   528                           	
   529  0192  085F               	movf	(0+?___lwdiv),w
   530  0193  01C5               	clrf	(69)
   531  0194  07C5               	addwf	(69)
   532  0195  0860               	movf	(1+?___lwdiv),w
   533  0196  01C6               	clrf	(69+1)
   534  0197  07C6               	addwf	(69+1)
   535                           	line	111
   536                           ;main.c: 111: temp1= temp1%10;
   537  0198  300A               	movlw	low(0Ah)
   538                           	
   539  0199  00E1               	movwf	(0+?___lwmod+02h)&07fh
   540  019A  3000               	movlw	high(0Ah)
   541  019B  00E2               	movwf	((0+?___lwmod+02h)&07fh)+1
   542                           	
   543                           	
   544  019C  0845               	movf	(69),w
   545  019D  01DF               	clrf	(?___lwmod)
   546  019E  07DF               	addwf	(?___lwmod)
   547  019F  0846               	movf	(69+1),w
   548  01A0  01E0               	clrf	(?___lwmod+1)
   549  01A1  07E0               	addwf	(?___lwmod+1)
   550  01A2  120A  118A  233D   	fcall	___lwmod
              120A  118A         
   551  01A7  1283               	bcf	status, 5	;RP0=0, select bank0
   552  01A8  1303               	bcf	status, 6	;RP2=0, select bank0
   553                           	
   554  01A9  085F               	movf	(0+?___lwmod),w
   555  01AA  01C5               	clrf	(69)
   556  01AB  07C5               	addwf	(69)
   557  01AC  0860               	movf	(1+?___lwmod),w
   558  01AD  01C6               	clrf	(69+1)
   559  01AE  07C6               	addwf	(69+1)
   560                           	line	113
   561                           ;main.c: 113: Lcd8_Write_Char(temp1 | 0x30);
   562                           	
   563  01AF  0845               	movf	(69),w
   564                           	
   565  01B0  3830               	iorlw	030h
   566  01B1  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   567                           	line	114
   568                           ;main.c: 114: Lcd8_Write_Char('.');
   569  01B6  302E               	movlw	(02Eh)
   570  01B7  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   571                           	line	115
   572                           ;main.c: 115: temp1= adc_result_an2%10;
   573  01BC  300A               	movlw	low(0Ah)
   574  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
   575  01BE  1303               	bcf	status, 6	;RP2=0, select bank0
   576                           	
   577  01BF  00E1               	movwf	(0+?___lwmod+02h)&07fh
   578  01C0  3000               	movlw	high(0Ah)
   579  01C1  00E2               	movwf	((0+?___lwmod+02h)&07fh)+1
   580                           	
   581                           	
   582  01C2  0847               	movf	(71),w
   583  01C3  01DF               	clrf	(?___lwmod)
   584  01C4  07DF               	addwf	(?___lwmod)
   585  01C5  0848               	movf	(71+1),w
   586  01C6  01E0               	clrf	(?___lwmod+1)
   587  01C7  07E0               	addwf	(?___lwmod+1)
   588  01C8  120A  118A  233D   	fcall	___lwmod
              120A  118A         
   589  01CD  1283               	bcf	status, 5	;RP0=0, select bank0
   590  01CE  1303               	bcf	status, 6	;RP2=0, select bank0
   591                           	
   592  01CF  085F               	movf	(0+?___lwmod),w
   593  01D0  01C5               	clrf	(69)
   594  01D1  07C5               	addwf	(69)
   595  01D2  0860               	movf	(1+?___lwmod),w
   596  01D3  01C6               	clrf	(69+1)
   597  01D4  07C6               	addwf	(69+1)
   598                           	line	117
   599                           ;main.c: 117: Lcd8_Write_Char(temp1 | 0x30);
   600                           	
   601  01D5  0845               	movf	(69),w
   602                           	
   603  01D6  3830               	iorlw	030h
   604  01D7  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   605                           	line	119
   606                           ;main.c: 119: Lcd8_Write_Char('m');
   607  01DC  306D               	movlw	(06Dh)
   608  01DD  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   609                           	line	120
   610                           ;main.c: 120: Lcd8_Write_Char('A');
   611  01E2  3041               	movlw	(041h)
   612  01E3  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   613                           	line	130
   614                           ;main.c: 130: Start_Timer(0,2000);
   615  01E8  30D0               	movlw	low(07D0h)
   616  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
   617  01EA  1303               	bcf	status, 6	;RP2=0, select bank0
   618                           	
   619  01EB  00DF               	movwf	(?_Start_Timer)
   620  01EC  3007               	movlw	high(07D0h)
   621  01ED  00E0               	movwf	((?_Start_Timer))+1
   622  01EE  3000               	movlw	(0)
   623  01EF  120A  118A  2473   	fcall	_Start_Timer
              120A  118A         
   624                           	line	133
   625                           	
   626  01F4                     l16:	
   627                           	line	142
   628                           	
   629  01F4                     l13:	
   630                           	line	49
   631  01F4  2877               	goto	l14
   632                           	global	start
   633  01F5  120A  118A  2812   	ljmp	start
   634                           ; =============== function _main ends =========
                                 ======
   635                           
   636                           GLOBAL __end_of_main
   637  01F8                     	__end_of_main:
   638                           	FNSIZE	_main,0,0
   639                           	psect	maintext
   640                           	line	143
   641                           	signat	_main,88
   642                           	global	_Lcd8_Write_String
   643                           	global	??_Lcd8_Write_String
   644                           	global	?_Lcd8_Write_String
   645                           
   646                           ; *************** function _Lcd8_Write_String *
                                 **************
   647                           ; Defined at:
   648                           ;		line 65 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\LCD.c"
   649                           ; Parameters:
   650                           ;		a           	reg:   wr	type: PTR unsigned ch
                                 ar ; Largest target is 9
   651                           ;		 -> STR_2(9), STR_1(9), 
   652                           ; Auto variables:
   653                           ;		a           	       	type: PTR unsigned char
                                  ; Largest target is 9
   654                           ;		 -> STR_2(9), STR_1(9), 
   655                           ;		i           	       	type: int 
   656                           ; Return value:
   657                           ;		type: void 
   658                           ;		size: 0
   659                           ; Registers used:
   660                           ;		wreg, status,2, status,0, pclath, cstack
   661                           ; Tracked objects:
   662                           ;		On entry : 0/0
   663                           ;		On exit  : 0/0
   664                           ;		Unchanged: 0/0
   665                           ; Data sizes:
   666                           ;		Autos:    3
   667                           ;		Params:   0
   668                           ;		Temp:     0
   669                           ;		Total:    3
   670                           ; This function calls:
   671                           ;		_Lcd8_Write_Char
   672                           ; This function is called by:
   673                           ;		_main
   674                           ; This function uses a non-reentrant model
   675                           ; 
   676                           	psect	text163,local,class=CODE,delta=2
   677                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\LCD.c"
   678                           	line	65
   679                           ;LCD.c: 64: void Lcd8_Write_String(char *a)
   680                           ;LCD.c: 65: {
   681                           	
   682  03DE                     _Lcd8_Write_String:	
   683                           ; Regs used in _Lcd8_Write_String: [wreg+status
                                 ,2+status,0+pclath+cstack]
   684                           ;_Lcd8_Write_String_a stored from wreg
   685                           	line	67
   686  03DE  1283               	bcf	status, 5	;RP0=0, select bank0
   687  03DF  1303               	bcf	status, 6	;RP2=0, select bank0
   688                           	
   689  03E0  00DF               	movwf	(_Lcd8_Write_String_a)
   690                           ;LCD.c: 66: int i;
   691                           ;LCD.c: 67: for(i=0;a[i]!='\0';i++)
   692  03E1  3000               	movlw	low(0)
   693                           	
   694  03E2  00E0               	movwf	(_Lcd8_Write_String_i)
   695  03E3  3000               	movlw	high(0)
   696  03E4  00E1               	movwf	((_Lcd8_Write_String_i))+1
   697  03E5  2BFA               	goto	l43
   698                           	line	68
   699                           	
   700  03E6                     l40:	
   701                           ;LCD.c: 68: Lcd8_Write_Char(a[i]);
   702                           	
   703                           	
   704  03E6  085F               	movf	(_Lcd8_Write_String_a),w
   705                           	
   706  03E7  0760               	addwf	(_Lcd8_Write_String_i),w
   707  03E8  120A  118A  2209   	fcall	stringdir
              120A  118A         
   708  03ED  120A  118A  2408   	fcall	_Lcd8_Write_Char
              120A  118A         
   709                           	line	67
   710  03F2  1283               	bcf	status, 5	;RP0=0, select bank0
   711  03F3  1303               	bcf	status, 6	;RP2=0, select bank0
   712                           	
   713  03F4  3001               	movlw	low(01h)
   714  03F5  07E0               	addwf	(_Lcd8_Write_String_i),f
   715  03F6  1803               	skipnc
   716  03F7  0AE1               	incf	(_Lcd8_Write_String_i+1),f
   717  03F8  3000               	movlw	high(01h)
   718  03F9  07E1               	addwf	(_Lcd8_Write_String_i+1),f
   719                           	
   720  03FA                     l43:	
   721                           	
   722                           	
   723  03FA  085F               	movf	(_Lcd8_Write_String_a),w
   724  03FB  1383               	bcf	status, 7	;select IRP bank0
   725                           	
   726  03FC  0760               	addwf	(_Lcd8_Write_String_i),w
   727  03FD  120A  118A  2209   	fcall	stringdir
              120A  118A         
   728  0402  3800               	iorlw	0
   729  0403  1D03               	skipz
   730  0404  2C06               	goto	u1561
   731  0405  2C07               	goto	u1560
   732  0406                     u1561:
   733  0406  2BE6               	goto	l40
   734  0407                     u1560:
   735                           	
   736  0407                     l41:	
   737                           	line	69
   738                           ;LCD.c: 69: }
   739  0407                     l39:	
   740  0407  0008               	return
   741                           ; =============== function _Lcd8_Write_String e
                                 nds ===============
   742                           
   743                           GLOBAL __end_of_Lcd8_Write_String
   744  0408                     	__end_of_Lcd8_Write_String:
   745                           	FNSIZE	_Lcd8_Write_String,3,0
   746                           	signat	_Lcd8_Write_String,4216
   747                           	global	_GetTimer_State
   748                           	global	??_GetTimer_State
   749                           	global	?_GetTimer_State
   750                           
   751                           ; *************** function _GetTimer_State ****
                                 ***********
   752                           ; Defined at:
   753                           ;		line 30 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\SW_TIMER.c"
   754                           ; Parameters:
   755                           ;		TimerID     	reg:   wr	type: unsigned char 
   756                           ; Auto variables:
   757                           ;		TimerID     	       	type: unsigned char 
   758                           ; Return value:
   759                           ;		type: unsigned char 
   760                           ;		size: 1
   761                           ; Registers used:
   762                           ;		wreg, fsr, status,2, status,0
   763                           ; Tracked objects:
   764                           ;		On entry : 0/0
   765                           ;		On exit  : 0/0
   766                           ;		Unchanged: 0/0
   767                           ; Data sizes:
   768                           ;		Autos:    1
   769                           ;		Params:   0
   770                           ;		Temp:     8
   771                           ;		Total:    9
   772                           ; This function calls:
   773                           ;		Nothing
   774                           ; This function is called by:
   775                           ;		_main
   776                           ; This function uses a non-reentrant model
   777                           ; 
   778                           	psect	text164,local,class=CODE,delta=2
   779                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\SW_TIMER.c"
   780                           	line	30
   781                           ;SW_TIMER.c: 29: unsigned char GetTimer_State(u
                                 nsigned char TimerID)
   782                           ;SW_TIMER.c: 30: {
   783                           	
   784  02C1                     _GetTimer_State:	
   785                           ; Regs used in _GetTimer_State: [wreg+fsr+statu
                                 s,2+status,0]
   786                           ;_GetTimer_State_TimerID stored from wreg
   787  02C1  1283               	bcf	status, 5	;RP0=0, select bank0
   788  02C2  1303               	bcf	status, 6	;RP2=0, select bank0
   789                           	
   790  02C3  00DF               	movwf	(_GetTimer_State_TimerID)
   791                           	line	31
   792                           ;SW_TIMER.c: 31: if ( TimerState[TimerID] == 1 
                                 )
   793                           	
   794  02C4  085F               	movf	(_GetTimer_State_TimerID),w
   795  02C5  1383               	bcf	status, 7	;select IRP bank0
   796                           	
   797  02C6  3E71               	addlw	113&0ffh
   798  02C7  0084               	movwf	fsr
   799                           	
   800  02C8  0800               	movf	indf,w
   801                           	
   802  02C9  3A01               	xorlw	01h
   803  02CA  1D03               	skipz
   804  02CB  2ACD               	goto	u1541
   805  02CC  2ACE               	goto	u1540
   806  02CD                     u1541:
   807  02CD  2AFD               	goto	l25
   808  02CE                     u1540:
   809                           	line	33
   810                           ;SW_TIMER.c: 32: {
   811                           ;SW_TIMER.c: 33: if( (Ref1ms_counter -TimerStar
                                 t[TimerID]) > TimerTimeOutVal[TimerID] )
   812                           	
   813  02CE  085F               	movf	(_GetTimer_State_TimerID),w
   814                           	
   815  02CF  00E0               	movwf	(??_GetTimer_State+1+0)
   816  02D0  0760               	addwf	(??_GetTimer_State+1+0),w
   817  02D1  3E55               	addlw	85&0ffh
   818  02D2  0084               	movwf	fsr
   819  02D3  0800               	movf	indf,w
   820  02D4  00E1               	movwf	(??_GetTimer_State+2+0)
   821  02D5  3001               	movlw	1
   822  02D6  0784               	addwf	fsr,f
   823  02D7  0800               	movf	indf,w
   824  02D8  00E2               	movwf	(??_GetTimer_State+2+0+1)
   825                           	
   826  02D9  0861               	movf	0+(??_GetTimer_State+2+0),w
   827  02DA  025D               	subwf	(93),w	;volatile
   828  02DB  00E3               	movwf	(??_GetTimer_State+4+0)
   829  02DC  0862               	movf	1+(??_GetTimer_State+2+0),w
   830  02DD  1C03               	skipc
   831  02DE  0A62               	incf	1+(??_GetTimer_State+2+0),w
   832  02DF  025E               	subwf	(93+1),w	;volatile
   833  02E0  00E4               	movwf	1+(??_GetTimer_State+4+0)
   834                           	
   835  02E1  085F               	movf	(_GetTimer_State_TimerID),w
   836                           	
   837  02E2  00E5               	movwf	(??_GetTimer_State+6+0)
   838  02E3  0765               	addwf	(??_GetTimer_State+6+0),w
   839  02E4  3E4D               	addlw	77&0ffh
   840  02E5  0084               	movwf	fsr
   841  02E6  0800               	movf	indf,w
   842  02E7  00E6               	movwf	(??_GetTimer_State+7+0)
   843  02E8  3001               	movlw	1
   844  02E9  0784               	addwf	fsr,f
   845  02EA  0800               	movf	indf,w
   846  02EB  00E7               	movwf	(??_GetTimer_State+7+0+1)
   847  02EC  0864               	movf	1+(??_GetTimer_State+4+0),w
   848  02ED  0267               	subwf	1+(??_GetTimer_State+7+0),w
   849  02EE  1D03               	skipz
   850  02EF  2AF2               	goto	u1555
   851  02F0  0863               	movf	0+(??_GetTimer_State+4+0),w
   852  02F1  0266               	subwf	0+(??_GetTimer_State+7+0),w
   853  02F2                     u1555:
   854  02F2  1803               	skipnc
   855  02F3  2AF5               	goto	u1551
   856  02F4  2AF6               	goto	u1550
   857  02F5                     u1551:
   858  02F5  2AFD               	goto	l25
   859  02F6                     u1550:
   860                           	line	34
   861                           ;SW_TIMER.c: 34: TimerState[TimerID] =3;
   862  02F6  3003               	movlw	(03h)
   863  02F7  00E0               	movwf	(??_GetTimer_State+1+0)
   864                           	
   865  02F8  085F               	movf	(_GetTimer_State_TimerID),w
   866                           	
   867  02F9  3E71               	addlw	113&0ffh
   868  02FA  0084               	movwf	fsr
   869                           	
   870  02FB  0860               	movf	(??_GetTimer_State+1+0),w
   871  02FC  0080               	movwf	indf
   872                           	
   873  02FD                     l26:	
   874                           	line	35
   875                           	
   876  02FD                     l25:	
   877                           	line	36
   878                           ;SW_TIMER.c: 35: }
   879                           ;SW_TIMER.c: 36: return TimerState[TimerID];
   880                           	
   881  02FD  085F               	movf	(_GetTimer_State_TimerID),w
   882                           	
   883  02FE  3E71               	addlw	113&0ffh
   884  02FF  0084               	movwf	fsr
   885                           	
   886  0300  0800               	movf	indf,w
   887                           	
   888  0301  2B02               	goto	l24
   889                           	line	37
   890                           ;SW_TIMER.c: 37: }
   891  0302                     l24:	
   892  0302  0008               	return
   893                           ; =============== function _GetTimer_State ends
                                  ===============
   894                           
   895                           GLOBAL __end_of_GetTimer_State
   896  0303                     	__end_of_GetTimer_State:
   897                           	FNSIZE	_GetTimer_State,9,0
   898                           	signat	_GetTimer_State,4217
   899                           	global	_init_SWTimer
   900                           	global	??_init_SWTimer
   901                           	global	?_init_SWTimer
   902                           
   903                           ; *************** function _init_SWTimer ******
                                 *********
   904                           ; Defined at:
   905                           ;		line 6 in file "I:\Embedded\PIC\PIC_16F873\P
                                 IC_16F873_ADC_LCD\Test_June6\SW_TIMER.c"
   906                           ; Parameters:
   907                           ;		None
   908                           ; Auto variables:
   909                           ;		counter     	       	type: unsigned char 
   910                           ; Return value:
   911                           ;		type: void 
   912                           ;		size: 0
   913                           ; Registers used:
   914                           ;		wreg, fsr, status,2, status,0
   915                           ; Tracked objects:
   916                           ;		On entry : 0/0
   917                           ;		On exit  : 0/0
   918                           ;		Unchanged: 0/0
   919                           ; Data sizes:
   920                           ;		Autos:    1
   921                           ;		Params:   0
   922                           ;		Temp:     1
   923                           ;		Total:    2
   924                           ; This function calls:
   925                           ;		Nothing
   926                           ; This function is called by:
   927                           ;		_main
   928                           ; This function uses a non-reentrant model
   929                           ; 
   930                           	psect	text165,local,class=CODE,delta=2
   931                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\SW_TIMER.c"
   932                           	line	6
   933                           ;SW_TIMER.c: 5: void init_SWTimer(void)
   934                           ;SW_TIMER.c: 6: {
   935                           	
   936  03AA                     _init_SWTimer:	
   937                           ; Regs used in _init_SWTimer: [wreg+fsr+status,
                                 2+status,0]
   938                           	line	7
   939                           ;SW_TIMER.c: 7: unsigned char counter=0;
   940  03AA  1003               	clrc
   941  03AB  1283               	bcf	status, 5	;RP0=0, select bank0
   942  03AC  1303               	bcf	status, 6	;RP2=0, select bank0
   943                           	
   944  03AD  3000               	movlw	0
   945  03AE  1803               	btfsc	status,0
   946  03AF  3001               	movlw	1
   947  03B0  00DF               	movwf	(_init_SWTimer_counter)
   948                           	line	9
   949                           ;SW_TIMER.c: 9: for (counter=0;counter <4 ; cou
                                 nter++)
   950  03B1  1003               	clrc
   951                           	
   952  03B2  3000               	movlw	0
   953  03B3  1803               	btfsc	status,0
   954  03B4  3001               	movlw	1
   955  03B5  00DF               	movwf	(_init_SWTimer_counter)
   956  03B6  2BB7               	goto	l20
   957                           	line	10
   958                           	
   959  03B7                     l20:	
   960                           	line	11
   961                           ;SW_TIMER.c: 10: {
   962                           ;SW_TIMER.c: 11: TimerStart[counter]=0;
   963                           	
   964  03B7  085F               	movf	(_init_SWTimer_counter),w
   965  03B8  1383               	bcf	status, 7	;select IRP bank0
   966                           	
   967  03B9  00E0               	movwf	(??_init_SWTimer+1+0)
   968  03BA  0760               	addwf	(??_init_SWTimer+1+0),w
   969  03BB  3E55               	addlw	85&0ffh
   970  03BC  0084               	movwf	fsr
   971  03BD  3000               	movlw	low(0)
   972  03BE  0080               	movwf	indf
   973  03BF  0A84               	incf	fsr,f
   974  03C0  3000               	movlw	high(0)
   975  03C1  0080               	movwf	indf
   976                           	line	12
   977                           ;SW_TIMER.c: 12: TimerState[counter] =2;
   978  03C2  3002               	movlw	(02h)
   979  03C3  00E0               	movwf	(??_init_SWTimer+1+0)
   980                           	
   981  03C4  085F               	movf	(_init_SWTimer_counter),w
   982                           	
   983  03C5  3E71               	addlw	113&0ffh
   984  03C6  0084               	movwf	fsr
   985                           	
   986  03C7  0860               	movf	(??_init_SWTimer+1+0),w
   987  03C8  0080               	movwf	indf
   988                           	line	13
   989                           ;SW_TIMER.c: 13: TimerTimeOutVal[counter]=0;
   990                           	
   991  03C9  085F               	movf	(_init_SWTimer_counter),w
   992                           	
   993  03CA  00E0               	movwf	(??_init_SWTimer+1+0)
   994  03CB  0760               	addwf	(??_init_SWTimer+1+0),w
   995  03CC  3E4D               	addlw	77&0ffh
   996  03CD  0084               	movwf	fsr
   997  03CE  3000               	movlw	low(0)
   998  03CF  0080               	movwf	indf
   999  03D0  0A84               	incf	fsr,f
  1000  03D1  3000               	movlw	high(0)
  1001  03D2  0080               	movwf	indf
  1002                           	line	9
  1003  03D3  3001               	movlw	(01h)
  1004  03D4  00E0               	movwf	(??_init_SWTimer+1+0)
  1005                           	
  1006  03D5  0860               	movf	(??_init_SWTimer+1+0),w
  1007  03D6  07DF               	addwf	(_init_SWTimer_counter),f
  1008  03D7  3004               	movlw	(04h)
  1009                           	
  1010  03D8  025F               	subwf	(_init_SWTimer_counter),w
  1011  03D9  1C03               	skipc
  1012  03DA  2BDC               	goto	u1501
  1013  03DB  2BDD               	goto	u1500
  1014  03DC                     u1501:
  1015  03DC  2BB7               	goto	l20
  1016  03DD                     u1500:
  1017                           	
  1018  03DD                     l21:	
  1019                           	line	18
  1020                           ;SW_TIMER.c: 15: }
  1021                           ;SW_TIMER.c: 18: }
  1022  03DD                     l19:	
  1023  03DD  0008               	return
  1024                           ; =============== function _init_SWTimer ends =
                                 ==============
  1025                           
  1026                           GLOBAL __end_of_init_SWTimer
  1027  03DE                     	__end_of_init_SWTimer:
  1028                           	FNSIZE	_init_SWTimer,2,0
  1029                           	signat	_init_SWTimer,88
  1030                           	global	_Lcd8_Set_Cursor
  1031                           	global	??_Lcd8_Set_Cursor
  1032                           	global	?_Lcd8_Set_Cursor
  1033                           
  1034                           ; *************** function _Lcd8_Set_Cursor ***
                                 ************
  1035                           ; Defined at:
  1036                           ;		line 30 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\LCD.c"
  1037                           ; Parameters:
  1038                           ;		a           	reg:   wr	type: unsigned char 
  1039                           ;		b           	offs:   0	type: unsigned char 
  1040                           ; Auto variables:
  1041                           ;		a           	       	type: unsigned char 
  1042                           ; Return value:
  1043                           ;		type: void 
  1044                           ;		size: 0
  1045                           ; Registers used:
  1046                           ;		wreg, status,2, status,0, pclath, cstack
  1047                           ; Tracked objects:
  1048                           ;		On entry : 300/0
  1049                           ;		On exit  : 0/0
  1050                           ;		Unchanged: 0/0
  1051                           ; Data sizes:
  1052                           ;		Autos:    1
  1053                           ;		Params:   1
  1054                           ;		Temp:     0
  1055                           ;		Total:    2
  1056                           ; This function calls:
  1057                           ;		_Lcd8_Cmd
  1058                           ; This function is called by:
  1059                           ;		_main
  1060                           ; This function uses a non-reentrant model
  1061                           ; 
  1062                           	psect	text166,local,class=CODE,delta=2
  1063                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\LCD.c"
  1064                           	line	30
  1065                           ;LCD.c: 29: void Lcd8_Set_Cursor(char a, char b
                                 )
  1066                           ;LCD.c: 30: {
  1067                           	
  1068  0455                     _Lcd8_Set_Cursor:	
  1069                           ; Regs used in _Lcd8_Set_Cursor: [wreg+status,2
                                 +status,0+pclath+cstack]
  1070                           ;_Lcd8_Set_Cursor_a stored from wreg
  1071                           	
  1072  0455  00E0               	movwf	(_Lcd8_Set_Cursor_a)
  1073                           	line	31
  1074                           ;LCD.c: 31: if(a == 1)
  1075                           	
  1076  0456  0860               	movf	(_Lcd8_Set_Cursor_a),w
  1077  0457  1383               	bcf	status, 7	;select IRP bank0
  1078                           	
  1079  0458  3A01               	xorlw	01h
  1080  0459  1D03               	skipz
  1081  045A  2C5C               	goto	u1571
  1082  045B  2C5D               	goto	u1570
  1083  045C                     u1571:
  1084  045C  2C65               	goto	l34
  1085  045D                     u1570:
  1086                           	line	32
  1087                           ;LCD.c: 32: Lcd8_Cmd(0x80 + b);
  1088                           	
  1089  045D  085F               	movf	(_Lcd8_Set_Cursor_b),w
  1090                           	
  1091  045E  3E80               	addlw	080h
  1092  045F  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1093  0464  2C72               	goto	l35
  1094                           	line	33
  1095                           	
  1096  0465                     l34:	
  1097                           ;LCD.c: 33: else if(a == 2)
  1098                           	
  1099  0465  0860               	movf	(_Lcd8_Set_Cursor_a),w
  1100                           	
  1101  0466  3A02               	xorlw	02h
  1102  0467  1D03               	skipz
  1103  0468  2C6A               	goto	u1581
  1104  0469  2C6B               	goto	u1580
  1105  046A                     u1581:
  1106  046A  2C72               	goto	l35
  1107  046B                     u1580:
  1108                           	line	34
  1109                           ;LCD.c: 34: Lcd8_Cmd(0xC0 + b);
  1110                           	
  1111  046B  085F               	movf	(_Lcd8_Set_Cursor_b),w
  1112                           	
  1113  046C  3EC0               	addlw	0C0h
  1114  046D  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1115                           	
  1116  0472                     l36:	
  1117                           	line	35
  1118                           	
  1119  0472                     l35:	
  1120                           ;LCD.c: 35: }
  1121  0472                     l33:	
  1122  0472  0008               	return
  1123                           ; =============== function _Lcd8_Set_Cursor end
                                 s ===============
  1124                           
  1125                           GLOBAL __end_of_Lcd8_Set_Cursor
  1126  0473                     	__end_of_Lcd8_Set_Cursor:
  1127                           	FNSIZE	_Lcd8_Set_Cursor,1,1
  1128                           	signat	_Lcd8_Set_Cursor,8312
  1129                           	global	_Start_Timer
  1130                           	global	??_Start_Timer
  1131                           	global	?_Start_Timer
  1132                           
  1133                           ; *************** function _Start_Timer *******
                                 ********
  1134                           ; Defined at:
  1135                           ;		line 22 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\SW_TIMER.c"
  1136                           ; Parameters:
  1137                           ;		Timer_ID    	reg:   wr	type: unsigned char 
  1138                           ;		TimeoutVal  	offs:   0	type: unsigned int 
  1139                           ; Auto variables:
  1140                           ;		Timer_ID    	       	type: unsigned char 
  1141                           ; Return value:
  1142                           ;		type: void 
  1143                           ;		size: 0
  1144                           ; Registers used:
  1145                           ;		wreg, fsr, status,2, status,0
  1146                           ; Tracked objects:
  1147                           ;		On entry : 300/0
  1148                           ;		On exit  : 0/0
  1149                           ;		Unchanged: 0/0
  1150                           ; Data sizes:
  1151                           ;		Autos:    1
  1152                           ;		Params:   2
  1153                           ;		Temp:     1
  1154                           ;		Total:    4
  1155                           ; This function calls:
  1156                           ;		Nothing
  1157                           ; This function is called by:
  1158                           ;		_main
  1159                           ; This function uses a non-reentrant model
  1160                           ; 
  1161                           	psect	text167,local,class=CODE,delta=2
  1162                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\SW_TIMER.c"
  1163                           	line	22
  1164                           ;SW_TIMER.c: 21: void Start_Timer(unsigned char
                                  Timer_ID , unsigned int TimeoutVal)
  1165                           ;SW_TIMER.c: 22: {
  1166                           	
  1167  0473                     _Start_Timer:	
  1168                           ; Regs used in _Start_Timer: [wreg+fsr+status,2
                                 +status,0]
  1169                           ;_Start_Timer_Timer_ID stored from wreg
  1170                           	
  1171  0473  00E1               	movwf	(_Start_Timer_Timer_ID)
  1172                           	line	23
  1173                           ;SW_TIMER.c: 23: TimerStart[Timer_ID] = Ref1ms_
                                 counter;
  1174                           	
  1175                           	
  1176  0474  0861               	movf	(_Start_Timer_Timer_ID),w
  1177  0475  1383               	bcf	status, 7	;select IRP bank0
  1178                           	
  1179  0476  00E2               	movwf	(??_Start_Timer+1+0)
  1180  0477  0762               	addwf	(??_Start_Timer+1+0),w
  1181  0478  3E55               	addlw	85&0ffh
  1182  0479  0084               	movwf	fsr
  1183  047A  085D               	movf	(93),w	;volatile
  1184  047B  0080               	movwf	indf
  1185  047C  0A84               	incf	fsr,f
  1186  047D  085E               	movf	(93+1),w	;volatile
  1187  047E  0080               	movwf	indf
  1188                           	line	24
  1189                           ;SW_TIMER.c: 24: TimerState[Timer_ID] =1;
  1190                           	
  1191  047F  0861               	movf	(_Start_Timer_Timer_ID),w
  1192                           	
  1193  0480  3E71               	addlw	113&0ffh
  1194  0481  0084               	movwf	fsr
  1195                           	
  1196  0482  0180               	clrf	indf
  1197  0483  1403               	bsf	status,0
  1198  0484  0D80               	rlf	indf,f
  1199                           	line	25
  1200                           ;SW_TIMER.c: 25: TimerTimeOutVal[Timer_ID] =Tim
                                 eoutVal;
  1201                           	
  1202                           	
  1203  0485  0861               	movf	(_Start_Timer_Timer_ID),w
  1204                           	
  1205  0486  00E2               	movwf	(??_Start_Timer+1+0)
  1206  0487  0762               	addwf	(??_Start_Timer+1+0),w
  1207  0488  3E4D               	addlw	77&0ffh
  1208  0489  0084               	movwf	fsr
  1209  048A  085F               	movf	(_Start_Timer_TimeoutVal),w
  1210  048B  0080               	movwf	indf
  1211  048C  0A84               	incf	fsr,f
  1212  048D  0860               	movf	(_Start_Timer_TimeoutVal+1),w
  1213  048E  0080               	movwf	indf
  1214                           	line	26
  1215                           ;SW_TIMER.c: 26: }
  1216  048F                     l23:	
  1217  048F  0008               	return
  1218                           ; =============== function _Start_Timer ends ==
                                 =============
  1219                           
  1220                           GLOBAL __end_of_Start_Timer
  1221  0490                     	__end_of_Start_Timer:
  1222                           	FNSIZE	_Start_Timer,2,2
  1223                           	signat	_Start_Timer,8312
  1224                           	global	_Read_Adc
  1225                           	global	??_Read_Adc
  1226                           	global	?_Read_Adc
  1227                           
  1228                           ; *************** function _Read_Adc **********
                                 *****
  1229                           ; Defined at:
  1230                           ;		line 65 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\DigIO.c"
  1231                           ; Parameters:
  1232                           ;		Channel     	reg:   wr	type: unsigned char 
  1233                           ; Auto variables:
  1234                           ;		Channel     	       	type: unsigned char 
  1235                           ; Return value:
  1236                           ;		type: unsigned int 
  1237                           ;		size: 2
  1238                           ; Registers used:
  1239                           ;		wreg, fsr, status,2, status,0
  1240                           ; Tracked objects:
  1241                           ;		On entry : 0/0
  1242                           ;		On exit  : 0/0
  1243                           ;		Unchanged: 0/0
  1244                           ; Data sizes:
  1245                           ;		Autos:    1
  1246                           ;		Params:   2
  1247                           ;		Temp:     2
  1248                           ;		Total:    5
  1249                           ; This function calls:
  1250                           ;		__delay
  1251                           ; This function is called by:
  1252                           ;		_main
  1253                           ; This function uses a non-reentrant model
  1254                           ; 
  1255                           	psect	text168,local,class=CODE,delta=2
  1256                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\DigIO.c"
  1257                           	line	65
  1258                           ;DigIO.c: 64: unsigned int Read_Adc(unsigned ch
                                 ar Channel)
  1259                           ;DigIO.c: 65: {
  1260                           	
  1261  0303                     _Read_Adc:	
  1262                           ; Regs used in _Read_Adc: [wreg+fsr+status,2+st
                                 atus,0]
  1263                           ;_Read_Adc_Channel stored from wreg
  1264                           	line	67
  1265  0303  1283               	bcf	status, 5	;RP0=0, select bank0
  1266  0304  1303               	bcf	status, 6	;RP2=0, select bank0
  1267                           	
  1268  0305  00E1               	movwf	(_Read_Adc_Channel)
  1269                           ;DigIO.c: 67: ADCON0 &= 0xE3;
  1270  0306  30E3               	movlw	(0E3h)
  1271  0307  00E2               	movwf	(??_Read_Adc+1+0)
  1272                           	
  1273  0308  0862               	movf	(??_Read_Adc+1+0),w
  1274  0309  059F               	andwf	(31),f	;volatile
  1275                           	line	68
  1276                           ;DigIO.c: 68: ADCON0 |= (Channel <<2);
  1277                           	
  1278  030A  0861               	movf	(_Read_Adc_Channel),w
  1279  030B  1383               	bcf	status, 7	;select IRP bank0
  1280                           	
  1281  030C  00E2               	movwf	(??_Read_Adc+1+0)
  1282  030D  3001               	movlw	(02h)-1
  1283  030E                     u1595:
  1284  030E  1003               	clrc
  1285  030F  0DE2               	rlf	(??_Read_Adc+1+0),f
  1286  0310  3EFF               	addlw	-1
  1287  0311  1D03               	skipz
  1288  0312  2B0E               	goto	u1595
  1289  0313  1003               	clrc
  1290  0314  0D62               	rlf	(??_Read_Adc+1+0),w
  1291  0315  00E3               	movwf	(??_Read_Adc+2+0)
  1292                           	
  1293  0316  0863               	movf	(??_Read_Adc+2+0),w
  1294  0317  049F               	iorwf	(31),f	;volatile
  1295                           	line	69
  1296                           ;DigIO.c: 69: _delay((unsigned long)((30)*(4000
                                 000/4000UL)));
  1297                           	
  1298  0318  3027               	movlw	39
  1299  0319  00E3               movwf	(??_Read_Adc+1+0+1),f
  1300  031A  30F5               	movlw	245
  1301  031B  00E2               movwf	(??_Read_Adc+1+0),f
  1302  031C                     u1757:
  1303  031C  0BE2               	decfsz	(??_Read_Adc+1+0),f
  1304  031D  2B1C               	goto	u1757
  1305  031E  0BE3               	decfsz	(??_Read_Adc+1+0+1),f
  1306  031F  2B1C               	goto	u1757
  1307                           
  1308                           	line	70
  1309                           ;DigIO.c: 70: GODONE = 1;
  1310  0320  1283               	bcf	status, 5	;RP0=0, select bank0
  1311  0321  1303               	bcf	status, 6	;RP2=0, select bank0
  1312  0322  149F               	bsf	(249/8),(249)&7
  1313                           	line	71
  1314                           ;DigIO.c: 71: while(GODONE == 1 );
  1315  0323  2B24               	goto	l9
  1316                           	
  1317  0324                     l9:	
  1318  0324  189F               	btfsc	(249/8),(249)&7
  1319  0325  2B27               	goto	u1601
  1320  0326  2B28               	goto	u1600
  1321  0327                     u1601:
  1322  0327  2B24               	goto	l9
  1323  0328                     u1600:
  1324                           	
  1325  0328                     l11:	
  1326                           	line	73
  1327                           	
  1328  0328  081E               	movf	(30),w	;volatile
  1329                           	
  1330  0329  00E2               	movwf	(??_Read_Adc+1+0)
  1331  032A  01E3               	clrf	(??_Read_Adc+1+0+1)
  1332  032B  3008               	movlw	08h
  1333  032C  0084               	movwf	fsr
  1334  032D                     u1615:
  1335  032D  1003               	clrc
  1336  032E  0DE2               	rlf	(??_Read_Adc+1+0),f
  1337  032F  0DE3               	rlf	(??_Read_Adc+1+1),f
  1338  0330  0B84               	decfsz	fsr,f
  1339  0331  2B2D               	goto	u1615
  1340  0332  1683               	bsf	status, 5	;RP0=1, select bank1
  1341  0333  1303               	bcf	status, 6	;RP2=0, select bank1
  1342                           	
  1343  0334  081E               	movf	(158)^080h,w	;volatile
  1344                           	
  1345  0335  1283               	bcf	status, 5	;RP0=0, select bank0
  1346  0336  1303               	bcf	status, 6	;RP2=0, select bank0
  1347  0337  0462               	iorwf	0+(??_Read_Adc+1+0),w
  1348                           	
  1349  0338  00DF               	movwf	(?_Read_Adc)
  1350  0339  0863               	movf	1+(??_Read_Adc+1+0),w
  1351  033A  00E0               	movwf	1+(?_Read_Adc)
  1352  033B  2B3C               	goto	l8
  1353                           	line	75
  1354                           ;DigIO.c: 75: }
  1355  033C                     l8:	
  1356  033C  0008               	return
  1357                           ; =============== function _Read_Adc ends =====
                                 ==========
  1358                           
  1359                           GLOBAL __end_of_Read_Adc
  1360  033D                     	__end_of_Read_Adc:
  1361                           	FNSIZE	_Read_Adc,3,2
  1362                           	signat	_Read_Adc,4218
  1363                           	global	_Lcd8_Init
  1364                           	global	??_Lcd8_Init
  1365                           	global	?_Lcd8_Init
  1366                           
  1367                           ; *************** function _Lcd8_Init *********
                                 ******
  1368                           ; Defined at:
  1369                           ;		line 38 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\LCD.c"
  1370                           ; Parameters:
  1371                           ;		None
  1372                           ; Auto variables:
  1373                           ;		None
  1374                           ; Return value:
  1375                           ;		type: void 
  1376                           ;		size: 0
  1377                           ; Registers used:
  1378                           ;		wreg, status,2, status,0, pclath, cstack
  1379                           ; Tracked objects:
  1380                           ;		On entry : 0/0
  1381                           ;		On exit  : 0/0
  1382                           ;		Unchanged: 0/0
  1383                           ; Data sizes:
  1384                           ;		Autos:    0
  1385                           ;		Params:   0
  1386                           ;		Temp:     2
  1387                           ;		Total:    2
  1388                           ; This function calls:
  1389                           ;		_Lcd8_Port
  1390                           ;		_Set_LCD_RS_off
  1391                           ;		__delay
  1392                           ;		_Lcd8_Cmd
  1393                           ; This function is called by:
  1394                           ;		_main
  1395                           ; This function uses a non-reentrant model
  1396                           ; 
  1397                           	psect	text169,local,class=CODE,delta=2
  1398                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\LCD.c"
  1399                           	line	38
  1400                           ;LCD.c: 37: void Lcd8_Init()
  1401                           ;LCD.c: 38: {
  1402                           	
  1403  0221                     _Lcd8_Init:	
  1404                           ; Regs used in _Lcd8_Init: [wreg+status,2+statu
                                 s,0+pclath+cstack]
  1405                           	line	39
  1406                           ;LCD.c: 39: Lcd8_Port(0x00);
  1407  0221  3000               	movlw	(0)
  1408  0222  120A  118A  24B8   	fcall	_Lcd8_Port
              120A  118A         
  1409                           	line	40
  1410                           ;LCD.c: 40: Set_LCD_RS_off();
  1411  0227  120A  118A  24C6   	fcall	_Set_LCD_RS_off
              120A  118A         
  1412                           	line	41
  1413                           ;LCD.c: 41: _delay((unsigned long)((25)*(400000
                                 0/4000UL)));
  1414  022C  1283               	bcf	status, 5	;RP0=0, select bank0
  1415  022D  1303               	bcf	status, 6	;RP2=0, select bank0
  1416                           	
  1417  022E  3021               	movlw	33
  1418  022F  00E0               movwf	(??_Lcd8_Init+0+0+1),f
  1419  0230  3076               	movlw	118
  1420  0231  00DF               movwf	(??_Lcd8_Init+0+0),f
  1421  0232                     u1767:
  1422  0232  0BDF               	decfsz	(??_Lcd8_Init+0+0),f
  1423  0233  2A32               	goto	u1767
  1424  0234  0BE0               	decfsz	(??_Lcd8_Init+0+0+1),f
  1425  0235  2A32               	goto	u1767
  1426  0236  0064               	clrwdt
  1427                           
  1428                           	line	43
  1429                           ;LCD.c: 43: Lcd8_Cmd(0x30);
  1430  0237  3030               	movlw	(030h)
  1431  0238  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1432                           	line	44
  1433                           ;LCD.c: 44: _delay((unsigned long)((5)*(4000000
                                 /4000UL)));
  1434  023D  1283               	bcf	status, 5	;RP0=0, select bank0
  1435  023E  1303               	bcf	status, 6	;RP2=0, select bank0
  1436                           	
  1437  023F  3007               	movlw	7
  1438  0240  00E0               movwf	(??_Lcd8_Init+0+0+1),f
  1439  0241  307D               	movlw	125
  1440  0242  00DF               movwf	(??_Lcd8_Init+0+0),f
  1441  0243                     u1777:
  1442  0243  0BDF               	decfsz	(??_Lcd8_Init+0+0),f
  1443  0244  2A43               	goto	u1777
  1444  0245  0BE0               	decfsz	(??_Lcd8_Init+0+0+1),f
  1445  0246  2A43               	goto	u1777
  1446                           
  1447                           	line	45
  1448                           ;LCD.c: 45: Lcd8_Cmd(0x30);
  1449  0247  3030               	movlw	(030h)
  1450  0248  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1451                           	line	46
  1452                           ;LCD.c: 46: _delay((unsigned long)((15)*(400000
                                 0/4000UL)));
  1453  024D  1283               	bcf	status, 5	;RP0=0, select bank0
  1454  024E  1303               	bcf	status, 6	;RP2=0, select bank0
  1455                           	
  1456  024F  3014               	movlw	20
  1457  0250  00E0               movwf	(??_Lcd8_Init+0+0+1),f
  1458  0251  3079               	movlw	121
  1459  0252  00DF               movwf	(??_Lcd8_Init+0+0),f
  1460  0253                     u1787:
  1461  0253  0BDF               	decfsz	(??_Lcd8_Init+0+0),f
  1462  0254  2A53               	goto	u1787
  1463  0255  0BE0               	decfsz	(??_Lcd8_Init+0+0+1),f
  1464  0256  2A53               	goto	u1787
  1465  0257  2A58               	nop2
  1466                           
  1467                           	line	47
  1468                           ;LCD.c: 47: Lcd8_Cmd(0x30);
  1469  0258  3030               	movlw	(030h)
  1470  0259  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1471                           	line	49
  1472                           ;LCD.c: 49: Lcd8_Cmd(0x38);
  1473  025E  3038               	movlw	(038h)
  1474  025F  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1475                           	line	50
  1476                           ;LCD.c: 50: Lcd8_Cmd(0x0C);
  1477  0264  300C               	movlw	(0Ch)
  1478  0265  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1479                           	line	51
  1480                           ;LCD.c: 51: Lcd8_Cmd(0x01);
  1481  026A  3001               	movlw	(01h)
  1482  026B  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1483                           	line	52
  1484                           ;LCD.c: 52: Lcd8_Cmd(0x06);
  1485  0270  3006               	movlw	(06h)
  1486  0271  120A  118A  242F   	fcall	_Lcd8_Cmd
              120A  118A         
  1487                           	line	53
  1488                           ;LCD.c: 53: }
  1489  0276                     l37:	
  1490  0276  0008               	return
  1491                           ; =============== function _Lcd8_Init ends ====
                                 ===========
  1492                           
  1493                           GLOBAL __end_of_Lcd8_Init
  1494  0277                     	__end_of_Lcd8_Init:
  1495                           	FNSIZE	_Lcd8_Init,2,0
  1496                           	signat	_Lcd8_Init,88
  1497                           	global	_init_timer
  1498                           	global	??_init_timer
  1499                           	global	?_init_timer
  1500                           
  1501                           ; *************** function _init_timer ********
                                 *******
  1502                           ; Defined at:
  1503                           ;		line 8 in file "I:\Embedded\PIC\PIC_16F873\P
                                 IC_16F873_ADC_LCD\Test_June6\Timerc.c"
  1504                           ; Parameters:
  1505                           ;		None
  1506                           ; Auto variables:
  1507                           ;		None
  1508                           ; Return value:
  1509                           ;		type: void 
  1510                           ;		size: 0
  1511                           ; Registers used:
  1512                           ;		wreg, status,2, status,0
  1513                           ; Tracked objects:
  1514                           ;		On entry : 0/0
  1515                           ;		On exit  : 0/0
  1516                           ;		Unchanged: 0/0
  1517                           ; Data sizes:
  1518                           ;		Autos:    0
  1519                           ;		Params:   0
  1520                           ;		Temp:     0
  1521                           ;		Total:    0
  1522                           ; This function calls:
  1523                           ;		Nothing
  1524                           ; This function is called by:
  1525                           ;		_main
  1526                           ; This function uses a non-reentrant model
  1527                           ; 
  1528                           	psect	text170,local,class=CODE,delta=2
  1529                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\Timerc.c"
  1530                           	line	8
  1531                           ;Timerc.c: 6: void init_timer(void)
  1532                           ;Timerc.c: 8: {
  1533                           	
  1534  04AA                     _init_timer:	
  1535                           ; Regs used in _init_timer: [wreg+status,2+stat
                                 us,0]
  1536                           	line	10
  1537                           ;Timerc.c: 10: TMR1H = 0xFC;
  1538  04AA  30FC               	movlw	(0FCh)
  1539  04AB  1283               	bcf	status, 5	;RP0=0, select bank0
  1540  04AC  1303               	bcf	status, 6	;RP2=0, select bank0
  1541                           	
  1542  04AD  008F               	movwf	(15)	;volatile
  1543                           	line	11
  1544                           ;Timerc.c: 11: TMR1L =0x17;
  1545  04AE  3017               	movlw	(017h)
  1546                           	
  1547  04AF  008E               	movwf	(14)	;volatile
  1548                           	line	12
  1549                           ;Timerc.c: 12: T1CON = 0x01;
  1550                           	
  1551  04B0  0190               	clrf	(16)
  1552  04B1  1403               	bsf	status,0
  1553  04B2  0D90               	rlf	(16),f
  1554                           	line	14
  1555                           ;Timerc.c: 14: TMR1IF=0;
  1556  04B3  100C               	bcf	(96/8),(96)&7
  1557                           	line	15
  1558                           ;Timerc.c: 15: TMR1IE =1;
  1559  04B4  1683               	bsf	status, 5	;RP0=1, select bank1
  1560  04B5  1303               	bcf	status, 6	;RP2=0, select bank1
  1561  04B6  140C               	bsf	(1120/8)^080h,(1120)&7
  1562                           	line	18
  1563                           ;Timerc.c: 18: }
  1564  04B7                     l28:	
  1565  04B7  0008               	return
  1566                           ; =============== function _init_timer ends ===
                                 ============
  1567                           
  1568                           GLOBAL __end_of_init_timer
  1569  04B8                     	__end_of_init_timer:
  1570                           	FNSIZE	_init_timer,0,0
  1571                           	signat	_init_timer,88
  1572                           	global	_init_DigIO
  1573                           	global	??_init_DigIO
  1574                           	global	?_init_DigIO
  1575                           
  1576                           ; *************** function _init_DigIO ********
                                 *******
  1577                           ; Defined at:
  1578                           ;		line 5 in file "I:\Embedded\PIC\PIC_16F873\P
                                 IC_16F873_ADC_LCD\Test_June6\DigIO.c"
  1579                           ; Parameters:
  1580                           ;		None
  1581                           ; Auto variables:
  1582                           ;		None
  1583                           ; Return value:
  1584                           ;		type: void 
  1585                           ;		size: 0
  1586                           ; Registers used:
  1587                           ;		wreg, status,2, status,0
  1588                           ; Tracked objects:
  1589                           ;		On entry : BFF/0
  1590                           ;		On exit  : 0/0
  1591                           ;		Unchanged: 0/0
  1592                           ; Data sizes:
  1593                           ;		Autos:    0
  1594                           ;		Params:   0
  1595                           ;		Temp:     0
  1596                           ;		Total:    0
  1597                           ; This function calls:
  1598                           ;		Nothing
  1599                           ; This function is called by:
  1600                           ;		_main
  1601                           ; This function uses a non-reentrant model
  1602                           ; 
  1603                           	psect	text171,local,class=CODE,delta=2
  1604                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\DigIO.c"
  1605                           	line	5
  1606                           ;DigIO.c: 4: void init_DigIO(void)
  1607                           ;DigIO.c: 5: {
  1608                           	
  1609  0375                     _init_DigIO:	
  1610                           ; Regs used in _init_DigIO: [wreg+status,2+stat
                                 us,0]
  1611                           	line	8
  1612                           ;DigIO.c: 8: ANSEL = 0x1C;
  1613  0375  301C               	movlw	(01Ch)
  1614  0376  1683               	bsf	status, 5	;RP0=1, select bank3
  1615  0377  1703               	bsf	status, 6	;RP2=1, select bank3
  1616                           	
  1617  0378  0088               	movwf	(392)^0180h
  1618                           	line	9
  1619                           ;DigIO.c: 9: ANSELH=0;
  1620  0379  1003               	clrc
  1621                           	
  1622  037A  3000               	movlw	0
  1623  037B  1803               	btfsc	status,0
  1624  037C  3001               	movlw	1
  1625  037D  0089               	movwf	(393)^0180h
  1626                           	line	10
  1627                           ;DigIO.c: 10: C1ON=0;
  1628  037E  1283               	bcf	status, 5	;RP0=0, select bank2
  1629  037F  1703               	bsf	status, 6	;RP2=1, select bank2
  1630  0380  1387               	bcf	(2111/8)^0100h,(2111)&7
  1631                           	line	11
  1632                           ;DigIO.c: 11: C2ON=0;
  1633  0381  1388               	bcf	(2119/8)^0100h,(2119)&7
  1634                           	line	12
  1635                           ;DigIO.c: 12: TRISC =0x00;
  1636  0382  1003               	clrc
  1637  0383  1683               	bsf	status, 5	;RP0=1, select bank1
  1638  0384  1303               	bcf	status, 6	;RP2=0, select bank1
  1639                           	
  1640  0385  3000               	movlw	0
  1641  0386  1803               	btfsc	status,0
  1642  0387  3001               	movlw	1
  1643  0388  0087               	movwf	(135)^080h	;volatile
  1644                           	line	13
  1645                           ;DigIO.c: 13: PORTC=0x00;
  1646  0389  1003               	clrc
  1647  038A  1283               	bcf	status, 5	;RP0=0, select bank0
  1648  038B  1303               	bcf	status, 6	;RP2=0, select bank0
  1649                           	
  1650  038C  3000               	movlw	0
  1651  038D  1803               	btfsc	status,0
  1652  038E  3001               	movlw	1
  1653  038F  0087               	movwf	(7)	;volatile
  1654                           	line	15
  1655                           ;DigIO.c: 15: TRISB =0x00;
  1656  0390  1003               	clrc
  1657  0391  1683               	bsf	status, 5	;RP0=1, select bank1
  1658  0392  1303               	bcf	status, 6	;RP2=0, select bank1
  1659                           	
  1660  0393  3000               	movlw	0
  1661  0394  1803               	btfsc	status,0
  1662  0395  3001               	movlw	1
  1663  0396  0086               	movwf	(134)^080h	;volatile
  1664                           	line	16
  1665                           ;DigIO.c: 16: PORTB =0x00;
  1666  0397  1003               	clrc
  1667  0398  1283               	bcf	status, 5	;RP0=0, select bank0
  1668  0399  1303               	bcf	status, 6	;RP2=0, select bank0
  1669                           	
  1670  039A  3000               	movlw	0
  1671  039B  1803               	btfsc	status,0
  1672  039C  3001               	movlw	1
  1673  039D  0086               	movwf	(6)	;volatile
  1674                           	line	18
  1675                           ;DigIO.c: 18: TRISA =0x2C;
  1676  039E  302C               	movlw	(02Ch)
  1677  039F  1683               	bsf	status, 5	;RP0=1, select bank1
  1678  03A0  1303               	bcf	status, 6	;RP2=0, select bank1
  1679                           	
  1680  03A1  0085               	movwf	(133)^080h	;volatile
  1681                           	line	22
  1682                           ;DigIO.c: 22: ADCS0=1;
  1683  03A2  1283               	bcf	status, 5	;RP0=0, select bank0
  1684  03A3  1303               	bcf	status, 6	;RP2=0, select bank0
  1685  03A4  171F               	bsf	(254/8),(254)&7
  1686                           	line	23
  1687                           ;DigIO.c: 23: ADON=1;
  1688  03A5  141F               	bsf	(248/8),(248)&7
  1689                           	line	24
  1690                           ;DigIO.c: 24: ADFM=1;
  1691  03A6  1683               	bsf	status, 5	;RP0=1, select bank1
  1692  03A7  1303               	bcf	status, 6	;RP2=0, select bank1
  1693  03A8  179F               	bsf	(1279/8)^080h,(1279)&7
  1694                           	line	25
  1695                           ;DigIO.c: 25: }
  1696  03A9                     l1:	
  1697  03A9  0008               	return
  1698                           ; =============== function _init_DigIO ends ===
                                 ============
  1699                           
  1700                           GLOBAL __end_of_init_DigIO
  1701  03AA                     	__end_of_init_DigIO:
  1702                           	FNSIZE	_init_DigIO,0,0
  1703                           	signat	_init_DigIO,88
  1704                           	global	___lwdiv
  1705                           	global	??___lwdiv
  1706                           	global	?___lwdiv
  1707                           
  1708                           ; *************** function ___lwdiv ***********
                                 ****
  1709                           ; Defined at:
  1710                           ;		line 5 in file "E:\Program Files\HI-TECH Sof
                                 tware\PICC\PRO\9.60\sources\lwdiv.c"
  1711                           ; Parameters:
  1712                           ;		dividend    	offs:   0	type: unsigned int 
  1713                           ;		divisor     	offs:   2	type: unsigned int 
  1714                           ; Auto variables:
  1715                           ;		counter     	       	type: unsigned char 
  1716                           ;		quotient    	       	type: unsigned int 
  1717                           ; Return value:
  1718                           ;		type: unsigned int 
  1719                           ;		size: 2
  1720                           ; Registers used:
  1721                           ;		wreg, status,2, status,0
  1722                           ; Tracked objects:
  1723                           ;		On entry : 300/0
  1724                           ;		On exit  : 0/0
  1725                           ;		Unchanged: 0/0
  1726                           ; Data sizes:
  1727                           ;		Autos:    3
  1728                           ;		Params:   4
  1729                           ;		Temp:     1
  1730                           ;		Total:    8
  1731                           ; This function calls:
  1732                           ;		Nothing
  1733                           ; This function is called by:
  1734                           ;		_main
  1735                           ; This function uses a non-reentrant model
  1736                           ; 
  1737                           	psect	text172,local,class=CODE,delta=2
  1738                           	file	"E:\Program Files\HI-TECH Software\PICC\P
                                 RO\9.60\sources\lwdiv.c"
  1739                           	line	5
  1740                           	
  1741  0277                     ___lwdiv:	
  1742                           ; Regs used in ___lwdiv: [wreg+status,2+status,
                                 0]
  1743                           	line	9
  1744  0277  3000               	movlw	low(0)
  1745                           	
  1746  0278  00E4               	movwf	(___lwdiv_quotient)
  1747  0279  3000               	movlw	high(0)
  1748  027A  00E5               	movwf	((___lwdiv_quotient))+1
  1749                           	line	10
  1750                           	
  1751  027B  0862               	movf	((___lwdiv_divisor+1))&07fh,w
  1752  027C  0461               	iorwf	((___lwdiv_divisor))&07fh,w
  1753  027D  1903               	skipnz
  1754  027E  2A80               	goto	u1621
  1755  027F  2A81               	goto	u1620
  1756  0280                     u1621:
  1757  0280  2AB9               	goto	l57
  1758  0281                     u1620:
  1759                           	line	11
  1760                           	
  1761  0281  01E3               	clrf	(___lwdiv_counter)
  1762  0282  1403               	bsf	status,0
  1763  0283  0DE3               	rlf	(___lwdiv_counter),f
  1764                           	line	12
  1765  0284  2A90               	goto	l58
  1766                           	
  1767  0285                     l59:	
  1768                           	line	13
  1769                           	
  1770  0285  3001               	movlw	01h
  1771  0286                     u1635:
  1772  0286  1003               	clrc
  1773  0287  0DE1               	rlf	(___lwdiv_divisor),f
  1774  0288  0DE2               	rlf	(___lwdiv_divisor+1),f
  1775  0289  3EFF               	addlw	-1
  1776  028A  1D03               	skipz
  1777  028B  2A86               	goto	u1635
  1778                           	line	14
  1779  028C  3001               	movlw	(01h)
  1780  028D  00E6               	movwf	(??___lwdiv+3+0)
  1781                           	
  1782  028E  0866               	movf	(??___lwdiv+3+0),w
  1783  028F  07E3               	addwf	(___lwdiv_counter),f
  1784                           	line	15
  1785                           	
  1786  0290                     l58:	
  1787                           	line	12
  1788                           	
  1789  0290  1FE2               	btfss	(___lwdiv_divisor+1),(15)&7
  1790  0291  2A93               	goto	u1641
  1791  0292  2A94               	goto	u1640
  1792  0293                     u1641:
  1793  0293  2A85               	goto	l59
  1794  0294                     u1640:
  1795                           	
  1796  0294                     l60:	
  1797                           	line	16
  1798                           	
  1799  0294                     l63:	
  1800                           	line	17
  1801                           	
  1802  0294  3001               	movlw	01h
  1803  0295                     u1655:
  1804  0295  1003               	clrc
  1805  0296  0DE4               	rlf	(___lwdiv_quotient),f
  1806  0297  0DE5               	rlf	(___lwdiv_quotient+1),f
  1807  0298  3EFF               	addlw	-1
  1808  0299  1D03               	skipz
  1809  029A  2A95               	goto	u1655
  1810                           	line	18
  1811                           	
  1812                           	
  1813  029B  0862               	movf	(___lwdiv_divisor+1),w
  1814  029C  0260               	subwf	(___lwdiv_dividend+1),w
  1815  029D  1D03               	skipz
  1816  029E  2AA1               	goto	u1665
  1817  029F  0861               	movf	(___lwdiv_divisor),w
  1818  02A0  025F               	subwf	(___lwdiv_dividend),w
  1819  02A1                     u1665:
  1820  02A1  1C03               	skipc
  1821  02A2  2AA4               	goto	u1661
  1822  02A3  2AA5               	goto	u1660
  1823  02A4                     u1661:
  1824  02A4  2AAC               	goto	l64
  1825  02A5                     u1660:
  1826                           	line	19
  1827                           	
  1828                           	
  1829  02A5  0861               	movf	(___lwdiv_divisor),w
  1830  02A6  02DF               	subwf	(___lwdiv_dividend),f
  1831  02A7  0862               	movf	(___lwdiv_divisor+1),w
  1832  02A8  1C03               	skipc
  1833  02A9  03E0               	decf	(___lwdiv_dividend+1),f
  1834  02AA  02E0               	subwf	(___lwdiv_dividend+1),f
  1835                           	line	20
  1836                           	
  1837  02AB  1464               	bsf	(___lwdiv_quotient)+(0/8),(0)&7
  1838                           	line	21
  1839                           	
  1840  02AC                     l64:	
  1841                           	line	22
  1842                           	
  1843  02AC  3001               	movlw	01h
  1844  02AD                     u1675:
  1845  02AD  1003               	clrc
  1846  02AE  0CE2               	rrf	(___lwdiv_divisor+1),f
  1847  02AF  0CE1               	rrf	(___lwdiv_divisor),f
  1848  02B0  3EFF               	addlw	-1
  1849  02B1  1D03               	skipz
  1850  02B2  2AAD               	goto	u1675
  1851                           	line	23
  1852                           	
  1853                           	
  1854  02B3  3001               	movlw	low(01h)
  1855  02B4  02E3               	subwf	(___lwdiv_counter),f
  1856  02B5  1D03               	btfss	status,2
  1857  02B6  2AB8               	goto	u1681
  1858  02B7  2AB9               	goto	u1680
  1859  02B8                     u1681:
  1860  02B8  2A94               	goto	l63
  1861  02B9                     u1680:
  1862                           	
  1863  02B9                     l62:	
  1864                           	line	24
  1865                           	
  1866  02B9                     l57:	
  1867                           	line	25
  1868                           	
  1869                           	
  1870  02B9  0864               	movf	(___lwdiv_quotient),w
  1871  02BA  01DF               	clrf	(?___lwdiv)
  1872  02BB  07DF               	addwf	(?___lwdiv)
  1873  02BC  0865               	movf	(___lwdiv_quotient+1),w
  1874  02BD  01E0               	clrf	(?___lwdiv+1)
  1875  02BE  07E0               	addwf	(?___lwdiv+1)
  1876  02BF  2AC0               	goto	l56
  1877                           	line	26
  1878  02C0                     l56:	
  1879  02C0  0008               	return
  1880                           ; =============== function ___lwdiv ends ======
                                 =========
  1881                           
  1882                           GLOBAL __end_of___lwdiv
  1883  02C1                     	__end_of___lwdiv:
  1884                           	FNSIZE	___lwdiv,4,4
  1885                           	signat	___lwdiv,8314
  1886                           	global	___lwmod
  1887                           	global	??___lwmod
  1888                           	global	?___lwmod
  1889                           
  1890                           ; *************** function ___lwmod ***********
                                 ****
  1891                           ; Defined at:
  1892                           ;		line 5 in file "E:\Program Files\HI-TECH Sof
                                 tware\PICC\PRO\9.60\sources\lwmod.c"
  1893                           ; Parameters:
  1894                           ;		dividend    	offs:   0	type: unsigned int 
  1895                           ;		divisor     	offs:   2	type: unsigned int 
  1896                           ; Auto variables:
  1897                           ;		counter     	       	type: unsigned char 
  1898                           ; Return value:
  1899                           ;		type: unsigned int 
  1900                           ;		size: 2
  1901                           ; Registers used:
  1902                           ;		wreg, status,2, status,0
  1903                           ; Tracked objects:
  1904                           ;		On entry : 300/0
  1905                           ;		On exit  : 0/0
  1906                           ;		Unchanged: 0/0
  1907                           ; Data sizes:
  1908                           ;		Autos:    1
  1909                           ;		Params:   4
  1910                           ;		Temp:     1
  1911                           ;		Total:    6
  1912                           ; This function calls:
  1913                           ;		Nothing
  1914                           ; This function is called by:
  1915                           ;		_main
  1916                           ; This function uses a non-reentrant model
  1917                           ; 
  1918                           	psect	text173,local,class=CODE,delta=2
  1919                           	file	"E:\Program Files\HI-TECH Software\PICC\P
                                 RO\9.60\sources\lwmod.c"
  1920                           	line	5
  1921                           	
  1922  033D                     ___lwmod:	
  1923                           ; Regs used in ___lwmod: [wreg+status,2+status,
                                 0]
  1924                           	line	8
  1925                           	
  1926  033D  0862               	movf	((___lwmod_divisor+1))&07fh,w
  1927  033E  0461               	iorwf	((___lwmod_divisor))&07fh,w
  1928  033F  1903               	skipnz
  1929  0340  2B42               	goto	u1691
  1930  0341  2B43               	goto	u1690
  1931  0342                     u1691:
  1932  0342  2B73               	goto	l66
  1933  0343                     u1690:
  1934                           	line	9
  1935                           	
  1936  0343  01E3               	clrf	(___lwmod_counter)
  1937  0344  1403               	bsf	status,0
  1938  0345  0DE3               	rlf	(___lwmod_counter),f
  1939                           	line	10
  1940  0346  2B52               	goto	l67
  1941                           	
  1942  0347                     l68:	
  1943                           	line	11
  1944                           	
  1945  0347  3001               	movlw	01h
  1946  0348                     u1705:
  1947  0348  1003               	clrc
  1948  0349  0DE1               	rlf	(___lwmod_divisor),f
  1949  034A  0DE2               	rlf	(___lwmod_divisor+1),f
  1950  034B  3EFF               	addlw	-1
  1951  034C  1D03               	skipz
  1952  034D  2B48               	goto	u1705
  1953                           	line	12
  1954  034E  3001               	movlw	(01h)
  1955  034F  00E4               	movwf	(??___lwmod+1+0)
  1956                           	
  1957  0350  0864               	movf	(??___lwmod+1+0),w
  1958  0351  07E3               	addwf	(___lwmod_counter),f
  1959                           	line	13
  1960                           	
  1961  0352                     l67:	
  1962                           	line	10
  1963                           	
  1964  0352  1FE2               	btfss	(___lwmod_divisor+1),(15)&7
  1965  0353  2B55               	goto	u1711
  1966  0354  2B56               	goto	u1710
  1967  0355                     u1711:
  1968  0355  2B47               	goto	l68
  1969  0356                     u1710:
  1970                           	
  1971  0356                     l69:	
  1972                           	line	14
  1973                           	
  1974  0356                     l72:	
  1975                           	line	15
  1976                           	
  1977                           	
  1978  0356  0862               	movf	(___lwmod_divisor+1),w
  1979  0357  0260               	subwf	(___lwmod_dividend+1),w
  1980  0358  1D03               	skipz
  1981  0359  2B5C               	goto	u1725
  1982  035A  0861               	movf	(___lwmod_divisor),w
  1983  035B  025F               	subwf	(___lwmod_dividend),w
  1984  035C                     u1725:
  1985  035C  1C03               	skipc
  1986  035D  2B5F               	goto	u1721
  1987  035E  2B60               	goto	u1720
  1988  035F                     u1721:
  1989  035F  2B66               	goto	l73
  1990  0360                     u1720:
  1991                           	line	16
  1992                           	
  1993                           	
  1994  0360  0861               	movf	(___lwmod_divisor),w
  1995  0361  02DF               	subwf	(___lwmod_dividend),f
  1996  0362  0862               	movf	(___lwmod_divisor+1),w
  1997  0363  1C03               	skipc
  1998  0364  03E0               	decf	(___lwmod_dividend+1),f
  1999  0365  02E0               	subwf	(___lwmod_dividend+1),f
  2000                           	
  2001  0366                     l73:	
  2002                           	line	17
  2003                           	
  2004  0366  3001               	movlw	01h
  2005  0367                     u1735:
  2006  0367  1003               	clrc
  2007  0368  0CE2               	rrf	(___lwmod_divisor+1),f
  2008  0369  0CE1               	rrf	(___lwmod_divisor),f
  2009  036A  3EFF               	addlw	-1
  2010  036B  1D03               	skipz
  2011  036C  2B67               	goto	u1735
  2012                           	line	18
  2013                           	
  2014                           	
  2015  036D  3001               	movlw	low(01h)
  2016  036E  02E3               	subwf	(___lwmod_counter),f
  2017  036F  1D03               	btfss	status,2
  2018  0370  2B72               	goto	u1741
  2019  0371  2B73               	goto	u1740
  2020  0372                     u1741:
  2021  0372  2B56               	goto	l72
  2022  0373                     u1740:
  2023                           	
  2024  0373                     l71:	
  2025                           	line	19
  2026                           	
  2027  0373                     l66:	
  2028                           	line	20
  2029  0373  2B74               	goto	l65
  2030                           	line	21
  2031  0374                     l65:	
  2032  0374  0008               	return
  2033                           ; =============== function ___lwmod ends ======
                                 =========
  2034                           
  2035                           GLOBAL __end_of___lwmod
  2036  0375                     	__end_of___lwmod:
  2037                           	FNSIZE	___lwmod,2,4
  2038                           	signat	___lwmod,8314
  2039                           	global	_Lcd8_Write_Char
  2040                           	global	??_Lcd8_Write_Char
  2041                           	global	?_Lcd8_Write_Char
  2042                           
  2043                           ; *************** function _Lcd8_Write_Char ***
                                 ************
  2044                           ; Defined at:
  2045                           ;		line 56 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\LCD.c"
  2046                           ; Parameters:
  2047                           ;		a           	reg:   wr	type: unsigned char 
  2048                           ; Auto variables:
  2049                           ;		a           	       	type: unsigned char 
  2050                           ; Return value:
  2051                           ;		type: void 
  2052                           ;		size: 0
  2053                           ; Registers used:
  2054                           ;		wreg, status,2, status,0, pclath, cstack
  2055                           ; Tracked objects:
  2056                           ;		On entry : 0/0
  2057                           ;		On exit  : 0/0
  2058                           ;		Unchanged: 0/0
  2059                           ; Data sizes:
  2060                           ;		Autos:    1
  2061                           ;		Params:   0
  2062                           ;		Temp:     2
  2063                           ;		Total:    3
  2064                           ; This function calls:
  2065                           ;		_Set_LCD_RS_on
  2066                           ;		_Lcd8_Port
  2067                           ;		_Set_LCD_EN_on
  2068                           ;		__delay
  2069                           ;		_Set_LCD_EN_off
  2070                           ; This function is called by:
  2071                           ;		_main
  2072                           ;		_Lcd8_Write_String
  2073                           ; This function uses a non-reentrant model
  2074                           ; 
  2075                           	psect	text174,local,class=CODE,delta=2
  2076                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\LCD.c"
  2077                           	line	56
  2078                           ;LCD.c: 55: void Lcd8_Write_Char(char a)
  2079                           ;LCD.c: 56: {
  2080                           	
  2081  0408                     _Lcd8_Write_Char:	
  2082                           ; Regs used in _Lcd8_Write_Char: [wreg+status,2
                                 +status,0+pclath+cstack]
  2083                           ;_Lcd8_Write_Char_a stored from wreg
  2084  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  2085  0409  1303               	bcf	status, 6	;RP2=0, select bank0
  2086                           	
  2087  040A  00E2               	movwf	(_Lcd8_Write_Char_a)
  2088                           	line	57
  2089                           ;LCD.c: 57: Set_LCD_RS_on();
  2090  040B  120A  118A  24D1   	fcall	_Set_LCD_RS_on
              120A  118A         
  2091                           	line	58
  2092                           ;LCD.c: 58: Lcd8_Port(a);
  2093  0410  1283               	bcf	status, 5	;RP0=0, select bank0
  2094  0411  1303               	bcf	status, 6	;RP2=0, select bank0
  2095                           	
  2096  0412  0862               	movf	(_Lcd8_Write_Char_a),w
  2097  0413  1383               	bcf	status, 7	;select IRP bank0
  2098                           	
  2099  0414  120A  118A  24B8   	fcall	_Lcd8_Port
              120A  118A         
  2100                           	line	59
  2101                           ;LCD.c: 59: Set_LCD_EN_on();
  2102  0419  120A  118A  24CD   	fcall	_Set_LCD_EN_on
              120A  118A         
  2103                           	line	60
  2104                           ;LCD.c: 60: _delay((unsigned long)((4)*(4000000
                                 /4000UL)));
  2105  041E  1283               	bcf	status, 5	;RP0=0, select bank0
  2106  041F  1303               	bcf	status, 6	;RP2=0, select bank0
  2107                           	
  2108  0420  3006               	movlw	6
  2109  0421  00E4               movwf	(??_Lcd8_Write_Char+1+0+1),f
  2110  0422  3030               	movlw	48
  2111  0423  00E3               movwf	(??_Lcd8_Write_Char+1+0),f
  2112  0424                     u1797:
  2113  0424  0BE3               	decfsz	(??_Lcd8_Write_Char+1+0),f
  2114  0425  2C24               	goto	u1797
  2115  0426  0BE4               	decfsz	(??_Lcd8_Write_Char+1+0+1),f
  2116  0427  2C24               	goto	u1797
  2117  0428  0064               	clrwdt
  2118                           
  2119                           	line	61
  2120                           ;LCD.c: 61: Set_LCD_EN_off();
  2121  0429  120A  118A  24BF   	fcall	_Set_LCD_EN_off
              120A  118A         
  2122                           	line	62
  2123                           ;LCD.c: 62: }
  2124  042E                     l38:	
  2125  042E  0008               	return
  2126                           ; =============== function _Lcd8_Write_Char end
                                 s ===============
  2127                           
  2128                           GLOBAL __end_of_Lcd8_Write_Char
  2129  042F                     	__end_of_Lcd8_Write_Char:
  2130                           	FNSIZE	_Lcd8_Write_Char,3,0
  2131                           	signat	_Lcd8_Write_Char,4216
  2132                           	global	_Lcd8_Cmd
  2133                           	global	??_Lcd8_Cmd
  2134                           	global	?_Lcd8_Cmd
  2135                           
  2136                           ; *************** function _Lcd8_Cmd **********
                                 *****
  2137                           ; Defined at:
  2138                           ;		line 16 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\LCD.c"
  2139                           ; Parameters:
  2140                           ;		a           	reg:   wr	type: unsigned char 
  2141                           ; Auto variables:
  2142                           ;		a           	       	type: unsigned char 
  2143                           ; Return value:
  2144                           ;		type: void 
  2145                           ;		size: 0
  2146                           ; Registers used:
  2147                           ;		wreg, status,2, status,0, pclath, cstack
  2148                           ; Tracked objects:
  2149                           ;		On entry : 0/0
  2150                           ;		On exit  : 0/0
  2151                           ;		Unchanged: 0/0
  2152                           ; Data sizes:
  2153                           ;		Autos:    1
  2154                           ;		Params:   0
  2155                           ;		Temp:     2
  2156                           ;		Total:    3
  2157                           ; This function calls:
  2158                           ;		_Set_LCD_RS_off
  2159                           ;		_Lcd8_Port
  2160                           ;		_Set_LCD_EN_on
  2161                           ;		__delay
  2162                           ;		_Set_LCD_EN_off
  2163                           ; This function is called by:
  2164                           ;		_Lcd8_Set_Cursor
  2165                           ;		_Lcd8_Init
  2166                           ; This function uses a non-reentrant model
  2167                           ; 
  2168                           	psect	text175,local,class=CODE,delta=2
  2169                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\LCD.c"
  2170                           	line	16
  2171                           ;LCD.c: 15: void Lcd8_Cmd(char a)
  2172                           ;LCD.c: 16: {
  2173                           	
  2174  042F                     _Lcd8_Cmd:	
  2175                           ; Regs used in _Lcd8_Cmd: [wreg+status,2+status
                                 ,0+pclath+cstack]
  2176                           ;_Lcd8_Cmd_a stored from wreg
  2177  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  2178  0430  1303               	bcf	status, 6	;RP2=0, select bank0
  2179                           	
  2180  0431  00E1               	movwf	(_Lcd8_Cmd_a)
  2181                           	line	17
  2182                           ;LCD.c: 17: Set_LCD_RS_off();
  2183  0432  120A  118A  24C6   	fcall	_Set_LCD_RS_off
              120A  118A         
  2184                           	line	18
  2185                           ;LCD.c: 18: Lcd8_Port(a);
  2186  0437  1283               	bcf	status, 5	;RP0=0, select bank0
  2187  0438  1303               	bcf	status, 6	;RP2=0, select bank0
  2188                           	
  2189  0439  0861               	movf	(_Lcd8_Cmd_a),w
  2190  043A  1383               	bcf	status, 7	;select IRP bank0
  2191                           	
  2192  043B  120A  118A  24B8   	fcall	_Lcd8_Port
              120A  118A         
  2193                           	line	19
  2194                           ;LCD.c: 19: Set_LCD_EN_on();
  2195  0440  120A  118A  24CD   	fcall	_Set_LCD_EN_on
              120A  118A         
  2196                           	line	20
  2197                           ;LCD.c: 20: _delay((unsigned long)((5)*(4000000
                                 /4000UL)));
  2198  0445  1283               	bcf	status, 5	;RP0=0, select bank0
  2199  0446  1303               	bcf	status, 6	;RP2=0, select bank0
  2200                           	
  2201  0447  3007               	movlw	7
  2202  0448  00E3               movwf	(??_Lcd8_Cmd+1+0+1),f
  2203  0449  307D               	movlw	125
  2204  044A  00E2               movwf	(??_Lcd8_Cmd+1+0),f
  2205  044B                     u1807:
  2206  044B  0BE2               	decfsz	(??_Lcd8_Cmd+1+0),f
  2207  044C  2C4B               	goto	u1807
  2208  044D  0BE3               	decfsz	(??_Lcd8_Cmd+1+0+1),f
  2209  044E  2C4B               	goto	u1807
  2210                           
  2211                           	line	21
  2212                           ;LCD.c: 21: Set_LCD_EN_off();
  2213  044F  120A  118A  24BF   	fcall	_Set_LCD_EN_off
              120A  118A         
  2214                           	line	22
  2215                           ;LCD.c: 22: }
  2216  0454                     l31:	
  2217  0454  0008               	return
  2218                           ; =============== function _Lcd8_Cmd ends =====
                                 ==========
  2219                           
  2220                           GLOBAL __end_of_Lcd8_Cmd
  2221  0455                     	__end_of_Lcd8_Cmd:
  2222                           	FNSIZE	_Lcd8_Cmd,3,0
  2223                           	signat	_Lcd8_Cmd,4216
  2224                           	global	_Set_LCD_RS_on
  2225                           	global	??_Set_LCD_RS_on
  2226                           	global	?_Set_LCD_RS_on
  2227                           
  2228                           ; *************** function _Set_LCD_RS_on *****
                                 **********
  2229                           ; Defined at:
  2230                           ;		line 39 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\DigIO.c"
  2231                           ; Parameters:
  2232                           ;		None
  2233                           ; Auto variables:
  2234                           ;		None
  2235                           ; Return value:
  2236                           ;		type: void 
  2237                           ;		size: 0
  2238                           ; Registers used:
  2239                           ;		None
  2240                           ; Tracked objects:
  2241                           ;		On entry : 300/0
  2242                           ;		On exit  : 0/0
  2243                           ;		Unchanged: 0/0
  2244                           ; Data sizes:
  2245                           ;		Autos:    0
  2246                           ;		Params:   0
  2247                           ;		Temp:     0
  2248                           ;		Total:    0
  2249                           ; This function calls:
  2250                           ;		Nothing
  2251                           ; This function is called by:
  2252                           ;		_Lcd8_Write_Char
  2253                           ; This function uses a non-reentrant model
  2254                           ; 
  2255                           	psect	text176,local,class=CODE,delta=2
  2256                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\DigIO.c"
  2257                           	line	39
  2258                           ;DigIO.c: 38: void Set_LCD_RS_on(void)
  2259                           ;DigIO.c: 39: {
  2260                           	
  2261  04D1                     _Set_LCD_RS_on:	
  2262                           ; Regs used in _Set_LCD_RS_on: []
  2263                           	line	40
  2264                           ;DigIO.c: 40: PORTB |= 0b00000001;
  2265                           	
  2266  04D1  1406               	bsf	(6)+(0/8),(0)&7	;volatile
  2267                           	line	41
  2268                           ;DigIO.c: 41: }
  2269  04D2                     l3:	
  2270  04D2  0008               	return
  2271                           ; =============== function _Set_LCD_RS_on ends 
                                 ===============
  2272                           
  2273                           GLOBAL __end_of_Set_LCD_RS_on
  2274  04D3                     	__end_of_Set_LCD_RS_on:
  2275                           	FNSIZE	_Set_LCD_RS_on,0,0
  2276                           	signat	_Set_LCD_RS_on,88
  2277                           	global	_Set_LCD_RS_off
  2278                           	global	??_Set_LCD_RS_off
  2279                           	global	?_Set_LCD_RS_off
  2280                           
  2281                           ; *************** function _Set_LCD_RS_off ****
                                 ***********
  2282                           ; Defined at:
  2283                           ;		line 44 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\DigIO.c"
  2284                           ; Parameters:
  2285                           ;		None
  2286                           ; Auto variables:
  2287                           ;		None
  2288                           ; Return value:
  2289                           ;		type: void 
  2290                           ;		size: 0
  2291                           ; Registers used:
  2292                           ;		wreg, status,2, status,0
  2293                           ; Tracked objects:
  2294                           ;		On entry : 0/0
  2295                           ;		On exit  : 0/0
  2296                           ;		Unchanged: 0/0
  2297                           ; Data sizes:
  2298                           ;		Autos:    0
  2299                           ;		Params:   0
  2300                           ;		Temp:     1
  2301                           ;		Total:    1
  2302                           ; This function calls:
  2303                           ;		Nothing
  2304                           ; This function is called by:
  2305                           ;		_Lcd8_Cmd
  2306                           ;		_Lcd8_Init
  2307                           ; This function uses a non-reentrant model
  2308                           ; 
  2309                           	psect	text177,local,class=CODE,delta=2
  2310                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\DigIO.c"
  2311                           	line	44
  2312                           ;DigIO.c: 43: void Set_LCD_RS_off(void)
  2313                           ;DigIO.c: 44: {
  2314                           	
  2315  04C6                     _Set_LCD_RS_off:	
  2316                           ; Regs used in _Set_LCD_RS_off: [wreg+status,2+
                                 status,0]
  2317                           	line	45
  2318                           ;DigIO.c: 45: PORTB &= 0b11111110;
  2319  04C6  30FE               	movlw	(0FEh)
  2320  04C7  1283               	bcf	status, 5	;RP0=0, select bank0
  2321  04C8  1303               	bcf	status, 6	;RP2=0, select bank0
  2322  04C9  00E4               	movwf	(??_Set_LCD_RS_off+0+0)
  2323                           	
  2324  04CA  0864               	movf	(??_Set_LCD_RS_off+0+0),w
  2325  04CB  0586               	andwf	(6),f	;volatile
  2326                           	line	46
  2327                           ;DigIO.c: 46: }
  2328  04CC                     l4:	
  2329  04CC  0008               	return
  2330                           ; =============== function _Set_LCD_RS_off ends
                                  ===============
  2331                           
  2332                           GLOBAL __end_of_Set_LCD_RS_off
  2333  04CD                     	__end_of_Set_LCD_RS_off:
  2334                           	FNSIZE	_Set_LCD_RS_off,1,0
  2335                           	signat	_Set_LCD_RS_off,88
  2336                           	global	_Lcd8_Port
  2337                           	global	??_Lcd8_Port
  2338                           	global	?_Lcd8_Port
  2339                           
  2340                           ; *************** function _Lcd8_Port *********
                                 ******
  2341                           ; Defined at:
  2342                           ;		line 60 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\DigIO.c"
  2343                           ; Parameters:
  2344                           ;		a           	reg:   wr	type: unsigned char 
  2345                           ; Auto variables:
  2346                           ;		a           	       	type: unsigned char 
  2347                           ; Return value:
  2348                           ;		type: void 
  2349                           ;		size: 0
  2350                           ; Registers used:
  2351                           ;		wreg
  2352                           ; Tracked objects:
  2353                           ;		On entry : 0/0
  2354                           ;		On exit  : 0/0
  2355                           ;		Unchanged: 0/0
  2356                           ; Data sizes:
  2357                           ;		Autos:    1
  2358                           ;		Params:   0
  2359                           ;		Temp:     0
  2360                           ;		Total:    1
  2361                           ; This function calls:
  2362                           ;		Nothing
  2363                           ; This function is called by:
  2364                           ;		_Lcd8_Cmd
  2365                           ;		_Lcd8_Init
  2366                           ;		_Lcd8_Write_Char
  2367                           ; This function uses a non-reentrant model
  2368                           ; 
  2369                           	psect	text178,local,class=CODE,delta=2
  2370                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\DigIO.c"
  2371                           	line	60
  2372                           ;DigIO.c: 59: void Lcd8_Port(char a)
  2373                           ;DigIO.c: 60: {
  2374                           	
  2375  04B8                     _Lcd8_Port:	
  2376                           ; Regs used in _Lcd8_Port: [wreg]
  2377                           ;_Lcd8_Port_a stored from wreg
  2378  04B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2379  04B9  1303               	bcf	status, 6	;RP2=0, select bank0
  2380                           	
  2381  04BA  00E5               	movwf	(_Lcd8_Port_a)
  2382                           	line	61
  2383                           ;DigIO.c: 61: PORTC=a;
  2384                           	
  2385  04BB  0865               	movf	(_Lcd8_Port_a),w
  2386  04BC  1383               	bcf	status, 7	;select IRP bank0
  2387                           	
  2388                           	
  2389  04BD  0087               	movwf	(7)	;volatile
  2390                           	line	62
  2391                           ;DigIO.c: 62: }
  2392  04BE                     l7:	
  2393  04BE  0008               	return
  2394                           ; =============== function _Lcd8_Port ends ====
                                 ===========
  2395                           
  2396                           GLOBAL __end_of_Lcd8_Port
  2397  04BF                     	__end_of_Lcd8_Port:
  2398                           	FNSIZE	_Lcd8_Port,1,0
  2399                           	signat	_Lcd8_Port,4216
  2400                           	global	_Set_LCD_EN_off
  2401                           	global	??_Set_LCD_EN_off
  2402                           	global	?_Set_LCD_EN_off
  2403                           
  2404                           ; *************** function _Set_LCD_EN_off ****
                                 ***********
  2405                           ; Defined at:
  2406                           ;		line 55 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\DigIO.c"
  2407                           ; Parameters:
  2408                           ;		None
  2409                           ; Auto variables:
  2410                           ;		None
  2411                           ; Return value:
  2412                           ;		type: void 
  2413                           ;		size: 0
  2414                           ; Registers used:
  2415                           ;		wreg, status,2, status,0
  2416                           ; Tracked objects:
  2417                           ;		On entry : 0/0
  2418                           ;		On exit  : 0/0
  2419                           ;		Unchanged: 0/0
  2420                           ; Data sizes:
  2421                           ;		Autos:    0
  2422                           ;		Params:   0
  2423                           ;		Temp:     1
  2424                           ;		Total:    1
  2425                           ; This function calls:
  2426                           ;		Nothing
  2427                           ; This function is called by:
  2428                           ;		_Lcd8_Cmd
  2429                           ;		_Lcd8_Write_Char
  2430                           ; This function uses a non-reentrant model
  2431                           ; 
  2432                           	psect	text179,local,class=CODE,delta=2
  2433                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\DigIO.c"
  2434                           	line	55
  2435                           ;DigIO.c: 54: void Set_LCD_EN_off(void)
  2436                           ;DigIO.c: 55: {
  2437                           	
  2438  04BF                     _Set_LCD_EN_off:	
  2439                           ; Regs used in _Set_LCD_EN_off: [wreg+status,2+
                                 status,0]
  2440                           	line	56
  2441                           ;DigIO.c: 56: PORTB &= 0b11111101;
  2442  04BF  30FD               	movlw	(0FDh)
  2443  04C0  1283               	bcf	status, 5	;RP0=0, select bank0
  2444  04C1  1303               	bcf	status, 6	;RP2=0, select bank0
  2445  04C2  00E5               	movwf	(??_Set_LCD_EN_off+0+0)
  2446                           	
  2447  04C3  0865               	movf	(??_Set_LCD_EN_off+0+0),w
  2448  04C4  0586               	andwf	(6),f	;volatile
  2449                           	line	57
  2450                           ;DigIO.c: 57: }
  2451  04C5                     l6:	
  2452  04C5  0008               	return
  2453                           ; =============== function _Set_LCD_EN_off ends
                                  ===============
  2454                           
  2455                           GLOBAL __end_of_Set_LCD_EN_off
  2456  04C6                     	__end_of_Set_LCD_EN_off:
  2457                           	FNSIZE	_Set_LCD_EN_off,1,0
  2458                           	signat	_Set_LCD_EN_off,88
  2459                           	global	_Set_LCD_EN_on
  2460                           	global	??_Set_LCD_EN_on
  2461                           	global	?_Set_LCD_EN_on
  2462                           
  2463                           ; *************** function _Set_LCD_EN_on *****
                                 **********
  2464                           ; Defined at:
  2465                           ;		line 50 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\DigIO.c"
  2466                           ; Parameters:
  2467                           ;		None
  2468                           ; Auto variables:
  2469                           ;		None
  2470                           ; Return value:
  2471                           ;		type: void 
  2472                           ;		size: 0
  2473                           ; Registers used:
  2474                           ;		None
  2475                           ; Tracked objects:
  2476                           ;		On entry : 0/0
  2477                           ;		On exit  : 0/0
  2478                           ;		Unchanged: 0/0
  2479                           ; Data sizes:
  2480                           ;		Autos:    0
  2481                           ;		Params:   0
  2482                           ;		Temp:     0
  2483                           ;		Total:    0
  2484                           ; This function calls:
  2485                           ;		Nothing
  2486                           ; This function is called by:
  2487                           ;		_Lcd8_Cmd
  2488                           ;		_Lcd8_Write_Char
  2489                           ; This function uses a non-reentrant model
  2490                           ; 
  2491                           	psect	text180,local,class=CODE,delta=2
  2492                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\DigIO.c"
  2493                           	line	50
  2494                           ;DigIO.c: 49: void Set_LCD_EN_on(void)
  2495                           ;DigIO.c: 50: {
  2496                           	
  2497  04CD                     _Set_LCD_EN_on:	
  2498                           ; Regs used in _Set_LCD_EN_on: []
  2499                           	line	51
  2500                           ;DigIO.c: 51: PORTB |= 0b00000010;
  2501  04CD  1283               	bcf	status, 5	;RP0=0, select bank0
  2502  04CE  1303               	bcf	status, 6	;RP2=0, select bank0
  2503                           	
  2504  04CF  1486               	bsf	(6)+(1/8),(1)&7	;volatile
  2505                           	line	52
  2506                           ;DigIO.c: 52: }
  2507  04D0                     l5:	
  2508  04D0  0008               	return
  2509                           ; =============== function _Set_LCD_EN_on ends 
                                 ===============
  2510                           
  2511                           GLOBAL __end_of_Set_LCD_EN_on
  2512  04D1                     	__end_of_Set_LCD_EN_on:
  2513                           	FNSIZE	_Set_LCD_EN_on,0,0
  2514                           	signat	_Set_LCD_EN_on,88
  2515                           	global	_isr
  2516                           	global	??_isr
  2517                           	global	?_isr
  2518                           
  2519                           ; *************** function _isr ***************
  2520                           ; Defined at:
  2521                           ;		line 25 in file "I:\Embedded\PIC\PIC_16F873\
                                 PIC_16F873_ADC_LCD\Test_June6\Timerc.c"
  2522                           ; Parameters:
  2523                           ;		None
  2524                           ; Auto variables:
  2525                           ;		None
  2526                           ; Return value:
  2527                           ;		type: void 
  2528                           ;		size: 0
  2529                           ; Registers used:
  2530                           ;		wreg
  2531                           ; Tracked objects:
  2532                           ;		On entry : 300/0
  2533                           ;		On exit  : 0/0
  2534                           ;		Unchanged: 0/0
  2535                           ; Data sizes:
  2536                           ;		Autos:    0
  2537                           ;		Params:   0
  2538                           ;		Temp:     4
  2539                           ;		Total:    4
  2540                           ; This function calls:
  2541                           ;		Nothing
  2542                           ; This function is called by:
  2543                           ;		Interrupt level 1
  2544                           ; This function uses a non-reentrant model
  2545                           ; 
  2546                           	psect	intrtext,class=CODE,delta=2
  2547                           	file	"I:\Embedded\PIC\PIC_16F873\PIC_16F873_AD
                                 C_LCD\Test_June6\Timerc.c"
  2548                           	line	25
  2549                           ;Timerc.c: 23: static void interrupt isr(void)
  2550                           ;Timerc.c: 25: {
  2551                           	
  2552  0490                     _isr:	
  2553                           ; Regs used in _isr: [wreg]
  2554                           	psect	intentry,class=CODE,delta=2
  2555                           global interrupt_function
  2556  0004                     interrupt_function:
  2557                           	global saved_w
  2558  0000                     	saved_w	set	btemp+1
  2559  0004  00FF               	movwf	saved_w
  2560  0005  0803               	movf	status,w
  2561  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  2562  0007  1303               	bcf	status, 6	;RP2=0, select bank0
  2563  0008  00E8               	movwf	(??_isr+0)
  2564  0009  0804               	movf	fsr,w
  2565  000A  00E9               	movwf	(??_isr+1)
  2566  000B  080A               	movf	pclath,w
  2567  000C  00EA               	movwf	(??_isr+2)
  2568  000D  087E               	movf	btemp+0,w
  2569  000E  00EB               	movwf	(??_isr+3)
  2570  000F  120A  118A  2C90   	ljmp	_isr
  2571                           	psect	intrtext
  2572                           	line	27
  2573                           ;Timerc.c: 27: if (TMR1IF)
  2574  0490  1C0C               	btfss	(96/8),(96)&7
  2575  0491  2C93               	goto	i1u1221
  2576  0492  2C94               	goto	i1u1220
  2577  0493                     i1u1221:
  2578  0493  2C9A               	goto	i1l30
  2579  0494                     i1u1220:
  2580                           	line	30
  2581                           ;Timerc.c: 29: {
  2582                           ;Timerc.c: 30: Ref1ms_counter++;
  2583                           	
  2584  0494  3001               	movlw	low(01h)
  2585  0495  07DD               	addwf	(93),f	;volatile
  2586  0496  1803               	skipnc
  2587  0497  0ADE               	incf	(93+1),f	;volatile
  2588  0498  3000               	movlw	high(01h)
  2589  0499  07DE               	addwf	(93+1),f	;volatile
  2590                           	line	31
  2591                           	
  2592  049A                     i1l30:	
  2593                           	line	32
  2594                           ;Timerc.c: 31: }
  2595                           ;Timerc.c: 32: TMR1H = 0xFC;
  2596  049A  30FC               	movlw	(0FCh)
  2597                           	
  2598  049B  008F               	movwf	(15)	;volatile
  2599                           	line	33
  2600                           ;Timerc.c: 33: TMR1L =0x17;
  2601  049C  3017               	movlw	(017h)
  2602                           	
  2603  049D  008E               	movwf	(14)	;volatile
  2604                           	line	34
  2605                           ;Timerc.c: 34: TMR1IF=0;
  2606  049E  100C               	bcf	(96/8),(96)&7
  2607                           	line	36
  2608                           ;Timerc.c: 36: }
  2609  049F                     i1l29:	
  2610  049F  086B               	movf	(??_isr+3),w
  2611  04A0  00FE               	movwf	btemp+0
  2612  04A1  086A               	movf	(??_isr+2),w
  2613  04A2  008A               	movwf	pclath
  2614  04A3  0869               	movf	(??_isr+1),w
  2615  04A4  0084               	movwf	fsr
  2616  04A5  0868               	movf	(??_isr+0),w
  2617  04A6  0083               	movwf	status
  2618  04A7  0EFF               	swapf	saved_w,f
  2619  04A8  0E7F               	swapf	saved_w,w
  2620  04A9  0009               	retfie
  2621                           ; =============== function _isr ends ==========
                                 =====
  2622                           
  2623                           GLOBAL __end_of_isr
  2624  04AA                     	__end_of_isr:
  2625                           	FNSIZE	_isr,4,0
  2626                           	signat	_isr,88
  2627                           	FNCALL	_main,_init_DigIO
  2628                           	FNCALL	_main,_init_timer
  2629                           	FNCALL	_main,_Lcd8_Init
  2630                           	FNCALL	_main,_init_SWTimer
  2631                           	FNCALL	_main,_Start_Timer
  2632                           	FNCALL	_main,_Lcd8_Set_Cursor
  2633                           	FNCALL	_main,_Lcd8_Write_String
  2634                           	FNCALL	_main,_GetTimer_State
  2635                           	FNCALL	_main,_Read_Adc
  2636                           	FNCALL	_main,_Lcd8_Write_Char
  2637                           	FNCALL	_main,___lwdiv
  2638                           	FNCALL	_main,___lwmod
  2639                           	FNCALL	_Lcd8_Write_String,_Lcd8_Write_Char
  2640                           	FNCALL	_Lcd8_Set_Cursor,_Lcd8_Cmd
  2641                           	FNCALL	_Lcd8_Init,_Lcd8_Port
  2642                           	FNCALL	_Lcd8_Init,_Set_LCD_RS_off
  2643                           	FNCALL	_Lcd8_Init,_Lcd8_Cmd
  2644                           	FNCALL	_Lcd8_Write_Char,_Set_LCD_RS_on
  2645                           	FNCALL	_Lcd8_Write_Char,_Lcd8_Port
  2646                           	FNCALL	_Lcd8_Write_Char,_Set_LCD_EN_on
  2647                           	FNCALL	_Lcd8_Write_Char,_Set_LCD_EN_off
  2648                           	FNCALL	_Lcd8_Cmd,_Set_LCD_RS_off
  2649                           	FNCALL	_Lcd8_Cmd,_Lcd8_Port
  2650                           	FNCALL	_Lcd8_Cmd,_Set_LCD_EN_on
  2651                           	FNCALL	_Lcd8_Cmd,_Set_LCD_EN_off
  2652                           	FNROOT	_main
  2653                           	FNCALL	intlevel1,_isr
  2654                           	global	intlevel1
  2655                           	FNROOT	intlevel1
  2656                           	psect	strings,class=CODE,delta=2,reloc=256
  2657                           	global	stringdir,stringtab,__stringbase,string
                                 jmp
  2658  0200                     stringtab:
  2659  0200  00FE               	movwf	(btemp)&07Fh
  2660  0201  1FFE               	btfss	(btemp)&07Fh,7
  2661  0202  2A08               	goto	stringcode
  2662  0203  1383               	bcf	status,7
  2663  0204  187E               	btfsc	btemp&7Fh,0
  2664  0205  1783               	bsf	status,7
  2665  0206  0800               	movf	indf,w
  2666  0207  0008               	return
  2667  0208                     stringcode:
  2668  0208  0804               	movf	fsr,w
  2669  0209                     stringdir:
  2670  0209  00FE               movwf btemp&07Fh
  2671  020A  3002               movlw high(stringdir)
  2672  020B  008A               movwf pclath
  2673  020C  087E               movf btemp&07Fh,w
  2674  020D                     stringjmp:
  2675  020D  0782               	addwf pc
  2676  020E                     __stringbase:
  2677  020E  3400               	retlw	0
  2678                           	global	_TimerStart
  2679                           	psect	rbss_0,class=BANK0,space=1
  2680                           
  2681                           	DABS	1,85,8	;_TimerStart
  2682  0000                     	_TimerStart	set	0x55
  2683                           
  2684                           	global	_TimerTimeOutVal
  2685                           
  2686                           	DABS	1,77,8	;_TimerTimeOutVal
  2687  0000                     	_TimerTimeOutVal	set	0x4D
  2688                           
  2689                           	global	_TimerState
  2690                           	psect	common,class=COMMON,space=1
  2691                           
  2692                           	DABS	1,113,4	;_TimerState
  2693  0000                     	_TimerState	set	0x71
  2694                           
  2695                           	global	_Ref1ms_counter
  2696                           	psect	rbss_0
  2697                           
  2698                           	DABS	1,93,2	;_Ref1ms_counter
  2699  0000                     	_Ref1ms_counter	set	0x5D
  2700                           
  2701                           	global	_adc_result_an2
  2702                           
  2703                           	DABS	1,71,2	;_adc_result_an2
  2704  0000                     	_adc_result_an2	set	0x47
  2705                           
  2706                           	global	_temp1
  2707                           
  2708                           	DABS	1,69,2	;_temp1
  2709  0000                     	_temp1	set	0x45
  2710                           
  2711                           	global	_temp2
  2712                           	global	_temp2
  2713                           
  2714                           	DABS	1,75,2	;_temp2
  2715  0000                     	_temp2	set	0x4B
  2716                           
  2717                           	global	_temp3
  2718                           	global	_temp3
  2719                           
  2720                           	DABS	1,73,2	;_temp3
  2721  0000                     	_temp3	set	0x49
  2722                           
  2723                           	global	_Elapsed_Hours
  2724                           	global	_Elapsed_Hours
  2725                           	psect	common
  2726                           
  2727                           	DABS	1,117,1	;_Elapsed_Hours
  2728  0000                     	_Elapsed_Hours	set	0x75
  2729                           
  2730                           	global	_Elapsed_Mins
  2731                           	global	_Elapsed_Mins
  2732                           
  2733                           	DABS	1,123,1	;_Elapsed_Mins
  2734  0000                     	_Elapsed_Mins	set	0x7B
  2735                           
  2736                           	global	_Elapsed_Secs
  2737                           	global	_Elapsed_Secs
  2738                           
  2739                           	DABS	1,122,1	;_Elapsed_Secs
  2740  0000                     	_Elapsed_Secs	set	0x7A
  2741                           
  2742                           	global	_Input_Time
  2743                           	global	_Input_Time
  2744                           
  2745                           	DABS	1,125,1	;_Input_Time
  2746  0000                     	_Input_Time	set	0x7D
  2747                           
  2748                           	global	_Time_Hour
  2749                           	global	_Time_Hour
  2750                           
  2751                           	DABS	1,124,1	;_Time_Hour
  2752  0000                     	_Time_Hour	set	0x7C
  2753                           
  2754                           	global	_Time_Min
  2755                           	global	_Time_Min
  2756                           
  2757                           	DABS	1,119,1	;_Time_Min
  2758  0000                     	_Time_Min	set	0x77
  2759                           
  2760                           	global	_Time_Sec
  2761                           	global	_Time_Sec
  2762                           
  2763                           	DABS	1,118,1	;_Time_Sec
  2764  0000                     	_Time_Sec	set	0x76
  2765                           
  2766                           	global	_adc_result_an3
  2767                           	global	_adc_result_an3
  2768                           
  2769                           	DABS	1,121,1	;_adc_result_an3
  2770  0000                     	_adc_result_an3	set	0x79
  2771                           
  2772                           	global	_adc_result_an4
  2773                           	global	_adc_result_an4
  2774                           
  2775                           	DABS	1,120,1	;_adc_result_an4
  2776  0000                     	_adc_result_an4	set	0x78
  2777                           
  2778                           	global	_ADCON0
  2779  0000                     	_ADCON0	set	0x1F
  2780                           
  2781                           	global	_ADCON1
  2782                           	global	_ADCON1
  2783  0000                     	_ADCON1	set	0x9F
  2784                           
  2785                           	global	_ADRESH
  2786  0000                     	_ADRESH	set	0x1E
  2787                           
  2788                           	global	_ADRESL
  2789  0000                     	_ADRESL	set	0x9E
  2790                           
  2791                           	global	_ANSEL
  2792  0000                     	_ANSEL	set	0x188
  2793                           
  2794                           	global	_ANSELH
  2795  0000                     	_ANSELH	set	0x189
  2796                           
  2797                           	global	_BAUDCTL
  2798                           	global	_BAUDCTL
  2799  0000                     	_BAUDCTL	set	0x187
  2800                           
  2801                           	global	_CCP1CON
  2802                           	global	_CCP1CON
  2803  0000                     	_CCP1CON	set	0x17
  2804                           
  2805                           	global	_CCP2CON
  2806                           	global	_CCP2CON
  2807  0000                     	_CCP2CON	set	0x1D
  2808                           
  2809                           	global	_CCPR1H
  2810                           	global	_CCPR1H
  2811  0000                     	_CCPR1H	set	0x16
  2812                           
  2813                           	global	_CCPR1L
  2814                           	global	_CCPR1L
  2815  0000                     	_CCPR1L	set	0x15
  2816                           
  2817                           	global	_CCPR2H
  2818                           	global	_CCPR2H
  2819  0000                     	_CCPR2H	set	0x1C
  2820                           
  2821                           	global	_CCPR2L
  2822                           	global	_CCPR2L
  2823  0000                     	_CCPR2L	set	0x1B
  2824                           
  2825                           	global	_CM1CON0
  2826                           	global	_CM1CON0
  2827  0000                     	_CM1CON0	set	0x107
  2828                           
  2829                           	global	_CM2CON0
  2830                           	global	_CM2CON0
  2831  0000                     	_CM2CON0	set	0x108
  2832                           
  2833                           	global	_CM2CON1
  2834                           	global	_CM2CON1
  2835  0000                     	_CM2CON1	set	0x109
  2836                           
  2837                           	global	_ECCPAS
  2838                           	global	_ECCPAS
  2839  0000                     	_ECCPAS	set	0x9C
  2840                           
  2841                           	global	_EEADR
  2842                           	global	_EEADR
  2843  0000                     	_EEADR	set	0x10D
  2844                           
  2845                           	global	_EEADRH
  2846                           	global	_EEADRH
  2847  0000                     	_EEADRH	set	0x10F
  2848                           
  2849                           	global	_EEADRL
  2850                           	global	_EEADRL
  2851  0000                     	_EEADRL	set	0x10D
  2852                           
  2853                           	global	_EECON1
  2854                           	global	_EECON1
  2855  0000                     	_EECON1	set	0x18C
  2856                           
  2857                           	global	_EECON2
  2858                           	global	_EECON2
  2859  0000                     	_EECON2	set	0x18D
  2860                           
  2861                           	global	_EEDAT
  2862                           	global	_EEDAT
  2863  0000                     	_EEDAT	set	0x10C
  2864                           
  2865                           	global	_EEDATA
  2866                           	global	_EEDATA
  2867  0000                     	_EEDATA	set	0x10C
  2868                           
  2869                           	global	_EEDATH
  2870                           	global	_EEDATH
  2871  0000                     	_EEDATH	set	0x10E
  2872                           
  2873                           	global	_FSR
  2874                           	global	_FSR
  2875  0000                     	_FSR	set	0x4
  2876                           
  2877                           	global	_INDF
  2878                           	global	_INDF
  2879  0000                     	_INDF	set	0x0
  2880                           
  2881                           	global	_INTCON
  2882                           	global	_INTCON
  2883  0000                     	_INTCON	set	0xB
  2884                           
  2885                           	global	_IOCB
  2886                           	global	_IOCB
  2887  0000                     	_IOCB	set	0x96
  2888                           
  2889                           	global	_OPTION
  2890                           	global	_OPTION
  2891  0000                     	_OPTION	set	0x81
  2892                           
  2893                           	global	_OSCCON
  2894                           	global	_OSCCON
  2895  0000                     	_OSCCON	set	0x8F
  2896                           
  2897                           	global	_OSCTUNE
  2898                           	global	_OSCTUNE
  2899  0000                     	_OSCTUNE	set	0x90
  2900                           
  2901                           	global	_PCL
  2902                           	global	_PCL
  2903  0000                     	_PCL	set	0x2
  2904                           
  2905                           	global	_PCLATH
  2906                           	global	_PCLATH
  2907  0000                     	_PCLATH	set	0xA
  2908                           
  2909                           	global	_PCON
  2910                           	global	_PCON
  2911  0000                     	_PCON	set	0x8E
  2912                           
  2913                           	global	_PIE1
  2914                           	global	_PIE1
  2915  0000                     	_PIE1	set	0x8C
  2916                           
  2917                           	global	_PIE2
  2918                           	global	_PIE2
  2919  0000                     	_PIE2	set	0x8D
  2920                           
  2921                           	global	_PIR1
  2922                           	global	_PIR1
  2923  0000                     	_PIR1	set	0xC
  2924                           
  2925                           	global	_PIR2
  2926                           	global	_PIR2
  2927  0000                     	_PIR2	set	0xD
  2928                           
  2929                           	global	_PORTA
  2930                           	global	_PORTA
  2931  0000                     	_PORTA	set	0x5
  2932                           
  2933                           	global	_PORTB
  2934  0000                     	_PORTB	set	0x6
  2935                           
  2936                           	global	_PORTC
  2937  0000                     	_PORTC	set	0x7
  2938                           
  2939                           	global	_PORTE
  2940                           	global	_PORTE
  2941  0000                     	_PORTE	set	0x9
  2942                           
  2943                           	global	_PR2
  2944                           	global	_PR2
  2945  0000                     	_PR2	set	0x92
  2946                           
  2947                           	global	_PSTRCON
  2948                           	global	_PSTRCON
  2949  0000                     	_PSTRCON	set	0x9D
  2950                           
  2951                           	global	_PWM1CON
  2952                           	global	_PWM1CON
  2953  0000                     	_PWM1CON	set	0x9B
  2954                           
  2955                           	global	_RCREG
  2956                           	global	_RCREG
  2957  0000                     	_RCREG	set	0x1A
  2958                           
  2959                           	global	_RCSTA
  2960                           	global	_RCSTA
  2961  0000                     	_RCSTA	set	0x18
  2962                           
  2963                           	global	_SPBRG
  2964                           	global	_SPBRG
  2965  0000                     	_SPBRG	set	0x99
  2966                           
  2967                           	global	_SPBRGH
  2968                           	global	_SPBRGH
  2969  0000                     	_SPBRGH	set	0x9A
  2970                           
  2971                           	global	_SRCON
  2972                           	global	_SRCON
  2973  0000                     	_SRCON	set	0x185
  2974                           
  2975                           	global	_SSPADD
  2976                           	global	_SSPADD
  2977  0000                     	_SSPADD	set	0x93
  2978                           
  2979                           	global	_SSPBUF
  2980                           	global	_SSPBUF
  2981  0000                     	_SSPBUF	set	0x13
  2982                           
  2983                           	global	_SSPCON
  2984                           	global	_SSPCON
  2985  0000                     	_SSPCON	set	0x14
  2986                           
  2987                           	global	_SSPCON2
  2988                           	global	_SSPCON2
  2989  0000                     	_SSPCON2	set	0x91
  2990                           
  2991                           	global	_SSPMSK
  2992                           	global	_SSPMSK
  2993  0000                     	_SSPMSK	set	0x93
  2994                           
  2995                           	global	_SSPSTAT
  2996                           	global	_SSPSTAT
  2997  0000                     	_SSPSTAT	set	0x94
  2998                           
  2999                           	global	_STATUS
  3000                           	global	_STATUS
  3001  0000                     	_STATUS	set	0x3
  3002                           
  3003                           	global	_T1CON
  3004  0000                     	_T1CON	set	0x10
  3005                           
  3006                           	global	_T2CON
  3007                           	global	_T2CON
  3008  0000                     	_T2CON	set	0x12
  3009                           
  3010                           	global	_TMR0
  3011                           	global	_TMR0
  3012  0000                     	_TMR0	set	0x1
  3013                           
  3014                           	global	_TMR1H
  3015  0000                     	_TMR1H	set	0xF
  3016                           
  3017                           	global	_TMR1L
  3018  0000                     	_TMR1L	set	0xE
  3019                           
  3020                           	global	_TMR2
  3021                           	global	_TMR2
  3022  0000                     	_TMR2	set	0x11
  3023                           
  3024                           	global	_TRISA
  3025  0000                     	_TRISA	set	0x85
  3026                           
  3027                           	global	_TRISB
  3028  0000                     	_TRISB	set	0x86
  3029                           
  3030                           	global	_TRISC
  3031  0000                     	_TRISC	set	0x87
  3032                           
  3033                           	global	_TRISE
  3034                           	global	_TRISE
  3035  0000                     	_TRISE	set	0x89
  3036                           
  3037                           	global	_TXREG
  3038                           	global	_TXREG
  3039  0000                     	_TXREG	set	0x19
  3040                           
  3041                           	global	_TXSTA
  3042                           	global	_TXSTA
  3043  0000                     	_TXSTA	set	0x98
  3044                           
  3045                           	global	_VRCON
  3046                           	global	_VRCON
  3047  0000                     	_VRCON	set	0x97
  3048                           
  3049                           	global	_WDTCON
  3050                           	global	_WDTCON
  3051  0000                     	_WDTCON	set	0x105
  3052                           
  3053                           	global	_WPUB
  3054                           	global	_WPUB
  3055  0000                     	_WPUB	set	0x95
  3056                           
  3057                           	global	_ABDEN
  3058                           	global	_ABDEN
  3059  0000                     	_ABDEN	set	0xC38	;byte address: 0x187
  3060                           
  3061                           	global	_ABDOVF
  3062                           	global	_ABDOVF
  3063  0000                     	_ABDOVF	set	0xC3F	;byte address: 0x187
  3064                           
  3065                           	global	_ACKDT
  3066                           	global	_ACKDT
  3067  0000                     	_ACKDT	set	0x48D	;byte address: 0x91
  3068                           
  3069                           	global	_ACKEN
  3070                           	global	_ACKEN
  3071  0000                     	_ACKEN	set	0x48C	;byte address: 0x91
  3072                           
  3073                           	global	_ACKSTAT
  3074                           	global	_ACKSTAT
  3075  0000                     	_ACKSTAT	set	0x48E	;byte address: 0x91
  3076                           
  3077                           	global	_ADCS0
  3078  0000                     	_ADCS0	set	0xFE	;byte address: 0x1F
  3079                           
  3080                           	global	_ADCS1
  3081                           	global	_ADCS1
  3082  0000                     	_ADCS1	set	0xFF	;byte address: 0x1F
  3083                           
  3084                           	global	_ADDEN
  3085                           	global	_ADDEN
  3086  0000                     	_ADDEN	set	0xC3	;byte address: 0x18
  3087                           
  3088                           	global	_ADFM
  3089  0000                     	_ADFM	set	0x4FF	;byte address: 0x9F
  3090                           
  3091                           	global	_ADIE
  3092                           	global	_ADIE
  3093  0000                     	_ADIE	set	0x466	;byte address: 0x8C
  3094                           
  3095                           	global	_ADIF
  3096                           	global	_ADIF
  3097  0000                     	_ADIF	set	0x66	;byte address: 0xC
  3098                           
  3099                           	global	_ADON
  3100  0000                     	_ADON	set	0xF8	;byte address: 0x1F
  3101                           
  3102                           	global	_ANS0
  3103                           	global	_ANS0
  3104  0000                     	_ANS0	set	0xC40	;byte address: 0x188
  3105                           
  3106                           	global	_ANS1
  3107                           	global	_ANS1
  3108  0000                     	_ANS1	set	0xC41	;byte address: 0x188
  3109                           
  3110                           	global	_ANS10
  3111                           	global	_ANS10
  3112  0000                     	_ANS10	set	0xC4A	;byte address: 0x189
  3113                           
  3114                           	global	_ANS11
  3115                           	global	_ANS11
  3116  0000                     	_ANS11	set	0xC4B	;byte address: 0x189
  3117                           
  3118                           	global	_ANS12
  3119                           	global	_ANS12
  3120  0000                     	_ANS12	set	0xC4C	;byte address: 0x189
  3121                           
  3122                           	global	_ANS13
  3123                           	global	_ANS13
  3124  0000                     	_ANS13	set	0xC4D	;byte address: 0x189
  3125                           
  3126                           	global	_ANS2
  3127                           	global	_ANS2
  3128  0000                     	_ANS2	set	0xC42	;byte address: 0x188
  3129                           
  3130                           	global	_ANS3
  3131                           	global	_ANS3
  3132  0000                     	_ANS3	set	0xC43	;byte address: 0x188
  3133                           
  3134                           	global	_ANS4
  3135                           	global	_ANS4
  3136  0000                     	_ANS4	set	0xC44	;byte address: 0x188
  3137                           
  3138                           	global	_ANS8
  3139                           	global	_ANS8
  3140  0000                     	_ANS8	set	0xC48	;byte address: 0x189
  3141                           
  3142                           	global	_ANS9
  3143                           	global	_ANS9
  3144  0000                     	_ANS9	set	0xC49	;byte address: 0x189
  3145                           
  3146                           	global	_BCLIE
  3147                           	global	_BCLIE
  3148  0000                     	_BCLIE	set	0x46B	;byte address: 0x8D
  3149                           
  3150                           	global	_BCLIF
  3151                           	global	_BCLIF
  3152  0000                     	_BCLIF	set	0x6B	;byte address: 0xD
  3153                           
  3154                           	global	_BF
  3155                           	global	_BF
  3156  0000                     	_BF	set	0x4A0	;byte address: 0x94
  3157                           
  3158                           	global	_BOR
  3159                           	global	_BOR
  3160  0000                     	_BOR	set	0x470	;byte address: 0x8E
  3161                           
  3162                           	global	_BRG0
  3163                           	global	_BRG0
  3164  0000                     	_BRG0	set	0x4C8	;byte address: 0x99
  3165                           
  3166                           	global	_BRG1
  3167                           	global	_BRG1
  3168  0000                     	_BRG1	set	0x4C9	;byte address: 0x99
  3169                           
  3170                           	global	_BRG10
  3171                           	global	_BRG10
  3172  0000                     	_BRG10	set	0x4D2	;byte address: 0x9A
  3173                           
  3174                           	global	_BRG11
  3175                           	global	_BRG11
  3176  0000                     	_BRG11	set	0x4D3	;byte address: 0x9A
  3177                           
  3178                           	global	_BRG12
  3179                           	global	_BRG12
  3180  0000                     	_BRG12	set	0x4D4	;byte address: 0x9A
  3181                           
  3182                           	global	_BRG13
  3183                           	global	_BRG13
  3184  0000                     	_BRG13	set	0x4D5	;byte address: 0x9A
  3185                           
  3186                           	global	_BRG14
  3187                           	global	_BRG14
  3188  0000                     	_BRG14	set	0x4D6	;byte address: 0x9A
  3189                           
  3190                           	global	_BRG15
  3191                           	global	_BRG15
  3192  0000                     	_BRG15	set	0x4D7	;byte address: 0x9A
  3193                           
  3194                           	global	_BRG16
  3195                           	global	_BRG16
  3196  0000                     	_BRG16	set	0xC3B	;byte address: 0x187
  3197                           
  3198                           	global	_BRG2
  3199                           	global	_BRG2
  3200  0000                     	_BRG2	set	0x4CA	;byte address: 0x99
  3201                           
  3202                           	global	_BRG3
  3203                           	global	_BRG3
  3204  0000                     	_BRG3	set	0x4CB	;byte address: 0x99
  3205                           
  3206                           	global	_BRG4
  3207                           	global	_BRG4
  3208  0000                     	_BRG4	set	0x4CC	;byte address: 0x99
  3209                           
  3210                           	global	_BRG5
  3211                           	global	_BRG5
  3212  0000                     	_BRG5	set	0x4CD	;byte address: 0x99
  3213                           
  3214                           	global	_BRG6
  3215                           	global	_BRG6
  3216  0000                     	_BRG6	set	0x4CE	;byte address: 0x99
  3217                           
  3218                           	global	_BRG7
  3219                           	global	_BRG7
  3220  0000                     	_BRG7	set	0x4CF	;byte address: 0x99
  3221                           
  3222                           	global	_BRG8
  3223                           	global	_BRG8
  3224  0000                     	_BRG8	set	0x4D0	;byte address: 0x9A
  3225                           
  3226                           	global	_BRG9
  3227                           	global	_BRG9
  3228  0000                     	_BRG9	set	0x4D1	;byte address: 0x9A
  3229                           
  3230                           	global	_BRGH
  3231                           	global	_BRGH
  3232  0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  3233                           
  3234                           	global	_C1CH0
  3235                           	global	_C1CH0
  3236  0000                     	_C1CH0	set	0x838	;byte address: 0x107
  3237                           
  3238                           	global	_C1CH1
  3239                           	global	_C1CH1
  3240  0000                     	_C1CH1	set	0x839	;byte address: 0x107
  3241                           
  3242                           	global	_C1IE
  3243                           	global	_C1IE
  3244  0000                     	_C1IE	set	0x46D	;byte address: 0x8D
  3245                           
  3246                           	global	_C1IF
  3247                           	global	_C1IF
  3248  0000                     	_C1IF	set	0x6D	;byte address: 0xD
  3249                           
  3250                           	global	_C1OE
  3251                           	global	_C1OE
  3252  0000                     	_C1OE	set	0x83D	;byte address: 0x107
  3253                           
  3254                           	global	_C1ON
  3255  0000                     	_C1ON	set	0x83F	;byte address: 0x107
  3256                           
  3257                           	global	_C1OUT
  3258                           	global	_C1OUT
  3259  0000                     	_C1OUT	set	0x83E	;byte address: 0x107
  3260                           
  3261                           	global	_C1POL
  3262                           	global	_C1POL
  3263  0000                     	_C1POL	set	0x83C	;byte address: 0x107
  3264                           
  3265                           	global	_C1R
  3266                           	global	_C1R
  3267  0000                     	_C1R	set	0x83A	;byte address: 0x107
  3268                           
  3269                           	global	_C1RSEL
  3270                           	global	_C1RSEL
  3271  0000                     	_C1RSEL	set	0x84D	;byte address: 0x109
  3272                           
  3273                           	global	_C1SEN
  3274                           	global	_C1SEN
  3275  0000                     	_C1SEN	set	0xC2D	;byte address: 0x185
  3276                           
  3277                           	global	_C2CH0
  3278                           	global	_C2CH0
  3279  0000                     	_C2CH0	set	0x840	;byte address: 0x108
  3280                           
  3281                           	global	_C2CH1
  3282                           	global	_C2CH1
  3283  0000                     	_C2CH1	set	0x841	;byte address: 0x108
  3284                           
  3285                           	global	_C2IE
  3286                           	global	_C2IE
  3287  0000                     	_C2IE	set	0x46E	;byte address: 0x8D
  3288                           
  3289                           	global	_C2IF
  3290                           	global	_C2IF
  3291  0000                     	_C2IF	set	0x6E	;byte address: 0xD
  3292                           
  3293                           	global	_C2OE
  3294                           	global	_C2OE
  3295  0000                     	_C2OE	set	0x845	;byte address: 0x108
  3296                           
  3297                           	global	_C2ON
  3298  0000                     	_C2ON	set	0x847	;byte address: 0x108
  3299                           
  3300                           	global	_C2OUT
  3301                           	global	_C2OUT
  3302  0000                     	_C2OUT	set	0x846	;byte address: 0x108
  3303                           
  3304                           	global	_C2POL
  3305                           	global	_C2POL
  3306  0000                     	_C2POL	set	0x844	;byte address: 0x108
  3307                           
  3308                           	global	_C2R
  3309                           	global	_C2R
  3310  0000                     	_C2R	set	0x842	;byte address: 0x108
  3311                           
  3312                           	global	_C2REN
  3313                           	global	_C2REN
  3314  0000                     	_C2REN	set	0xC2C	;byte address: 0x185
  3315                           
  3316                           	global	_C2RSEL
  3317                           	global	_C2RSEL
  3318  0000                     	_C2RSEL	set	0x84C	;byte address: 0x109
  3319                           
  3320                           	global	_C2SYNC
  3321                           	global	_C2SYNC
  3322  0000                     	_C2SYNC	set	0x848	;byte address: 0x109
  3323                           
  3324                           	global	_CARRY
  3325                           	global	_CARRY
  3326  0000                     	_CARRY	set	0x18	;byte address: 0x3
  3327                           
  3328                           	global	_CCP1IE
  3329                           	global	_CCP1IE
  3330  0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  3331                           
  3332                           	global	_CCP1IF
  3333                           	global	_CCP1IF
  3334  0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  3335                           
  3336                           	global	_CCP1M0
  3337                           	global	_CCP1M0
  3338  0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  3339                           
  3340                           	global	_CCP1M1
  3341                           	global	_CCP1M1
  3342  0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  3343                           
  3344                           	global	_CCP1M2
  3345                           	global	_CCP1M2
  3346  0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  3347                           
  3348                           	global	_CCP1M3
  3349                           	global	_CCP1M3
  3350  0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  3351                           
  3352                           	global	_CCP2IE
  3353                           	global	_CCP2IE
  3354  0000                     	_CCP2IE	set	0x468	;byte address: 0x8D
  3355                           
  3356                           	global	_CCP2IF
  3357                           	global	_CCP2IF
  3358  0000                     	_CCP2IF	set	0x68	;byte address: 0xD
  3359                           
  3360                           	global	_CCP2M0
  3361                           	global	_CCP2M0
  3362  0000                     	_CCP2M0	set	0xE8	;byte address: 0x1D
  3363                           
  3364                           	global	_CCP2M1
  3365                           	global	_CCP2M1
  3366  0000                     	_CCP2M1	set	0xE9	;byte address: 0x1D
  3367                           
  3368                           	global	_CCP2M2
  3369                           	global	_CCP2M2
  3370  0000                     	_CCP2M2	set	0xEA	;byte address: 0x1D
  3371                           
  3372                           	global	_CCP2M3
  3373                           	global	_CCP2M3
  3374  0000                     	_CCP2M3	set	0xEB	;byte address: 0x1D
  3375                           
  3376                           	global	_CCP2X
  3377                           	global	_CCP2X
  3378  0000                     	_CCP2X	set	0xED	;byte address: 0x1D
  3379                           
  3380                           	global	_CCP2Y
  3381                           	global	_CCP2Y
  3382  0000                     	_CCP2Y	set	0xEC	;byte address: 0x1D
  3383                           
  3384                           	global	_CHS0
  3385                           	global	_CHS0
  3386  0000                     	_CHS0	set	0xFA	;byte address: 0x1F
  3387                           
  3388                           	global	_CHS1
  3389                           	global	_CHS1
  3390  0000                     	_CHS1	set	0xFB	;byte address: 0x1F
  3391                           
  3392                           	global	_CHS2
  3393                           	global	_CHS2
  3394  0000                     	_CHS2	set	0xFC	;byte address: 0x1F
  3395                           
  3396                           	global	_CHS3
  3397                           	global	_CHS3
  3398  0000                     	_CHS3	set	0xFD	;byte address: 0x1F
  3399                           
  3400                           	global	_CKE
  3401                           	global	_CKE
  3402  0000                     	_CKE	set	0x4A6	;byte address: 0x94
  3403                           
  3404                           	global	_CKP
  3405                           	global	_CKP
  3406  0000                     	_CKP	set	0xA4	;byte address: 0x14
  3407                           
  3408                           	global	_CREN
  3409                           	global	_CREN
  3410  0000                     	_CREN	set	0xC4	;byte address: 0x18
  3411                           
  3412                           	global	_CSRC
  3413                           	global	_CSRC
  3414  0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  3415                           
  3416                           	global	_DA
  3417                           	global	_DA
  3418  0000                     	_DA	set	0x4A5	;byte address: 0x94
  3419                           
  3420                           	global	_DC
  3421                           	global	_DC
  3422  0000                     	_DC	set	0x19	;byte address: 0x3
  3423                           
  3424                           	global	_DC1B0
  3425                           	global	_DC1B0
  3426  0000                     	_DC1B0	set	0xBC	;byte address: 0x17
  3427                           
  3428                           	global	_DC1B1
  3429                           	global	_DC1B1
  3430  0000                     	_DC1B1	set	0xBD	;byte address: 0x17
  3431                           
  3432                           	global	_ECCPAS0
  3433                           	global	_ECCPAS0
  3434  0000                     	_ECCPAS0	set	0x4E4	;byte address: 0x9C
  3435                           
  3436                           	global	_ECCPAS1
  3437                           	global	_ECCPAS1
  3438  0000                     	_ECCPAS1	set	0x4E5	;byte address: 0x9C
  3439                           
  3440                           	global	_ECCPAS2
  3441                           	global	_ECCPAS2
  3442  0000                     	_ECCPAS2	set	0x4E6	;byte address: 0x9C
  3443                           
  3444                           	global	_ECCPASE
  3445                           	global	_ECCPASE
  3446  0000                     	_ECCPASE	set	0x4E7	;byte address: 0x9C
  3447                           
  3448                           	global	_EEIE
  3449                           	global	_EEIE
  3450  0000                     	_EEIE	set	0x46C	;byte address: 0x8D
  3451                           
  3452                           	global	_EEIF
  3453                           	global	_EEIF
  3454  0000                     	_EEIF	set	0x6C	;byte address: 0xD
  3455                           
  3456                           	global	_EEPGD
  3457                           	global	_EEPGD
  3458  0000                     	_EEPGD	set	0xC67	;byte address: 0x18C
  3459                           
  3460                           	global	_FERR
  3461                           	global	_FERR
  3462  0000                     	_FERR	set	0xC2	;byte address: 0x18
  3463                           
  3464                           	global	_FVREN
  3465                           	global	_FVREN
  3466  0000                     	_FVREN	set	0xC28	;byte address: 0x185
  3467                           
  3468                           	global	_GCEN
  3469                           	global	_GCEN
  3470  0000                     	_GCEN	set	0x48F	;byte address: 0x91
  3471                           
  3472                           	global	_GIE
  3473  0000                     	_GIE	set	0x5F	;byte address: 0xB
  3474                           
  3475                           	global	_GODONE
  3476  0000                     	_GODONE	set	0xF9	;byte address: 0x1F
  3477                           
  3478                           	global	_HTS
  3479                           	global	_HTS
  3480  0000                     	_HTS	set	0x47A	;byte address: 0x8F
  3481                           
  3482                           	global	_INTE
  3483                           	global	_INTE
  3484  0000                     	_INTE	set	0x5C	;byte address: 0xB
  3485                           
  3486                           	global	_INTEDG
  3487                           	global	_INTEDG
  3488  0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  3489                           
  3490                           	global	_INTF
  3491                           	global	_INTF
  3492  0000                     	_INTF	set	0x59	;byte address: 0xB
  3493                           
  3494                           	global	_IOCB0
  3495                           	global	_IOCB0
  3496  0000                     	_IOCB0	set	0x4B0	;byte address: 0x96
  3497                           
  3498                           	global	_IOCB1
  3499                           	global	_IOCB1
  3500  0000                     	_IOCB1	set	0x4B1	;byte address: 0x96
  3501                           
  3502                           	global	_IOCB2
  3503                           	global	_IOCB2
  3504  0000                     	_IOCB2	set	0x4B2	;byte address: 0x96
  3505                           
  3506                           	global	_IOCB3
  3507                           	global	_IOCB3
  3508  0000                     	_IOCB3	set	0x4B3	;byte address: 0x96
  3509                           
  3510                           	global	_IOCB4
  3511                           	global	_IOCB4
  3512  0000                     	_IOCB4	set	0x4B4	;byte address: 0x96
  3513                           
  3514                           	global	_IOCB5
  3515                           	global	_IOCB5
  3516  0000                     	_IOCB5	set	0x4B5	;byte address: 0x96
  3517                           
  3518                           	global	_IOCB6
  3519                           	global	_IOCB6
  3520  0000                     	_IOCB6	set	0x4B6	;byte address: 0x96
  3521                           
  3522                           	global	_IOCB7
  3523                           	global	_IOCB7
  3524  0000                     	_IOCB7	set	0x4B7	;byte address: 0x96
  3525                           
  3526                           	global	_IRCF0
  3527                           	global	_IRCF0
  3528  0000                     	_IRCF0	set	0x47C	;byte address: 0x8F
  3529                           
  3530                           	global	_IRCF1
  3531                           	global	_IRCF1
  3532  0000                     	_IRCF1	set	0x47D	;byte address: 0x8F
  3533                           
  3534                           	global	_IRCF2
  3535                           	global	_IRCF2
  3536  0000                     	_IRCF2	set	0x47E	;byte address: 0x8F
  3537                           
  3538                           	global	_IRP
  3539                           	global	_IRP
  3540  0000                     	_IRP	set	0x1F	;byte address: 0x3
  3541                           
  3542                           	global	_LTS
  3543                           	global	_LTS
  3544  0000                     	_LTS	set	0x479	;byte address: 0x8F
  3545                           
  3546                           	global	_MC1OUT
  3547                           	global	_MC1OUT
  3548  0000                     	_MC1OUT	set	0x84F	;byte address: 0x109
  3549                           
  3550                           	global	_MC2OUT
  3551                           	global	_MC2OUT
  3552  0000                     	_MC2OUT	set	0x84E	;byte address: 0x109
  3553                           
  3554                           	global	_OERR
  3555                           	global	_OERR
  3556  0000                     	_OERR	set	0xC1	;byte address: 0x18
  3557                           
  3558                           	global	_OSFIE
  3559                           	global	_OSFIE
  3560  0000                     	_OSFIE	set	0x46F	;byte address: 0x8D
  3561                           
  3562                           	global	_OSFIF
  3563                           	global	_OSFIF
  3564  0000                     	_OSFIF	set	0x6F	;byte address: 0xD
  3565                           
  3566                           	global	_OSTS
  3567                           	global	_OSTS
  3568  0000                     	_OSTS	set	0x47B	;byte address: 0x8F
  3569                           
  3570                           	global	_P1M0
  3571                           	global	_P1M0
  3572  0000                     	_P1M0	set	0xBE	;byte address: 0x17
  3573                           
  3574                           	global	_P1M1
  3575                           	global	_P1M1
  3576  0000                     	_P1M1	set	0xBF	;byte address: 0x17
  3577                           
  3578                           	global	_PD
  3579                           	global	_PD
  3580  0000                     	_PD	set	0x1B	;byte address: 0x3
  3581                           
  3582                           	global	_PDC0
  3583                           	global	_PDC0
  3584  0000                     	_PDC0	set	0x4D8	;byte address: 0x9B
  3585                           
  3586                           	global	_PDC1
  3587                           	global	_PDC1
  3588  0000                     	_PDC1	set	0x4D9	;byte address: 0x9B
  3589                           
  3590                           	global	_PDC2
  3591                           	global	_PDC2
  3592  0000                     	_PDC2	set	0x4DA	;byte address: 0x9B
  3593                           
  3594                           	global	_PDC3
  3595                           	global	_PDC3
  3596  0000                     	_PDC3	set	0x4DB	;byte address: 0x9B
  3597                           
  3598                           	global	_PDC4
  3599                           	global	_PDC4
  3600  0000                     	_PDC4	set	0x4DC	;byte address: 0x9B
  3601                           
  3602                           	global	_PDC5
  3603                           	global	_PDC5
  3604  0000                     	_PDC5	set	0x4DD	;byte address: 0x9B
  3605                           
  3606                           	global	_PDC6
  3607                           	global	_PDC6
  3608  0000                     	_PDC6	set	0x4DE	;byte address: 0x9B
  3609                           
  3610                           	global	_PEIE
  3611  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  3612                           
  3613                           	global	_PEN
  3614                           	global	_PEN
  3615  0000                     	_PEN	set	0x48A	;byte address: 0x91
  3616                           
  3617                           	global	_POR
  3618                           	global	_POR
  3619  0000                     	_POR	set	0x471	;byte address: 0x8E
  3620                           
  3621                           	global	_PRSEN
  3622                           	global	_PRSEN
  3623  0000                     	_PRSEN	set	0x4DF	;byte address: 0x9B
  3624                           
  3625                           	global	_PS0
  3626                           	global	_PS0
  3627  0000                     	_PS0	set	0x408	;byte address: 0x81
  3628                           
  3629                           	global	_PS1
  3630                           	global	_PS1
  3631  0000                     	_PS1	set	0x409	;byte address: 0x81
  3632                           
  3633                           	global	_PS2
  3634                           	global	_PS2
  3635  0000                     	_PS2	set	0x40A	;byte address: 0x81
  3636                           
  3637                           	global	_PSA
  3638                           	global	_PSA
  3639  0000                     	_PSA	set	0x40B	;byte address: 0x81
  3640                           
  3641                           	global	_PSSAC0
  3642                           	global	_PSSAC0
  3643  0000                     	_PSSAC0	set	0x4E2	;byte address: 0x9C
  3644                           
  3645                           	global	_PSSAC1
  3646                           	global	_PSSAC1
  3647  0000                     	_PSSAC1	set	0x4E3	;byte address: 0x9C
  3648                           
  3649                           	global	_PSSBD0
  3650                           	global	_PSSBD0
  3651  0000                     	_PSSBD0	set	0x4E0	;byte address: 0x9C
  3652                           
  3653                           	global	_PSSBD1
  3654                           	global	_PSSBD1
  3655  0000                     	_PSSBD1	set	0x4E1	;byte address: 0x9C
  3656                           
  3657                           	global	_PULSR
  3658                           	global	_PULSR
  3659  0000                     	_PULSR	set	0xC2A	;byte address: 0x185
  3660                           
  3661                           	global	_PULSS
  3662                           	global	_PULSS
  3663  0000                     	_PULSS	set	0xC2B	;byte address: 0x185
  3664                           
  3665                           	global	_RA0
  3666                           	global	_RA0
  3667  0000                     	_RA0	set	0x28	;byte address: 0x5
  3668                           
  3669                           	global	_RA1
  3670                           	global	_RA1
  3671  0000                     	_RA1	set	0x29	;byte address: 0x5
  3672                           
  3673                           	global	_RA2
  3674                           	global	_RA2
  3675  0000                     	_RA2	set	0x2A	;byte address: 0x5
  3676                           
  3677                           	global	_RA3
  3678                           	global	_RA3
  3679  0000                     	_RA3	set	0x2B	;byte address: 0x5
  3680                           
  3681                           	global	_RA4
  3682                           	global	_RA4
  3683  0000                     	_RA4	set	0x2C	;byte address: 0x5
  3684                           
  3685                           	global	_RA5
  3686                           	global	_RA5
  3687  0000                     	_RA5	set	0x2D	;byte address: 0x5
  3688                           
  3689                           	global	_RA6
  3690                           	global	_RA6
  3691  0000                     	_RA6	set	0x2E	;byte address: 0x5
  3692                           
  3693                           	global	_RA7
  3694                           	global	_RA7
  3695  0000                     	_RA7	set	0x2F	;byte address: 0x5
  3696                           
  3697                           	global	_RABIE
  3698                           	global	_RABIE
  3699  0000                     	_RABIE	set	0x5B	;byte address: 0xB
  3700                           
  3701                           	global	_RABIF
  3702                           	global	_RABIF
  3703  0000                     	_RABIF	set	0x58	;byte address: 0xB
  3704                           
  3705                           	global	_RABPU
  3706                           	global	_RABPU
  3707  0000                     	_RABPU	set	0x40F	;byte address: 0x81
  3708                           
  3709                           	global	_RB0
  3710                           	global	_RB0
  3711  0000                     	_RB0	set	0x30	;byte address: 0x6
  3712                           
  3713                           	global	_RB1
  3714                           	global	_RB1
  3715  0000                     	_RB1	set	0x31	;byte address: 0x6
  3716                           
  3717                           	global	_RB2
  3718                           	global	_RB2
  3719  0000                     	_RB2	set	0x32	;byte address: 0x6
  3720                           
  3721                           	global	_RB3
  3722                           	global	_RB3
  3723  0000                     	_RB3	set	0x33	;byte address: 0x6
  3724                           
  3725                           	global	_RB4
  3726                           	global	_RB4
  3727  0000                     	_RB4	set	0x34	;byte address: 0x6
  3728                           
  3729                           	global	_RB5
  3730                           	global	_RB5
  3731  0000                     	_RB5	set	0x35	;byte address: 0x6
  3732                           
  3733                           	global	_RB6
  3734                           	global	_RB6
  3735  0000                     	_RB6	set	0x36	;byte address: 0x6
  3736                           
  3737                           	global	_RB7
  3738                           	global	_RB7
  3739  0000                     	_RB7	set	0x37	;byte address: 0x6
  3740                           
  3741                           	global	_RBIE
  3742                           	global	_RBIE
  3743  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  3744                           
  3745                           	global	_RBIF
  3746                           	global	_RBIF
  3747  0000                     	_RBIF	set	0x58	;byte address: 0xB
  3748                           
  3749                           	global	_RBPU
  3750                           	global	_RBPU
  3751  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  3752                           
  3753                           	global	_RC0
  3754                           	global	_RC0
  3755  0000                     	_RC0	set	0x38	;byte address: 0x7
  3756                           
  3757                           	global	_RC1
  3758                           	global	_RC1
  3759  0000                     	_RC1	set	0x39	;byte address: 0x7
  3760                           
  3761                           	global	_RC2
  3762                           	global	_RC2
  3763  0000                     	_RC2	set	0x3A	;byte address: 0x7
  3764                           
  3765                           	global	_RC3
  3766                           	global	_RC3
  3767  0000                     	_RC3	set	0x3B	;byte address: 0x7
  3768                           
  3769                           	global	_RC4
  3770                           	global	_RC4
  3771  0000                     	_RC4	set	0x3C	;byte address: 0x7
  3772                           
  3773                           	global	_RC5
  3774                           	global	_RC5
  3775  0000                     	_RC5	set	0x3D	;byte address: 0x7
  3776                           
  3777                           	global	_RC6
  3778                           	global	_RC6
  3779  0000                     	_RC6	set	0x3E	;byte address: 0x7
  3780                           
  3781                           	global	_RC7
  3782                           	global	_RC7
  3783  0000                     	_RC7	set	0x3F	;byte address: 0x7
  3784                           
  3785                           	global	_RCEN
  3786                           	global	_RCEN
  3787  0000                     	_RCEN	set	0x48B	;byte address: 0x91
  3788                           
  3789                           	global	_RCIDL
  3790                           	global	_RCIDL
  3791  0000                     	_RCIDL	set	0xC3E	;byte address: 0x187
  3792                           
  3793                           	global	_RCIE
  3794                           	global	_RCIE
  3795  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  3796                           
  3797                           	global	_RCIF
  3798                           	global	_RCIF
  3799  0000                     	_RCIF	set	0x65	;byte address: 0xC
  3800                           
  3801                           	global	_RD
  3802                           	global	_RD
  3803  0000                     	_RD	set	0xC60	;byte address: 0x18C
  3804                           
  3805                           	global	_RE3
  3806                           	global	_RE3
  3807  0000                     	_RE3	set	0x4B	;byte address: 0x9
  3808                           
  3809                           	global	_RP0
  3810                           	global	_RP0
  3811  0000                     	_RP0	set	0x1D	;byte address: 0x3
  3812                           
  3813                           	global	_RP1
  3814                           	global	_RP1
  3815  0000                     	_RP1	set	0x1E	;byte address: 0x3
  3816                           
  3817                           	global	_RSEN
  3818                           	global	_RSEN
  3819  0000                     	_RSEN	set	0x489	;byte address: 0x91
  3820                           
  3821                           	global	_RW
  3822                           	global	_RW
  3823  0000                     	_RW	set	0x4A2	;byte address: 0x94
  3824                           
  3825                           	global	_RX9
  3826                           	global	_RX9
  3827  0000                     	_RX9	set	0xC6	;byte address: 0x18
  3828                           
  3829                           	global	_RX9D
  3830                           	global	_RX9D
  3831  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  3832                           
  3833                           	global	_SBOREN
  3834                           	global	_SBOREN
  3835  0000                     	_SBOREN	set	0x474	;byte address: 0x8E
  3836                           
  3837                           	global	_SCKP
  3838                           	global	_SCKP
  3839  0000                     	_SCKP	set	0xC3C	;byte address: 0x187
  3840                           
  3841                           	global	_SCS
  3842                           	global	_SCS
  3843  0000                     	_SCS	set	0x478	;byte address: 0x8F
  3844                           
  3845                           	global	_SEN
  3846                           	global	_SEN
  3847  0000                     	_SEN	set	0x488	;byte address: 0x91
  3848                           
  3849                           	global	_SENDB
  3850                           	global	_SENDB
  3851  0000                     	_SENDB	set	0x4C3	;byte address: 0x98
  3852                           
  3853                           	global	_SMP
  3854                           	global	_SMP
  3855  0000                     	_SMP	set	0x4A7	;byte address: 0x94
  3856                           
  3857                           	global	_SPEN
  3858                           	global	_SPEN
  3859  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  3860                           
  3861                           	global	_SR0
  3862                           	global	_SR0
  3863  0000                     	_SR0	set	0xC2E	;byte address: 0x185
  3864                           
  3865                           	global	_SR1
  3866                           	global	_SR1
  3867  0000                     	_SR1	set	0xC2F	;byte address: 0x185
  3868                           
  3869                           	global	_SREN
  3870                           	global	_SREN
  3871  0000                     	_SREN	set	0xC5	;byte address: 0x18
  3872                           
  3873                           	global	_SSPEN
  3874                           	global	_SSPEN
  3875  0000                     	_SSPEN	set	0xA5	;byte address: 0x14
  3876                           
  3877                           	global	_SSPIE
  3878                           	global	_SSPIE
  3879  0000                     	_SSPIE	set	0x463	;byte address: 0x8C
  3880                           
  3881                           	global	_SSPIF
  3882                           	global	_SSPIF
  3883  0000                     	_SSPIF	set	0x63	;byte address: 0xC
  3884                           
  3885                           	global	_SSPM0
  3886                           	global	_SSPM0
  3887  0000                     	_SSPM0	set	0xA0	;byte address: 0x14
  3888                           
  3889                           	global	_SSPM1
  3890                           	global	_SSPM1
  3891  0000                     	_SSPM1	set	0xA1	;byte address: 0x14
  3892                           
  3893                           	global	_SSPM2
  3894                           	global	_SSPM2
  3895  0000                     	_SSPM2	set	0xA2	;byte address: 0x14
  3896                           
  3897                           	global	_SSPM3
  3898                           	global	_SSPM3
  3899  0000                     	_SSPM3	set	0xA3	;byte address: 0x14
  3900                           
  3901                           	global	_SSPOV
  3902                           	global	_SSPOV
  3903  0000                     	_SSPOV	set	0xA6	;byte address: 0x14
  3904                           
  3905                           	global	_START
  3906                           	global	_START
  3907  0000                     	_START	set	0x4A3	;byte address: 0x94
  3908                           
  3909                           	global	_STOP
  3910                           	global	_STOP
  3911  0000                     	_STOP	set	0x4A4	;byte address: 0x94
  3912                           
  3913                           	global	_STRA
  3914                           	global	_STRA
  3915  0000                     	_STRA	set	0x4E8	;byte address: 0x9D
  3916                           
  3917                           	global	_STRB
  3918                           	global	_STRB
  3919  0000                     	_STRB	set	0x4E9	;byte address: 0x9D
  3920                           
  3921                           	global	_STRC
  3922                           	global	_STRC
  3923  0000                     	_STRC	set	0x4EA	;byte address: 0x9D
  3924                           
  3925                           	global	_STRD
  3926                           	global	_STRD
  3927  0000                     	_STRD	set	0x4EB	;byte address: 0x9D
  3928                           
  3929                           	global	_STRSYNC
  3930                           	global	_STRSYNC
  3931  0000                     	_STRSYNC	set	0x4EC	;byte address: 0x9D
  3932                           
  3933                           	global	_SWDTEN
  3934                           	global	_SWDTEN
  3935  0000                     	_SWDTEN	set	0x828	;byte address: 0x105
  3936                           
  3937                           	global	_SYNC
  3938                           	global	_SYNC
  3939  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  3940                           
  3941                           	global	_T0CS
  3942                           	global	_T0CS
  3943  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  3944                           
  3945                           	global	_T0IE
  3946                           	global	_T0IE
  3947  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  3948                           
  3949                           	global	_T0IF
  3950                           	global	_T0IF
  3951  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  3952                           
  3953                           	global	_T0SE
  3954                           	global	_T0SE
  3955  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  3956                           
  3957                           	global	_T1CKPS0
  3958                           	global	_T1CKPS0
  3959  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  3960                           
  3961                           	global	_T1CKPS1
  3962                           	global	_T1CKPS1
  3963  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  3964                           
  3965                           	global	_T1GINV
  3966                           	global	_T1GINV
  3967  0000                     	_T1GINV	set	0x87	;byte address: 0x10
  3968                           
  3969                           	global	_T1GSS
  3970                           	global	_T1GSS
  3971  0000                     	_T1GSS	set	0x849	;byte address: 0x109
  3972                           
  3973                           	global	_T1OSCEN
  3974                           	global	_T1OSCEN
  3975  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  3976                           
  3977                           	global	_T1SYNC
  3978                           	global	_T1SYNC
  3979  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  3980                           
  3981                           	global	_T2CKPS0
  3982                           	global	_T2CKPS0
  3983  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  3984                           
  3985                           	global	_T2CKPS1
  3986                           	global	_T2CKPS1
  3987  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  3988                           
  3989                           	global	_TMR1CS
  3990                           	global	_TMR1CS
  3991  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  3992                           
  3993                           	global	_TMR1GE
  3994                           	global	_TMR1GE
  3995  0000                     	_TMR1GE	set	0x86	;byte address: 0x10
  3996                           
  3997                           	global	_TMR1IE
  3998  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  3999                           
  4000                           	global	_TMR1IF
  4001  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  4002                           
  4003                           	global	_TMR1ON
  4004                           	global	_TMR1ON
  4005  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  4006                           
  4007                           	global	_TMR2IE
  4008                           	global	_TMR2IE
  4009  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  4010                           
  4011                           	global	_TMR2IF
  4012                           	global	_TMR2IF
  4013  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  4014                           
  4015                           	global	_TMR2ON
  4016                           	global	_TMR2ON
  4017  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  4018                           
  4019                           	global	_TO
  4020                           	global	_TO
  4021  0000                     	_TO	set	0x1C	;byte address: 0x3
  4022                           
  4023                           	global	_TOUTPS0
  4024                           	global	_TOUTPS0
  4025  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  4026                           
  4027                           	global	_TOUTPS1
  4028                           	global	_TOUTPS1
  4029  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  4030                           
  4031                           	global	_TOUTPS2
  4032                           	global	_TOUTPS2
  4033  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  4034                           
  4035                           	global	_TOUTPS3
  4036                           	global	_TOUTPS3
  4037  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  4038                           
  4039                           	global	_TRISA0
  4040                           	global	_TRISA0
  4041  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  4042                           
  4043                           	global	_TRISA1
  4044                           	global	_TRISA1
  4045  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  4046                           
  4047                           	global	_TRISA2
  4048                           	global	_TRISA2
  4049  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  4050                           
  4051                           	global	_TRISA3
  4052                           	global	_TRISA3
  4053  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  4054                           
  4055                           	global	_TRISA4
  4056                           	global	_TRISA4
  4057  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  4058                           
  4059                           	global	_TRISA5
  4060                           	global	_TRISA5
  4061  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  4062                           
  4063                           	global	_TRISA6
  4064                           	global	_TRISA6
  4065  0000                     	_TRISA6	set	0x42E	;byte address: 0x85
  4066                           
  4067                           	global	_TRISA7
  4068                           	global	_TRISA7
  4069  0000                     	_TRISA7	set	0x42F	;byte address: 0x85
  4070                           
  4071                           	global	_TRISB0
  4072                           	global	_TRISB0
  4073  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  4074                           
  4075                           	global	_TRISB1
  4076                           	global	_TRISB1
  4077  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  4078                           
  4079                           	global	_TRISB2
  4080                           	global	_TRISB2
  4081  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  4082                           
  4083                           	global	_TRISB3
  4084                           	global	_TRISB3
  4085  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  4086                           
  4087                           	global	_TRISB4
  4088                           	global	_TRISB4
  4089  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  4090                           
  4091                           	global	_TRISB5
  4092                           	global	_TRISB5
  4093  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  4094                           
  4095                           	global	_TRISB6
  4096                           	global	_TRISB6
  4097  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  4098                           
  4099                           	global	_TRISB7
  4100                           	global	_TRISB7
  4101  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  4102                           
  4103                           	global	_TRISC0
  4104                           	global	_TRISC0
  4105  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  4106                           
  4107                           	global	_TRISC1
  4108                           	global	_TRISC1
  4109  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  4110                           
  4111                           	global	_TRISC2
  4112                           	global	_TRISC2
  4113  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  4114                           
  4115                           	global	_TRISC3
  4116                           	global	_TRISC3
  4117  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  4118                           
  4119                           	global	_TRISC4
  4120                           	global	_TRISC4
  4121  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  4122                           
  4123                           	global	_TRISC5
  4124                           	global	_TRISC5
  4125  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  4126                           
  4127                           	global	_TRISC6
  4128                           	global	_TRISC6
  4129  0000                     	_TRISC6	set	0x43E	;byte address: 0x87
  4130                           
  4131                           	global	_TRISC7
  4132                           	global	_TRISC7
  4133  0000                     	_TRISC7	set	0x43F	;byte address: 0x87
  4134                           
  4135                           	global	_TRISE3
  4136                           	global	_TRISE3
  4137  0000                     	_TRISE3	set	0x44B	;byte address: 0x89
  4138                           
  4139                           	global	_TRMT
  4140                           	global	_TRMT
  4141  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  4142                           
  4143                           	global	_TUN0
  4144                           	global	_TUN0
  4145  0000                     	_TUN0	set	0x480	;byte address: 0x90
  4146                           
  4147                           	global	_TUN1
  4148                           	global	_TUN1
  4149  0000                     	_TUN1	set	0x481	;byte address: 0x90
  4150                           
  4151                           	global	_TUN2
  4152                           	global	_TUN2
  4153  0000                     	_TUN2	set	0x482	;byte address: 0x90
  4154                           
  4155                           	global	_TUN3
  4156                           	global	_TUN3
  4157  0000                     	_TUN3	set	0x483	;byte address: 0x90
  4158                           
  4159                           	global	_TUN4
  4160                           	global	_TUN4
  4161  0000                     	_TUN4	set	0x484	;byte address: 0x90
  4162                           
  4163                           	global	_TX9
  4164                           	global	_TX9
  4165  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  4166                           
  4167                           	global	_TX9D
  4168                           	global	_TX9D
  4169  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  4170                           
  4171                           	global	_TXEN
  4172                           	global	_TXEN
  4173  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  4174                           
  4175                           	global	_TXIE
  4176                           	global	_TXIE
  4177  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  4178                           
  4179                           	global	_TXIF
  4180                           	global	_TXIF
  4181  0000                     	_TXIF	set	0x64	;byte address: 0xC
  4182                           
  4183                           	global	_UA
  4184                           	global	_UA
  4185  0000                     	_UA	set	0x4A1	;byte address: 0x94
  4186                           
  4187                           	global	_ULPWUE
  4188                           	global	_ULPWUE
  4189  0000                     	_ULPWUE	set	0x475	;byte address: 0x8E
  4190                           
  4191                           	global	_ULPWUIE
  4192                           	global	_ULPWUIE
  4193  0000                     	_ULPWUIE	set	0x46A	;byte address: 0x8D
  4194                           
  4195                           	global	_ULPWUIF
  4196                           	global	_ULPWUIF
  4197  0000                     	_ULPWUIF	set	0x6A	;byte address: 0xD
  4198                           
  4199                           	global	_VCFG0
  4200                           	global	_VCFG0
  4201  0000                     	_VCFG0	set	0x4FC	;byte address: 0x9F
  4202                           
  4203                           	global	_VCFG1
  4204                           	global	_VCFG1
  4205  0000                     	_VCFG1	set	0x4FD	;byte address: 0x9F
  4206                           
  4207                           	global	_VR0
  4208                           	global	_VR0
  4209  0000                     	_VR0	set	0x4B8	;byte address: 0x97
  4210                           
  4211                           	global	_VR1
  4212                           	global	_VR1
  4213  0000                     	_VR1	set	0x4B9	;byte address: 0x97
  4214                           
  4215                           	global	_VR2
  4216                           	global	_VR2
  4217  0000                     	_VR2	set	0x4BA	;byte address: 0x97
  4218                           
  4219                           	global	_VR3
  4220                           	global	_VR3
  4221  0000                     	_VR3	set	0x4BB	;byte address: 0x97
  4222                           
  4223                           	global	_VREN
  4224                           	global	_VREN
  4225  0000                     	_VREN	set	0x4BF	;byte address: 0x97
  4226                           
  4227                           	global	_VROE
  4228                           	global	_VROE
  4229  0000                     	_VROE	set	0x4BE	;byte address: 0x97
  4230                           
  4231                           	global	_VRR
  4232                           	global	_VRR
  4233  0000                     	_VRR	set	0x4BD	;byte address: 0x97
  4234                           
  4235                           	global	_VRSS
  4236                           	global	_VRSS
  4237  0000                     	_VRSS	set	0x4BC	;byte address: 0x97
  4238                           
  4239                           	global	_WCOL
  4240                           	global	_WCOL
  4241  0000                     	_WCOL	set	0xA7	;byte address: 0x14
  4242                           
  4243                           	global	_WDTPS0
  4244                           	global	_WDTPS0
  4245  0000                     	_WDTPS0	set	0x829	;byte address: 0x105
  4246                           
  4247                           	global	_WDTPS1
  4248                           	global	_WDTPS1
  4249  0000                     	_WDTPS1	set	0x82A	;byte address: 0x105
  4250                           
  4251                           	global	_WDTPS2
  4252                           	global	_WDTPS2
  4253  0000                     	_WDTPS2	set	0x82B	;byte address: 0x105
  4254                           
  4255                           	global	_WDTPS3
  4256                           	global	_WDTPS3
  4257  0000                     	_WDTPS3	set	0x82C	;byte address: 0x105
  4258                           
  4259                           	global	_WPUB0
  4260                           	global	_WPUB0
  4261  0000                     	_WPUB0	set	0x4A8	;byte address: 0x95
  4262                           
  4263                           	global	_WPUB1
  4264                           	global	_WPUB1
  4265  0000                     	_WPUB1	set	0x4A9	;byte address: 0x95
  4266                           
  4267                           	global	_WPUB2
  4268                           	global	_WPUB2
  4269  0000                     	_WPUB2	set	0x4AA	;byte address: 0x95
  4270                           
  4271                           	global	_WPUB3
  4272                           	global	_WPUB3
  4273  0000                     	_WPUB3	set	0x4AB	;byte address: 0x95
  4274                           
  4275                           	global	_WPUB4
  4276                           	global	_WPUB4
  4277  0000                     	_WPUB4	set	0x4AC	;byte address: 0x95
  4278                           
  4279                           	global	_WPUB5
  4280                           	global	_WPUB5
  4281  0000                     	_WPUB5	set	0x4AD	;byte address: 0x95
  4282                           
  4283                           	global	_WPUB6
  4284                           	global	_WPUB6
  4285  0000                     	_WPUB6	set	0x4AE	;byte address: 0x95
  4286                           
  4287                           	global	_WPUB7
  4288                           	global	_WPUB7
  4289  0000                     	_WPUB7	set	0x4AF	;byte address: 0x95
  4290                           
  4291                           	global	_WR
  4292                           	global	_WR
  4293  0000                     	_WR	set	0xC61	;byte address: 0x18C
  4294                           
  4295                           	global	_WREN
  4296                           	global	_WREN
  4297  0000                     	_WREN	set	0xC62	;byte address: 0x18C
  4298                           
  4299                           	global	_WRERR
  4300                           	global	_WRERR
  4301  0000                     	_WRERR	set	0xC63	;byte address: 0x18C
  4302                           
  4303                           	global	_WUE
  4304                           	global	_WUE
  4305  0000                     	_WUE	set	0xC39	;byte address: 0x187
  4306                           
  4307                           	global	_ZERO
  4308                           	global	_ZERO
  4309  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  4310                           
  4311                           	psect	strings
  4312                           	
  4313  020F                     STR_1:	
  4314  020F  3456               	retlw	86	;'V'
  4315  0210  346F               	retlw	111	;'o'
  4316  0211  346C               	retlw	108	;'l'
  4317  0212  3474               	retlw	116	;'t'
  4318  0213  3461               	retlw	97	;'a'
  4319  0214  3467               	retlw	103	;'g'
  4320  0215  3465               	retlw	101	;'e'
  4321  0216  343A               	retlw	58	;':'
  4322  0217  3400               	retlw	0
  4323                           	
  4324  0218                     STR_2:	
  4325  0218  3443               	retlw	67	;'C'
  4326  0219  3475               	retlw	117	;'u'
  4327  021A  3472               	retlw	114	;'r'
  4328  021B  3472               	retlw	114	;'r'
  4329  021C  3465               	retlw	101	;'e'
  4330  021D  346E               	retlw	110	;'n'
  4331  021E  3474               	retlw	116	;'t'
  4332  021F  343A               	retlw	58	;':'
  4333  0220  3400               	retlw	0
  4334                           	PSECT	fnauto0,class=BANK0,space=1
  4335                           	FNCONF	fnauto0,??,?
  4336                           
  4337                           	DABS	1,126,2	;btemp
  4338                           	global	btemp
  4339  0000                     	btemp set 07Eh
  4340                           apbank macro
  4341                           	bcf	status,5
  4342                           	bcf	status,6
  4343  005F                     	endm


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Mon Jun 15 21:42:36 2015

               ??_Read_Adc 0061                   __Lrbss_0 0045  
                        l1 03A9                          l3 04D2  
                        l4 04CC                          l5 04D0  
                        l6 04C5                          l7 04BE  
                        l8 033C                          l9 0324  
                 _Time_Min 0077                  __Lrdata_0 0000  
                 _Time_Sec 0076                          pc 0002  
                __Lramdata 0000                         l11 0328  
                       l20 03B7                         _DA 04A5  
                       l21 03DD                         l13 01F4  
                       _BF 04A0                         l14 0077  
                       _DC 0019                         l31 0454  
                       l23 048F                         l24 0302  
                       l40 03E6                         l16 01F4  
                       l33 0472                         l25 02FD  
                       l41 0407                         l17 00AB  
                       l34 0465                         l26 02FD  
                       l18 00BF                         l35 0472  
                       l19 03DD                         l43 03FA  
                       l60 0294                         l28 04B7  
                       l36 0472                         l37 0276  
                       l38 042E                         l62 02B9  
                       l71 0373                         l63 0294  
                       l39 0407                         l72 0356  
                       l56 02C0                         l64 02AC  
                       l65 0374                         l73 0366  
                       l57 02B9                         l66 0373  
                       l58 0290                         l67 0352  
                       l59 0285                         l68 0347  
                       l69 0356                         _PD 001B  
                       _RD 0C60                         _UA 04A1  
                       _TO 001C                         _RW 04A2  
                       _WR 0C61                  _Time_Hour 007C  
             ??_init_DigIO 005F                         fsr 0004  
          ___lwmod_divisor 0061            ___lwmod_counter 0063  
                      _C1R 083A                        _C2R 0842  
                      _CKE 04A6                        _CKP 00A4  
                      _GIE 005F                        _BOR 0470  
                      _RA0 0028                        _RA1 0029  
                      _RB0 0030                        _RA2 002A  
                      _RB1 0031                        _RA3 002B  
                      _RC0 0038                        _RB2 0032  
                      _RA4 002C                        _RC1 0039  
                      _RB3 0033                        _RA5 002D  
                      _RC2 003A                        _RB4 0034  
                      _RA6 002E                        _RC3 003B  
                      _RB5 0035                        _RA7 002F  
                      _RC4 003C                        _RB6 0036  
                      _RC5 003D                        _RB7 0037  
                      _RC6 003E                        _RE3 004B  
                      _RC7 003F                        _FSR 0004  
                      _PCL 0002                        _PS0 0408  
                      _PR2 0092                        _PS1 0409  
                      _RP0 001D                        _PS2 040A  
                      _PEN 048A                        _IRP 001F  
                      _RP1 001E                        _HTS 047A  
                      _SR0 0C2E                        _SR1 0C2F  
                      _SEN 0488                        _SCS 0478  
                      _PSA 040B                        _LTS 0479  
                      _VR0 04B8                        _VR1 04B9  
                      _VR2 04BA                        _VR3 04BB  
                      _POR 0471                        _RX9 00C6  
                      _SMP 04A7                        _TX9 04C6  
                      _WUE 0C39                        _VRR 04BD  
                      _isr 0490                        indf 0000  
             ??_init_timer 005F           ___lwmod_dividend 005F  
               _TimerState 0071                 _TimerStart 0055  
         ___lwdiv_dividend 005F             ?_Set_LCD_EN_on 0065  
                     _C1IE 046D                       _C1IF 006D  
                     _C2IE 046E                       _C2IF 006E  
                     _C1OE 083D                       _C2OE 0845  
                     _C1ON 083F                       _C2ON 0847  
                     _ADIE 0466                       _ADIF 0066  
                     _ADFM 04FF                       ?_isr 0068  
                 __tempreg 005F    __end_of_Lcd8_Set_Cursor 0473  
                     _ADON 00F8                       _P1M0 00BE  
                     _CHS0 00FA                       _P1M1 00BF  
                     _CHS1 00FB                       _CHS2 00FC  
                     _CHS3 00FD                       _EEIE 046C  
                     _EEIF 006C                       _BRG0 04C8  
                     _ANS0 0C40                       _BRG1 04C9  
                     _ANS1 0C41                       STR_1 020F  
                     _BRG2 04CA                       _ANS2 0C42  
                     STR_2 0218                       _BRG3 04CB  
                     _ANS3 0C43                       _BRG4 04CC  
                     _ANS4 0C44                       _BRG5 04CD  
                     _GCEN 048F                       _BRG6 04CE  
                     _BRG7 04CF                       _BRG8 04D0  
                     _ANS8 0C48                       _BRG9 04D1  
                     _ANS9 0C49                       _BRGH 04C2  
                     _T0IE 005D                       _T0IF 005A  
                     _CREN 00C4                       _T0CS 040D  
                     _FERR 00C2                       _PDC0 04D8  
                     _PDC1 04D9                       _PDC2 04DA  
                     _PDC3 04DB                       _PDC4 04DC  
                     _T0SE 040C                       _PDC5 04DD  
                     _CSRC 04C7                       _PDC6 04DE  
                     _IOCB 0096                       u1500 03DD  
                     u1501 03DC                       _INDF 0000  
                     u1510 0082                       u1511 0081  
           ?_Set_LCD_RS_on 0065                       u1600 0328  
                     u1520 00A4                       u1601 0327  
                     u1521 00A3                       u1620 0281  
                     u1540 02CE                       u1621 0280  
                     u1541 02CD                       u1525 00A0  
                     u1710 0356                       u1550 02F6  
          ??_Set_LCD_EN_on 0065                       u1711 0355  
                     u1615 032D                       u1551 02F5  
                     u1535 00C2                       u1720 0360  
                     u1640 0294                       u1560 0407  
                     u1721 035F                       u1705 0348  
                     u1641 0293                       u1561 0406  
                     u1570 045D                       u1635 0286  
                     u1571 045C                       u1555 02F2  
                     u1740 0373                       u1660 02A5  
                     u1580 046B                       u1741 0372  
                     u1725 035C                       u1661 02A4  
                     u1581 046A                       _PIE1 008C  
                     u1807 044B                       u1735 0367  
                     u1655 0295                       _PIE2 008D  
                     u1680 02B9                       u1681 02B8  
                     u1665 02A1                       u1690 0343  
                     u1691 0342                       u1675 02AD  
                     u1595 030E                       u1757 031C  
                     u1767 0232                       u1777 0243  
                     _PEIE 005E                       u1787 0253  
                     _INTE 005C                       u1797 0424  
                     _INTF 0059                       i1l30 049A  
                     _RBIE 005B                       _RBIF 0058  
                     _RCIE 0465                       _RCIF 0065  
                     _RCEN 048B                       i1l29 049F  
                     _PCON 008E                       _PIR1 000C  
                     _PIR2 000D                       _OERR 00C1  
                     _SCKP 0C3C                       _RBPU 040F  
                     _RX9D 00C0                       _TMR0 0001  
                     _TMR2 0011                       _WCOL 00A7  
                     _SPEN 00C7                       _RSEN 0489  
                __databank 0000                       _TX9D 04C0  
                     _SREN 00C5                       _OSTS 047B  
                     _TUN0 0480                       _TUN1 0481  
                     _TUN2 0482                       _TUN3 0483  
                     _TUN4 0484                       _STRA 04E8  
                     _STRB 04E9                       _STRC 04EA  
                     _VREN 04BF                       _STRD 04EB  
                     _TRMT 04C1                       _STOP 04A4  
                     _ZERO 001A                       _TXIE 0464  
                     _WREN 0C62                       _TXIF 0064  
                     _TXEN 04C5                       _VROE 04BE  
                     _SYNC 04C4                       _WPUB 0095  
                     _VRSS 04BC            ??_Set_LCD_RS_on 0065  
          _Lcd8_Write_Char 0408        ??_Lcd8_Write_String 005F  
                     _main 002F                       btemp 007E  
         ?_Lcd8_Write_Char 0062                       start 0012  
           ??_init_SWTimer 005F             _Ref1ms_counter 005D  
         _Read_Adc_Channel 0061          interrupt_function 0004  
      _Lcd8_Write_String_a 005F        _Lcd8_Write_String_i 0060  
   _GetTimer_State_TimerID 005F          ??_Lcd8_Write_Char 0062  
                    ??_isr 0068             _Set_LCD_EN_off 04BF  
                stringcode 0208            __end_of___lwdiv 02C1  
         ___lwdiv_quotient 0064            __end_of___lwmod 0375  
                  _CM1CON0 0107                    _CM2CON0 0108  
                  _CCP1CON 0017                    _CM2CON1 0109  
                  _CCP2CON 001D            ?_Set_LCD_EN_off 0065  
                  _ACKSTAT 048E                    _BAUDCTL 0187  
                  _ECCPAS0 04E4                    _ECCPAS1 04E5  
                  _ECCPAS2 04E6                    _ECCPASE 04E7  
                    _C1CH0 0838                      _C1CH1 0839  
                    _C2CH0 0840                      _C2CH1 0841  
                    _DC1B0 00BC                      _DC1B1 00BD  
                    _C1SEN 0C2D                      _C2REN 0C2C  
                    _C1POL 083C                      _C2POL 0844  
                    _C1OUT 083E             _Set_LCD_RS_off 04C6  
                    _C2OUT 0846                      _ABDEN 0C38  
                    _ADCS0 00FE                      _ADCS1 00FF  
                    _ADDEN 00C3                      ?_main 005F  
                    _ACKEN 048C                      _ACKDT 048D  
                    _BCLIE 046B                      _BCLIF 006B  
                    _CCP2X 00ED                      _CCP2Y 00EC  
                    _EEADR 010D                      _BRG10 04D2  
                    _ANS10 0C4A                      _EEDAT 010C  
                    _BRG11 04D3                      _ANS11 0C4B  
                    _BRG12 04D4                      _ANS12 0C4C  
                    _BRG13 04D5                      _ANS13 0C4D  
                    _BRG14 04D6                      _BRG15 04D7  
                    _BRG16 0C3B                      _CARRY 0018  
                    _EEPGD 0C67                      _ANSEL 0188  
                    _T1CON 0010              _Elapsed_Hours 0075  
                    _IOCB0 04B0                      _T2CON 0012  
                    _IOCB1 04B1                      _IOCB2 04B2  
                    _IOCB3 04B3     _Start_Timer_TimeoutVal 005F  
                    _IOCB4 04B4                      _IOCB5 04B5  
                    _IOCB6 04B6                      _IOCB7 04B7  
                    _T1GSS 0849                    _T1CKPS0 0084  
                  _T1CKPS1 0085                      _IRCF0 047C  
                    _IRCF1 047D                      _IRCF2 047E  
          ?_Set_LCD_RS_off 0064                    _T2CKPS0 0090  
                  _T2CKPS1 0091           ??_Set_LCD_EN_off 0065  
                    _RABIE 005B                      _RABIF 0058  
                    _RABPU 040F                      _RCIDL 0C3E  
                    _FVREN 0C28                      _VCFG0 04FC  
                    _VCFG1 04FD                      _RCREG 001A  
                    _SENDB 04C3                      _RCSTA 0018  
                    _OSFIE 046F                      _OSFIF 006F  
                    _TMR1H 000F                      _TMR1L 000E  
                    _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                    _T1OSCEN 0083  
                    _PORTC 0007                      _PORTE 0009  
                    _PRSEN 04DF                      _SRCON 0185  
                    _START 04A3                      _PULSR 0C2A  
                    _PULSS 0C2B                      _SSPM0 00A0  
                    _SSPM1 00A1                      _SSPM2 00A2  
                    _SSPM3 00A3                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087  
                    _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _SSPEN 00A5  
                    _VRCON 0097                      _WPUB0 04A8  
                    _WPUB1 04A9                      _WPUB2 04AA  
                    _WPUB3 04AB                      _WPUB4 04AC  
                    _SSPOV 00A6                      _WPUB5 04AD  
                    _WPUB6 04AE                      _WPUB7 04AF  
                    _WRERR 0C63                      _TXREG 0019  
                    _TXSTA 0098             _adc_result_an2 0047  
           _adc_result_an3 0079             _adc_result_an4 0078  
        _Lcd8_Set_Cursor_a 0060          _Lcd8_Set_Cursor_b 005F  
         ??_Set_LCD_RS_off 0064           __end_of_Lcd8_Cmd 0455  
                  _OSCTUNE 0090                    _PWM1CON 009B  
                    _temp1 0045                      _temp2 004B  
                    _temp3 0049                    _PSTRCON 009D  
                  _SSPCON2 0091                    _ULPWUIE 046A  
                  _ULPWUIF 006A                    _SSPSTAT 0094  
                  _TOUTPS0 0093                    _TOUTPS1 0094  
                  _TOUTPS2 0095                    _TOUTPS3 0096  
                  _STRSYNC 04EC                      pclath 000A  
__end_of_Lcd8_Write_String 0408                   intlevel1 0004  
           _GetTimer_State 02C1                      status 0003  
   __end_of_Set_LCD_EN_off 04C6            _TimerTimeOutVal 004D  
         __end_of_Read_Adc 033D            ?_GetTimer_State 005F  
             _init_SWTimer 03AA                 _Lcd8_Cmd_a 0061  
   __end_of_Set_LCD_RS_off 04CD                _Start_Timer 0473  
         ??_GetTimer_State 005F       __end_of_init_SWTimer 03DE  
      __end_of_Start_Timer 0490    __end_of_Lcd8_Write_Char 042F  
              __stringbase 020E                    ___lwdiv 0277  
                  ___lwmod 033D                   ?___lwdiv 005F  
                 ?___lwmod 005F                  ??___lwdiv 0063  
                ??___lwmod 0063                     ??_main 005F  
          ___lwdiv_divisor 0061            ___lwdiv_counter 0063  
   __end_of_GetTimer_State 0303               ?_Start_Timer 005F  
                   _C1RSEL 084D                     _C2RSEL 084C  
            _Set_LCD_EN_on 04CD                   stringdir 0209  
                   _C2SYNC 0848                   stringjmp 020D  
                 stringtab 0200                     _ADCON0 001F  
                   _ADCON1 009F                     _ABDOVF 0C3F  
                   _CCP1M0 00B8                     _CCP1M1 00B9  
                   _CCP1M2 00BA                     _CCP1M3 00BB  
                   _CCP2M0 00E8                     _CCP2M1 00E9  
                   _CCP2M2 00EA                     _CCP2M3 00EB  
                   _CCP1IE 0462                     _CCP1IF 0062  
                   _CCP2IE 0468                     _CCP2IF 0068  
                   _ADRESH 001E                     _EEADRH 010F  
                   _ADRESL 009E                     _EEADRL 010D  
                   _EEDATA 010C                     _ECCPAS 009C  
                   _CCPR1H 0016                     _EEDATH 010E  
                   _CCPR2H 001C                     _CCPR1L 0015  
                   _CCPR2L 001B                     _EECON1 018C  
                   _EECON2 018D              _Set_LCD_RS_on 04D1  
                   _ANSELH 0189                     _MC1OUT 084F  
                   _MC2OUT 084E               _Elapsed_Mins 007B  
             _Elapsed_Secs 007A               __end_of_main 01F8  
                   _T1GINV 0087                     _GODONE 00F9  
                   _T1SYNC 0082                     _INTEDG 040E  
                   _PCLATH 000A                     _INTCON 000B  
                   i1u1220 0494                     i1u1221 0493  
                   _SBOREN 0474                     _OSCCON 008F  
                   _TMR1GE 0086                     _TMR1IE 0460  
                   _TMR1IF 0060                     _TMR1CS 0081  
                   _TMR2IE 0461                     _TMR2IF 0061  
                   _PSSAC0 04E2                     _PSSAC1 04E3  
                   _PSSBD0 04E0                     _PSSBD1 04E1  
                   _SPBRGH 009A                     _TMR1ON 0080  
                   _OPTION 0081                     _TMR2ON 0092  
                   _WDTCON 0105                     _WDTPS0 0829  
                   _WDTPS1 082A                     _WDTPS2 082B  
                   _WDTPS3 082C                     _SSPADD 0093  
                   _TRISA0 0428                     _TRISA1 0429  
                   _TRISB0 0430                     _TRISA2 042A  
                   _TRISB1 0431                     _TRISA3 042B  
                   _TRISC0 0438                     _TRISB2 0432  
                   _TRISA4 042C                     _TRISC1 0439  
                   _TRISB3 0433                     _TRISA5 042D  
                   _TRISC2 043A                     _TRISB4 0434  
                   _TRISA6 042E                     _TRISC3 043B  
                   _TRISB5 0435                     _TRISA7 042F  
                   _TRISC4 043C                     _TRISB6 0436  
                   _TRISC5 043D                     _TRISB7 0437  
                   _TRISC6 043E                     _TRISE3 044B  
                   _TRISC7 043F                     _STATUS 0003  
                   _SSPCON 0014                     _SSPBUF 0013  
                   _SWDTEN 0828                     _ULPWUE 0475  
                   _SSPMSK 0093              ?_init_SWTimer 005F  
    __end_of_Set_LCD_EN_on 04D1      __end_of_Set_LCD_RS_on 04D3  
                _Lcd8_Init 0221                  _Lcd8_Port 04B8  
        __end_of_Lcd8_Init 0277          __end_of_Lcd8_Port 04BF  
        _Lcd8_Write_Char_a 0062                 ?_Lcd8_Init 005F  
               ?_Lcd8_Port 0065          _Lcd8_Write_String 03DE  
     _Start_Timer_Timer_ID 0061                __end_of_isr 04AA  
              ??_Lcd8_Init 005F            _Lcd8_Set_Cursor 0455  
              ??_Lcd8_Port 0065                 _init_DigIO 0375  
       __end_of_init_DigIO 03AA                   _Lcd8_Cmd 042F  
            ??_Start_Timer 0061           ?_Lcd8_Set_Cursor 005F  
                   saved_w 007F                  ?_Lcd8_Cmd 0061  
               _init_timer 04AA                 ??_Lcd8_Cmd 0061  
              ?_init_DigIO 005F         __end_of_init_timer 04B8  
        ??_Lcd8_Set_Cursor 0060         ?_Lcd8_Write_String 005F  
     _init_SWTimer_counter 005F                 _Input_Time 007D  
                 _Read_Adc 0303                  ?_Read_Adc 005F  
              ?_init_timer 005F                   __Hcommon 007E  
                __Hrdata_0 0001                  __Hramdata 0001  
              _Lcd8_Port_a 0065                   __Hrbss_0 005F  
                 __Lcommon 0071  
