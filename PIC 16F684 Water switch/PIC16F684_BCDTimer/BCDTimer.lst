

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Fri Jan 02 16:04:26 2015

HI-TECH Software Omniscient Code Generator build 3884
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 3884"
     2                           
     3                           	processor	16F684
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 7 "C:\Documents and Settings\Jayamma\My Docum
                                 ents\PIC\PIC16F684_BCDTimer\main.c"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 7 "C:\Documents and Settings\Jayamma\My Docum
                                 ents\PIC\PIC16F684_BCDTimer\main.c"
    41  2007  30C4               	dw 0x3FFC & 0x3FF7 & 0x3FEF & 0x3FDF & 0x3FFF 
                                 & 0x3FFF & 0x3CFF & 0x3BFF & 0x37FF ;#
    42                           global __tempreg
    43  0000                     __tempreg	set	32
    44                           global __Lrbss_0, __Hrbss_0
    45  0000                     __Lrbss_0 set 0x61
    46  0000                     __Hrbss_0 set 0x7E
    47                           global __Lrdata_0, __Hrdata_0
    48  0000                     __Lrdata_0	equ	0x0
    49  0000                     __Hrdata_0	equ	0x1
    50                           global __Lramdata, __Lrdata_0, __Hramdata, __Hr
                                 data_0
    51  0000                     __Lramdata	set	__Lrdata_0
    52  0000                     __Hramdata	set	__Hrdata_0
    53                           	GLOBAL	__databank
    54  0000                     __databank	EQU	0
    55  0000                     _Read_switch_temp	equ	??_Read_switch+0
    56                           	global	_Read_switch_temp
    57  0000                     _Read_switch_retval	equ	??_Read_switch+1
    58                           	global	_Read_switch_retval
    59  0000                     _GetTimer_State_TimerID	equ	??_GetTimer_State+0
    60                           	global	_GetTimer_State_TimerID
    61  0000                     _Start_Timer_Timer_ID	equ	??_Start_Timer+0
    62                           	global	_Start_Timer_Timer_ID
    63  0000                     _Start_Timer_TimeoutVal	equ	?_Start_Timer+0
    64                           	global	_Start_Timer_TimeoutVal
    65  0000                     _init_SWTimer_counter	equ	??_init_SWTimer+0
    66                           	global	_init_SWTimer_counter
    67                           ;Data sizes: Strings 0, constant 0, data 0, bss
                                  0, persistent 0 stack 14
    68                           	global	_main
    69                           	global	??_main
    70                           	global	?_main
    71                           
    72                           ; *************** function _main **************
                                 *
    73                           ; Defined at:
    74                           ;		line 17 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PIC16F684_BCDTimer\main
                                 .c"
    75                           ; Parameters:
    76                           ;		None
    77                           ; Auto variables:
    78                           ;		tempcounter 	       	type: unsigned char 
    79                           ; Return value:
    80                           ;		type: void 
    81                           ;		size: 0
    82                           ; Registers used:
    83                           ;		wreg, fsr, status,2, status,0, pclath, cstac
                                 k
    84                           ; Tracked objects:
    85                           ;		On entry : BFF/0
    86                           ;		On exit  : 0/0
    87                           ;		Unchanged: 0/0
    88                           ; Data sizes:
    89                           ;		Autos:    0
    90                           ;		Params:   0
    91                           ;		Temp:     1
    92                           ;		Total:    1
    93                           ; This function calls:
    94                           ;		_init_DigIO
    95                           ;		_init_timer
    96                           ;		_init_SWTimer
    97                           ;		_Start_Timer
    98                           ;		_Set_Relay_off
    99                           ;		_Read_switch
   100                           ;		_GetTimer_State
   101                           ;		_Set_Relay_on
   102                           ; This function is called by:
   103                           ;		Startup code after reset
   104                           ; This function uses a non-reentrant model
   105                           ; 
   106                           	psect	maintext,class=CODE,delta=2
   107                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\main.c"
   108                           	line	17
   109                           	psect	maintext
   110                           ;main.c: 7: asm("\tpsect config,class=CONFIG,de
                                 lta=2"); asm("\tdw ""0x3FFC & 0x3FF7 & 0x3FEF &
                                  0x3FDF & 0x3FFF & 0x3FFF & 0x3CFF & 0x3BFF & 0
                                 x37FF");
   111                           ;main.c: 11: unsigned char Elapsed_Secs=0;
   112                           ;main.c: 12: unsigned char Elapsed_Mins=0;
   113                           ;main.c: 13: unsigned char Elapsed_Hours=0;
   114                           ;main.c: 14: unsigned char Input_Time=0;
   115                           ;main.c: 15: unsigned char Time_Sec=0,Time_Min=
                                 0,Time_Hour=0;
   116                           ;main.c: 16: void main(void)
   117                           ;main.c: 17: {
   118                           	
   119  001C                     _main:	
   120                           ; Regs used in _main: [wreg+fsr+status,2+status
                                 ,0+pclath+cstack]
   121                           	line	19
   122                           ;main.c: 19: init_DigIO();
   123  001C  2155               	fcall	_init_DigIO
   124                           	line	20
   125                           ;main.c: 20: init_timer();
   126  001D  216D               	fcall	_init_timer
   127                           	line	23
   128                           ;main.c: 23: init_SWTimer();
   129  001E  20C1               	fcall	_init_SWTimer
   130                           	line	25
   131                           ;main.c: 25: PEIE = 1;
   132  001F  1283               	bcf	status, 5	;RP0=0, select bank0
   133  0020  170B               	bsf	(94/8),(94)&7
   134                           	line	26
   135                           ;main.c: 26: GIE = 1;
   136  0021  178B               	bsf	(95/8),(95)&7
   137                           	line	27
   138                           ;main.c: 27: Start_Timer(0,10);
   139  0022  300A               	movlw	low(0Ah)
   140                           	
   141  0023  00A1               	movwf	(?_Start_Timer)
   142  0024  3000               	movlw	high(0Ah)
   143  0025  00A2               	movwf	((?_Start_Timer))+1
   144  0026  3000               	movlw	(0)
   145  0027  211E               	fcall	_Start_Timer
   146                           	line	30
   147                           ;main.c: 28: unsigned char tempcounter;
   148                           ;main.c: 30: Set_Relay_off();
   149  0028  2178               	fcall	_Set_Relay_off
   150                           	line	31
   151                           ;main.c: 31: Input_Time =Read_switch();
   152  0029  20F4               	fcall	_Read_switch
   153  002A  1283               	bcf	status, 5	;RP0=0, select bank0
   154  002B  00A0               	movwf	(??_main+0+0)
   155                           	
   156  002C  0820               	movf	(??_main+0+0),w
   157  002D  00FD               	movwf	(125)
   158                           	line	32
   159                           ;main.c: 32: while (1)
   160                           	
   161  002E                     l7:	
   162                           	line	35
   163                           ;main.c: 33: {
   164                           ;main.c: 35: if (GetTimer_State(0 ==3))
   165  002E  3000               	movlw	(0)
   166  002F  2080               	fcall	_GetTimer_State
   167  0030  3A00               	xorlw	0
   168  0031  1903               	skipnz
   169  0032  2834               	goto	u1011
   170  0033  2835               	goto	u1010
   171  0034                     u1011:
   172  0034  2876               	goto	l9
   173  0035                     u1010:
   174                           	line	37
   175                           ;main.c: 36: {
   176                           ;main.c: 37: Start_Timer(0,1000);
   177  0035  30E8               	movlw	low(03E8h)
   178  0036  1283               	bcf	status, 5	;RP0=0, select bank0
   179                           	
   180  0037  00A1               	movwf	(?_Start_Timer)
   181  0038  3003               	movlw	high(03E8h)
   182  0039  00A2               	movwf	((?_Start_Timer))+1
   183  003A  3000               	movlw	(0)
   184  003B  211E               	fcall	_Start_Timer
   185                           	line	38
   186                           ;main.c: 38: Time_Sec++;
   187  003C  3001               	movlw	(01h)
   188  003D  1283               	bcf	status, 5	;RP0=0, select bank0
   189  003E  00A0               	movwf	(??_main+0+0)
   190                           	
   191  003F  0820               	movf	(??_main+0+0),w
   192  0040  07FA               	addwf	(122),f
   193                           	line	39
   194                           ;main.c: 39: Elapsed_Secs++;
   195  0041  3001               	movlw	(01h)
   196  0042  00A0               	movwf	(??_main+0+0)
   197                           	
   198  0043  0820               	movf	(??_main+0+0),w
   199  0044  07FC               	addwf	(124),f
   200                           	line	40
   201                           ;main.c: 40: if(Time_Sec >59)
   202  0045  303C               	movlw	(03Ch)
   203                           	
   204  0046  027A               	subwf	(122),w
   205  0047  1C03               	skipc
   206  0048  284A               	goto	u1021
   207  0049  284B               	goto	u1020
   208  004A                     u1021:
   209  004A  2876               	goto	l9
   210  004B                     u1020:
   211                           	line	42
   212                           ;main.c: 41: {
   213                           ;main.c: 42: Time_Min++;
   214  004B  3001               	movlw	(01h)
   215  004C  00A0               	movwf	(??_main+0+0)
   216                           	
   217  004D  0820               	movf	(??_main+0+0),w
   218  004E  07F9               	addwf	(121),f
   219                           	line	43
   220                           ;main.c: 43: Elapsed_Mins++;
   221  004F  3001               	movlw	(01h)
   222  0050  00A0               	movwf	(??_main+0+0)
   223                           	
   224  0051  0820               	movf	(??_main+0+0),w
   225  0052  07F8               	addwf	(120),f
   226                           	line	44
   227                           ;main.c: 44: Time_Sec=0;
   228  0053  1003               	clrc
   229                           	
   230  0054  3000               	movlw	0
   231  0055  1803               	btfsc	status,0
   232  0056  3001               	movlw	1
   233  0057  00FA               	movwf	(122)
   234                           	line	46
   235                           ;main.c: 46: if(Time_Min>59)
   236  0058  303C               	movlw	(03Ch)
   237                           	
   238  0059  0279               	subwf	(121),w
   239  005A  1C03               	skipc
   240  005B  285D               	goto	u1031
   241  005C  285E               	goto	u1030
   242  005D                     u1031:
   243  005D  2876               	goto	l9
   244  005E                     u1030:
   245                           	line	48
   246                           ;main.c: 47: {
   247                           ;main.c: 48: Time_Hour++;
   248  005E  3001               	movlw	(01h)
   249  005F  00A0               	movwf	(??_main+0+0)
   250                           	
   251  0060  0820               	movf	(??_main+0+0),w
   252  0061  07FB               	addwf	(123),f
   253                           	line	49
   254                           ;main.c: 49: Elapsed_Hours++;
   255  0062  3001               	movlw	(01h)
   256  0063  00A0               	movwf	(??_main+0+0)
   257                           	
   258  0064  0820               	movf	(??_main+0+0),w
   259  0065  07E3               	addwf	(99),f
   260                           	line	50
   261                           ;main.c: 50: Time_Min=0;
   262  0066  1003               	clrc
   263                           	
   264  0067  3000               	movlw	0
   265  0068  1803               	btfsc	status,0
   266  0069  3001               	movlw	1
   267  006A  00F9               	movwf	(121)
   268                           	line	51
   269                           ;main.c: 51: if(Time_Hour >23)
   270  006B  3018               	movlw	(018h)
   271                           	
   272  006C  027B               	subwf	(123),w
   273  006D  1C03               	skipc
   274  006E  2870               	goto	u1041
   275  006F  2871               	goto	u1040
   276  0070                     u1041:
   277  0070  2876               	goto	l9
   278  0071                     u1040:
   279                           	line	53
   280                           ;main.c: 52: {
   281                           ;main.c: 53: Time_Hour=0;
   282  0071  1003               	clrc
   283                           	
   284  0072  3000               	movlw	0
   285  0073  1803               	btfsc	status,0
   286  0074  3001               	movlw	1
   287  0075  00FB               	movwf	(123)
   288                           	line	54
   289                           	
   290  0076                     l12:	
   291                           	line	56
   292                           	
   293  0076                     l11:	
   294                           	line	57
   295                           	
   296  0076                     l10:	
   297                           	line	59
   298                           	
   299  0076                     l9:	
   300                           	line	61
   301                           ;main.c: 54: }
   302                           ;main.c: 56: }
   303                           ;main.c: 57: }
   304                           ;main.c: 59: }
   305                           ;main.c: 61: if(Elapsed_Mins >= Input_Time)
   306  0076  1283               	bcf	status, 5	;RP0=0, select bank0
   307                           	
   308  0077  087D               	movf	(125),w
   309                           	
   310                           	
   311  0078  0278               	subwf	(120),w
   312  0079  1C03               	skipc
   313  007A  287C               	goto	u1051
   314  007B  287D               	goto	u1050
   315  007C                     u1051:
   316  007C  287E               	goto	l6
   317  007D                     u1050:
   318                           	line	63
   319                           ;main.c: 62: {
   320                           ;main.c: 63: Set_Relay_on();
   321  007D  217E               	fcall	_Set_Relay_on
   322                           	line	64
   323                           	
   324  007E                     l13:	
   325                           	line	71
   326                           	
   327  007E                     l6:	
   328                           	line	32
   329  007E  282E               	goto	l7
   330                           	global	start
   331  007F  280F               	ljmp	start
   332                           ; =============== function _main ends =========
                                 ======
   333                           
   334                           GLOBAL __end_of_main
   335  0080                     	__end_of_main:
   336                           	FNSIZE	_main,1,0
   337                           	psect	maintext
   338                           	line	72
   339                           	signat	_main,88
   340                           	global	_Read_switch
   341                           	global	??_Read_switch
   342                           	global	?_Read_switch
   343                           
   344                           ; *************** function _Read_switch *******
                                 ********
   345                           ; Defined at:
   346                           ;		line 17 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PIC16F684_BCDTimer\DigI
                                 O.c"
   347                           ; Parameters:
   348                           ;		None
   349                           ; Auto variables:
   350                           ;		retval      	       	type: unsigned char 
   351                           ;		temp        	       	type: unsigned char 
   352                           ; Return value:
   353                           ;		type: unsigned char 
   354                           ;		size: 1
   355                           ; Registers used:
   356                           ;		wreg, status,2, status,0
   357                           ; Tracked objects:
   358                           ;		On entry : 0/0
   359                           ;		On exit  : 0/0
   360                           ;		Unchanged: 0/0
   361                           ; Data sizes:
   362                           ;		Autos:    2
   363                           ;		Params:   0
   364                           ;		Temp:     1
   365                           ;		Total:    3
   366                           ; This function calls:
   367                           ;		Nothing
   368                           ; This function is called by:
   369                           ;		_main
   370                           ; This function uses a non-reentrant model
   371                           ; 
   372                           	psect	text87,local,class=CODE,delta=2
   373                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\DigIO.c"
   374                           	line	17
   375                           ;DigIO.c: 16: unsigned char Read_switch(void)
   376                           ;DigIO.c: 17: {
   377                           	
   378  00F4                     _Read_switch:	
   379                           ; Regs used in _Read_switch: [wreg+status,2+sta
                                 tus,0]
   380                           	line	18
   381                           ;DigIO.c: 18: unsigned char retval=0,temp=0;
   382  00F4  1003               	clrc
   383  00F5  1283               	bcf	status, 5	;RP0=0, select bank0
   384                           	
   385  00F6  3000               	movlw	0
   386  00F7  1803               	btfsc	status,0
   387  00F8  3001               	movlw	1
   388  00F9  00A2               	movwf	(_Read_switch_retval)
   389  00FA  1003               	clrc
   390                           	
   391  00FB  3000               	movlw	0
   392  00FC  1803               	btfsc	status,0
   393  00FD  3001               	movlw	1
   394  00FE  00A1               	movwf	(_Read_switch_temp)
   395                           	line	19
   396                           ;DigIO.c: 19: temp = PORTA;
   397                           	
   398  00FF  0805               	movf	(5),w	;volatile
   399                           	
   400                           	
   401  0100  00A1               	movwf	(_Read_switch_temp)
   402                           	line	20
   403                           ;DigIO.c: 20: temp &=0x0F;
   404  0101  300F               	movlw	(0Fh)
   405  0102  00A3               	movwf	(??_Read_switch+2+0)
   406                           	
   407  0103  0823               	movf	(??_Read_switch+2+0),w
   408  0104  05A1               	andwf	(_Read_switch_temp),f
   409                           	line	21
   410                           ;DigIO.c: 21: temp = temp << 4;
   411                           	
   412  0105  0821               	movf	(_Read_switch_temp),w
   413  0106  1383               	bcf	status, 7	;select IRP bank0
   414                           	
   415  0107  00A3               	movwf	(??_Read_switch+2+0)
   416  0108  3003               	movlw	(04h)-1
   417  0109                     u1065:
   418  0109  1003               	clrc
   419  010A  0DA3               	rlf	(??_Read_switch+2+0),f
   420  010B  3EFF               	addlw	-1
   421  010C  1D03               	skipz
   422  010D  2909               	goto	u1065
   423  010E  1003               	clrc
   424  010F  0D23               	rlf	(??_Read_switch+2+0),w
   425                           	
   426  0110  00A1               	movwf	(_Read_switch_temp)
   427                           	line	22
   428                           ;DigIO.c: 22: retval = PORTC;
   429                           	
   430  0111  0807               	movf	(7),w	;volatile
   431                           	
   432                           	
   433  0112  00A2               	movwf	(_Read_switch_retval)
   434                           	line	23
   435                           ;DigIO.c: 23: retval &=0x0F;
   436  0113  300F               	movlw	(0Fh)
   437  0114  00A3               	movwf	(??_Read_switch+2+0)
   438                           	
   439  0115  0823               	movf	(??_Read_switch+2+0),w
   440  0116  05A2               	andwf	(_Read_switch_retval),f
   441                           	line	26
   442                           ;DigIO.c: 26: retval |=temp;
   443                           	
   444  0117  0821               	movf	(_Read_switch_temp),w
   445                           	
   446  0118  00A3               	movwf	(??_Read_switch+2+0)
   447                           	
   448  0119  0823               	movf	(??_Read_switch+2+0),w
   449  011A  04A2               	iorwf	(_Read_switch_retval),f
   450                           	line	29
   451                           ;DigIO.c: 29: return retval;
   452                           	
   453  011B  0822               	movf	(_Read_switch_retval),w
   454                           	
   455  011C  291D               	goto	l2
   456                           	line	30
   457                           ;DigIO.c: 30: }
   458  011D                     l2:	
   459  011D  0008               	return
   460                           ; =============== function _Read_switch ends ==
                                 =============
   461                           
   462                           GLOBAL __end_of_Read_switch
   463  011E                     	__end_of_Read_switch:
   464                           	FNSIZE	_Read_switch,3,0
   465                           	signat	_Read_switch,89
   466                           	global	_Set_Relay_off
   467                           	global	??_Set_Relay_off
   468                           	global	?_Set_Relay_off
   469                           
   470                           ; *************** function _Set_Relay_off *****
                                 **********
   471                           ; Defined at:
   472                           ;		line 39 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PIC16F684_BCDTimer\DigI
                                 O.c"
   473                           ; Parameters:
   474                           ;		None
   475                           ; Auto variables:
   476                           ;		None
   477                           ; Return value:
   478                           ;		type: void 
   479                           ;		size: 0
   480                           ; Registers used:
   481                           ;		wreg, status,2, status,0
   482                           ; Tracked objects:
   483                           ;		On entry : 0/0
   484                           ;		On exit  : 0/0
   485                           ;		Unchanged: 0/0
   486                           ; Data sizes:
   487                           ;		Autos:    0
   488                           ;		Params:   0
   489                           ;		Temp:     1
   490                           ;		Total:    1
   491                           ; This function calls:
   492                           ;		Nothing
   493                           ; This function is called by:
   494                           ;		_main
   495                           ; This function uses a non-reentrant model
   496                           ; 
   497                           	psect	text88,local,class=CODE,delta=2
   498                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\DigIO.c"
   499                           	line	39
   500                           ;DigIO.c: 38: void Set_Relay_off(void)
   501                           ;DigIO.c: 39: {
   502                           	
   503  0178                     _Set_Relay_off:	
   504                           ; Regs used in _Set_Relay_off: [wreg+status,2+s
                                 tatus,0]
   505                           	line	40
   506                           ;DigIO.c: 40: PORTC &= 0b11101111;
   507  0178  30EF               	movlw	(0EFh)
   508  0179  1283               	bcf	status, 5	;RP0=0, select bank0
   509  017A  00A1               	movwf	(??_Set_Relay_off+0+0)
   510                           	
   511  017B  0821               	movf	(??_Set_Relay_off+0+0),w
   512  017C  0587               	andwf	(7),f	;volatile
   513                           	line	41
   514                           ;DigIO.c: 41: }
   515  017D                     l4:	
   516  017D  0008               	return
   517                           ; =============== function _Set_Relay_off ends 
                                 ===============
   518                           
   519                           GLOBAL __end_of_Set_Relay_off
   520  017E                     	__end_of_Set_Relay_off:
   521                           	FNSIZE	_Set_Relay_off,1,0
   522                           	signat	_Set_Relay_off,88
   523                           	global	_Set_Relay_on
   524                           	global	??_Set_Relay_on
   525                           	global	?_Set_Relay_on
   526                           
   527                           ; *************** function _Set_Relay_on ******
                                 *********
   528                           ; Defined at:
   529                           ;		line 34 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PIC16F684_BCDTimer\DigI
                                 O.c"
   530                           ; Parameters:
   531                           ;		None
   532                           ; Auto variables:
   533                           ;		None
   534                           ; Return value:
   535                           ;		type: void 
   536                           ;		size: 0
   537                           ; Registers used:
   538                           ;		None
   539                           ; Tracked objects:
   540                           ;		On entry : 100/0
   541                           ;		On exit  : 0/0
   542                           ;		Unchanged: 0/0
   543                           ; Data sizes:
   544                           ;		Autos:    0
   545                           ;		Params:   0
   546                           ;		Temp:     0
   547                           ;		Total:    0
   548                           ; This function calls:
   549                           ;		Nothing
   550                           ; This function is called by:
   551                           ;		_main
   552                           ; This function uses a non-reentrant model
   553                           ; 
   554                           	psect	text89,local,class=CODE,delta=2
   555                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\DigIO.c"
   556                           	line	34
   557                           ;DigIO.c: 33: void Set_Relay_on(void)
   558                           ;DigIO.c: 34: {
   559                           	
   560  017E                     _Set_Relay_on:	
   561                           ; Regs used in _Set_Relay_on: []
   562                           	line	35
   563                           ;DigIO.c: 35: PORTC |= 0b00010000;
   564                           	
   565  017E  1607               	bsf	(7)+(4/8),(4)&7	;volatile
   566                           	line	36
   567                           ;DigIO.c: 36: }
   568  017F                     l3:	
   569  017F  0008               	return
   570                           ; =============== function _Set_Relay_on ends =
                                 ==============
   571                           
   572                           GLOBAL __end_of_Set_Relay_on
   573  0180                     	__end_of_Set_Relay_on:
   574                           	FNSIZE	_Set_Relay_on,0,0
   575                           	signat	_Set_Relay_on,88
   576                           	global	_GetTimer_State
   577                           	global	??_GetTimer_State
   578                           	global	?_GetTimer_State
   579                           
   580                           ; *************** function _GetTimer_State ****
                                 ***********
   581                           ; Defined at:
   582                           ;		line 30 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PIC16F684_BCDTimer\SW_T
                                 IMER.c"
   583                           ; Parameters:
   584                           ;		TimerID     	reg:   wr	type: unsigned char 
   585                           ; Auto variables:
   586                           ;		TimerID     	       	type: unsigned char 
   587                           ; Return value:
   588                           ;		type: unsigned char 
   589                           ;		size: 1
   590                           ; Registers used:
   591                           ;		wreg, fsr, status,2, status,0
   592                           ; Tracked objects:
   593                           ;		On entry : 0/0
   594                           ;		On exit  : 0/0
   595                           ;		Unchanged: 0/0
   596                           ; Data sizes:
   597                           ;		Autos:    1
   598                           ;		Params:   0
   599                           ;		Temp:     8
   600                           ;		Total:    9
   601                           ; This function calls:
   602                           ;		Nothing
   603                           ; This function is called by:
   604                           ;		_main
   605                           ; This function uses a non-reentrant model
   606                           ; 
   607                           	psect	text90,local,class=CODE,delta=2
   608                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\SW_TIMER.c"
   609                           	line	30
   610                           ;SW_TIMER.c: 29: unsigned char GetTimer_State(u
                                 nsigned char TimerID)
   611                           ;SW_TIMER.c: 30: {
   612                           	
   613  0080                     _GetTimer_State:	
   614                           ; Regs used in _GetTimer_State: [wreg+fsr+statu
                                 s,2+status,0]
   615                           ;_GetTimer_State_TimerID stored from wreg
   616  0080  1283               	bcf	status, 5	;RP0=0, select bank0
   617                           	
   618  0081  00A1               	movwf	(_GetTimer_State_TimerID)
   619                           	line	31
   620                           ;SW_TIMER.c: 31: if ( TimerState[TimerID] == 1 
                                 )
   621                           	
   622  0082  0821               	movf	(_GetTimer_State_TimerID),w
   623  0083  1383               	bcf	status, 7	;select IRP bank0
   624                           	
   625  0084  3E64               	addlw	100&0ffh
   626  0085  0084               	movwf	fsr
   627                           	
   628  0086  0800               	movf	indf,w
   629                           	
   630  0087  3A01               	xorlw	01h
   631  0088  1D03               	skipz
   632  0089  288B               	goto	u1071
   633  008A  288C               	goto	u1070
   634  008B                     u1071:
   635  008B  28BB               	goto	l20
   636  008C                     u1070:
   637                           	line	33
   638                           ;SW_TIMER.c: 32: {
   639                           ;SW_TIMER.c: 33: if( (Ref1ms_counter -TimerStar
                                 t[TimerID]) > TimerTimeOutVal[TimerID] )
   640                           	
   641  008C  0821               	movf	(_GetTimer_State_TimerID),w
   642                           	
   643  008D  00A2               	movwf	(??_GetTimer_State+1+0)
   644  008E  0722               	addwf	(??_GetTimer_State+1+0),w
   645  008F  3E68               	addlw	104&0ffh
   646  0090  0084               	movwf	fsr
   647  0091  0800               	movf	indf,w
   648  0092  00A3               	movwf	(??_GetTimer_State+2+0)
   649  0093  3001               	movlw	1
   650  0094  0784               	addwf	fsr,f
   651  0095  0800               	movf	indf,w
   652  0096  00A4               	movwf	(??_GetTimer_State+2+0+1)
   653                           	
   654  0097  0823               	movf	0+(??_GetTimer_State+2+0),w
   655  0098  0261               	subwf	(97),w	;volatile
   656  0099  00A5               	movwf	(??_GetTimer_State+4+0)
   657  009A  0824               	movf	1+(??_GetTimer_State+2+0),w
   658  009B  1C03               	skipc
   659  009C  0A24               	incf	1+(??_GetTimer_State+2+0),w
   660  009D  0262               	subwf	(97+1),w	;volatile
   661  009E  00A6               	movwf	1+(??_GetTimer_State+4+0)
   662                           	
   663  009F  0821               	movf	(_GetTimer_State_TimerID),w
   664                           	
   665  00A0  00A7               	movwf	(??_GetTimer_State+6+0)
   666  00A1  0727               	addwf	(??_GetTimer_State+6+0),w
   667  00A2  3E70               	addlw	112&0ffh
   668  00A3  0084               	movwf	fsr
   669  00A4  0800               	movf	indf,w
   670  00A5  00A8               	movwf	(??_GetTimer_State+7+0)
   671  00A6  3001               	movlw	1
   672  00A7  0784               	addwf	fsr,f
   673  00A8  0800               	movf	indf,w
   674  00A9  00A9               	movwf	(??_GetTimer_State+7+0+1)
   675  00AA  0826               	movf	1+(??_GetTimer_State+4+0),w
   676  00AB  0229               	subwf	1+(??_GetTimer_State+7+0),w
   677  00AC  1D03               	skipz
   678  00AD  28B0               	goto	u1085
   679  00AE  0825               	movf	0+(??_GetTimer_State+4+0),w
   680  00AF  0228               	subwf	0+(??_GetTimer_State+7+0),w
   681  00B0                     u1085:
   682  00B0  1803               	skipnc
   683  00B1  28B3               	goto	u1081
   684  00B2  28B4               	goto	u1080
   685  00B3                     u1081:
   686  00B3  28BB               	goto	l20
   687  00B4                     u1080:
   688                           	line	34
   689                           ;SW_TIMER.c: 34: TimerState[TimerID] =3;
   690  00B4  3003               	movlw	(03h)
   691  00B5  00A2               	movwf	(??_GetTimer_State+1+0)
   692                           	
   693  00B6  0821               	movf	(_GetTimer_State_TimerID),w
   694                           	
   695  00B7  3E64               	addlw	100&0ffh
   696  00B8  0084               	movwf	fsr
   697                           	
   698  00B9  0822               	movf	(??_GetTimer_State+1+0),w
   699  00BA  0080               	movwf	indf
   700                           	
   701  00BB                     l21:	
   702                           	line	35
   703                           	
   704  00BB                     l20:	
   705                           	line	36
   706                           ;SW_TIMER.c: 35: }
   707                           ;SW_TIMER.c: 36: return TimerState[TimerID];
   708                           	
   709  00BB  0821               	movf	(_GetTimer_State_TimerID),w
   710                           	
   711  00BC  3E64               	addlw	100&0ffh
   712  00BD  0084               	movwf	fsr
   713                           	
   714  00BE  0800               	movf	indf,w
   715                           	
   716  00BF  28C0               	goto	l19
   717                           	line	37
   718                           ;SW_TIMER.c: 37: }
   719  00C0                     l19:	
   720  00C0  0008               	return
   721                           ; =============== function _GetTimer_State ends
                                  ===============
   722                           
   723                           GLOBAL __end_of_GetTimer_State
   724  00C1                     	__end_of_GetTimer_State:
   725                           	FNSIZE	_GetTimer_State,9,0
   726                           	signat	_GetTimer_State,4217
   727                           	global	_init_timer
   728                           	global	??_init_timer
   729                           	global	?_init_timer
   730                           
   731                           ; *************** function _init_timer ********
                                 *******
   732                           ; Defined at:
   733                           ;		line 8 in file "C:\Documents and Settings\Ja
                                 yamma\My Documents\PIC\PIC16F684_BCDTimer\Timer
                                 c.c"
   734                           ; Parameters:
   735                           ;		None
   736                           ; Auto variables:
   737                           ;		None
   738                           ; Return value:
   739                           ;		type: void 
   740                           ;		size: 0
   741                           ; Registers used:
   742                           ;		wreg
   743                           ; Tracked objects:
   744                           ;		On entry : 0/0
   745                           ;		On exit  : 0/0
   746                           ;		Unchanged: 0/0
   747                           ; Data sizes:
   748                           ;		Autos:    0
   749                           ;		Params:   0
   750                           ;		Temp:     0
   751                           ;		Total:    0
   752                           ; This function calls:
   753                           ;		Nothing
   754                           ; This function is called by:
   755                           ;		_main
   756                           ; This function uses a non-reentrant model
   757                           ; 
   758                           	psect	text91,local,class=CODE,delta=2
   759                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\Timerc.c"
   760                           	line	8
   761                           ;Timerc.c: 6: void init_timer(void)
   762                           ;Timerc.c: 8: {
   763                           	
   764  016D                     _init_timer:	
   765                           ; Regs used in _init_timer: [wreg]
   766                           	line	10
   767                           ;Timerc.c: 10: TMR1H = 0xFC;
   768  016D  30FC               	movlw	(0FCh)
   769  016E  1283               	bcf	status, 5	;RP0=0, select bank0
   770                           	
   771  016F  008F               	movwf	(15)	;volatile
   772                           	line	11
   773                           ;Timerc.c: 11: TMR1L =0x17;
   774  0170  3017               	movlw	(017h)
   775                           	
   776  0171  008E               	movwf	(14)	;volatile
   777                           	line	12
   778                           ;Timerc.c: 12: T1CON = 0x01;
   779  0172  3001               	movlw	(01h)
   780                           	
   781  0173  0090               	movwf	(16)	;volatile
   782                           	line	14
   783                           ;Timerc.c: 14: TMR1IF=0;
   784  0174  100C               	bcf	(96/8),(96)&7
   785                           	line	15
   786                           ;Timerc.c: 15: TMR1IE =1;
   787  0175  1683               	bsf	status, 5	;RP0=1, select bank1
   788  0176  140C               	bsf	(1120/8)^080h,(1120)&7
   789                           	line	18
   790                           ;Timerc.c: 18: }
   791  0177                     l23:	
   792  0177  0008               	return
   793                           ; =============== function _init_timer ends ===
                                 ============
   794                           
   795                           GLOBAL __end_of_init_timer
   796  0178                     	__end_of_init_timer:
   797                           	FNSIZE	_init_timer,0,0
   798                           	signat	_init_timer,88
   799                           	global	_init_DigIO
   800                           	global	??_init_DigIO
   801                           	global	?_init_DigIO
   802                           
   803                           ; *************** function _init_DigIO ********
                                 *******
   804                           ; Defined at:
   805                           ;		line 5 in file "C:\Documents and Settings\Ja
                                 yamma\My Documents\PIC\PIC16F684_BCDTimer\DigIO
                                 .c"
   806                           ; Parameters:
   807                           ;		None
   808                           ; Auto variables:
   809                           ;		None
   810                           ; Return value:
   811                           ;		type: void 
   812                           ;		size: 0
   813                           ; Registers used:
   814                           ;		wreg, status,2, status,0
   815                           ; Tracked objects:
   816                           ;		On entry : BFF/0
   817                           ;		On exit  : 0/0
   818                           ;		Unchanged: 0/0
   819                           ; Data sizes:
   820                           ;		Autos:    0
   821                           ;		Params:   0
   822                           ;		Temp:     0
   823                           ;		Total:    0
   824                           ; This function calls:
   825                           ;		Nothing
   826                           ; This function is called by:
   827                           ;		_main
   828                           ; This function uses a non-reentrant model
   829                           ; 
   830                           	psect	text92,local,class=CODE,delta=2
   831                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\DigIO.c"
   832                           	line	5
   833                           ;DigIO.c: 4: void init_DigIO(void)
   834                           ;DigIO.c: 5: {
   835                           	
   836  0155                     _init_DigIO:	
   837                           ; Regs used in _init_DigIO: [wreg+status,2+stat
                                 us,0]
   838                           	line	6
   839                           ;DigIO.c: 6: CMCON0 = 7;
   840  0155  3007               	movlw	(07h)
   841                           	
   842  0156  0099               	movwf	(25)	;volatile
   843                           	line	7
   844                           ;DigIO.c: 7: ANSEL = 0;
   845  0157  1003               	clrc
   846  0158  1683               	bsf	status, 5	;RP0=1, select bank1
   847                           	
   848  0159  3000               	movlw	0
   849  015A  1803               	btfsc	status,0
   850  015B  3001               	movlw	1
   851  015C  0091               	movwf	(145)^080h
   852                           	line	9
   853                           ;DigIO.c: 9: TRISC =0xEF;
   854  015D  30EF               	movlw	(0EFh)
   855                           	
   856  015E  0087               	movwf	(135)^080h	;volatile
   857                           	line	10
   858                           ;DigIO.c: 10: TRISA =0xFF;
   859                           	
   860  015F  30FF               	movlw	0ffh
   861  0160  0085               	movwf	(133)^080h	;volatile
   862                           	line	11
   863                           ;DigIO.c: 11: PORTA =0;
   864  0161  1003               	clrc
   865  0162  1283               	bcf	status, 5	;RP0=0, select bank0
   866                           	
   867  0163  3000               	movlw	0
   868  0164  1803               	btfsc	status,0
   869  0165  3001               	movlw	1
   870  0166  0085               	movwf	(5)	;volatile
   871                           	line	12
   872                           ;DigIO.c: 12: PORTC=0;
   873  0167  1003               	clrc
   874                           	
   875  0168  3000               	movlw	0
   876  0169  1803               	btfsc	status,0
   877  016A  3001               	movlw	1
   878  016B  0087               	movwf	(7)	;volatile
   879                           	line	14
   880                           ;DigIO.c: 14: }
   881  016C                     l1:	
   882  016C  0008               	return
   883                           ; =============== function _init_DigIO ends ===
                                 ============
   884                           
   885                           GLOBAL __end_of_init_DigIO
   886  016D                     	__end_of_init_DigIO:
   887                           	FNSIZE	_init_DigIO,0,0
   888                           	signat	_init_DigIO,88
   889                           	global	_Start_Timer
   890                           	global	??_Start_Timer
   891                           	global	?_Start_Timer
   892                           
   893                           ; *************** function _Start_Timer *******
                                 ********
   894                           ; Defined at:
   895                           ;		line 22 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PIC16F684_BCDTimer\SW_T
                                 IMER.c"
   896                           ; Parameters:
   897                           ;		Timer_ID    	reg:   wr	type: unsigned char 
   898                           ;		TimeoutVal  	offs:   0	type: unsigned int 
   899                           ; Auto variables:
   900                           ;		Timer_ID    	       	type: unsigned char 
   901                           ; Return value:
   902                           ;		type: void 
   903                           ;		size: 0
   904                           ; Registers used:
   905                           ;		wreg, fsr, status,2, status,0
   906                           ; Tracked objects:
   907                           ;		On entry : 100/0
   908                           ;		On exit  : 0/0
   909                           ;		Unchanged: 0/0
   910                           ; Data sizes:
   911                           ;		Autos:    1
   912                           ;		Params:   2
   913                           ;		Temp:     1
   914                           ;		Total:    4
   915                           ; This function calls:
   916                           ;		Nothing
   917                           ; This function is called by:
   918                           ;		_main
   919                           ; This function uses a non-reentrant model
   920                           ; 
   921                           	psect	text93,local,class=CODE,delta=2
   922                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\SW_TIMER.c"
   923                           	line	22
   924                           ;SW_TIMER.c: 21: void Start_Timer(unsigned char
                                  Timer_ID , unsigned int TimeoutVal)
   925                           ;SW_TIMER.c: 22: {
   926                           	
   927  011E                     _Start_Timer:	
   928                           ; Regs used in _Start_Timer: [wreg+fsr+status,2
                                 +status,0]
   929                           ;_Start_Timer_Timer_ID stored from wreg
   930                           	
   931  011E  00A3               	movwf	(_Start_Timer_Timer_ID)
   932                           	line	23
   933                           ;SW_TIMER.c: 23: TimerStart[Timer_ID] = Ref1ms_
                                 counter;
   934                           	
   935                           	
   936  011F  0823               	movf	(_Start_Timer_Timer_ID),w
   937  0120  1383               	bcf	status, 7	;select IRP bank0
   938                           	
   939  0121  00A4               	movwf	(??_Start_Timer+1+0)
   940  0122  0724               	addwf	(??_Start_Timer+1+0),w
   941  0123  3E68               	addlw	104&0ffh
   942  0124  0084               	movwf	fsr
   943  0125  0861               	movf	(97),w	;volatile
   944  0126  0080               	movwf	indf
   945  0127  0A84               	incf	fsr,f
   946  0128  0862               	movf	(97+1),w	;volatile
   947  0129  0080               	movwf	indf
   948                           	line	24
   949                           ;SW_TIMER.c: 24: TimerState[Timer_ID] =1;
   950                           	
   951  012A  0823               	movf	(_Start_Timer_Timer_ID),w
   952                           	
   953  012B  3E64               	addlw	100&0ffh
   954  012C  0084               	movwf	fsr
   955                           	
   956  012D  0180               	clrf	indf
   957  012E  1403               	bsf	status,0
   958  012F  0D80               	rlf	indf,f
   959                           	line	25
   960                           ;SW_TIMER.c: 25: TimerTimeOutVal[Timer_ID] =Tim
                                 eoutVal;
   961                           	
   962                           	
   963  0130  0823               	movf	(_Start_Timer_Timer_ID),w
   964                           	
   965  0131  00A4               	movwf	(??_Start_Timer+1+0)
   966  0132  0724               	addwf	(??_Start_Timer+1+0),w
   967  0133  3E70               	addlw	112&0ffh
   968  0134  0084               	movwf	fsr
   969  0135  0821               	movf	(_Start_Timer_TimeoutVal),w
   970  0136  0080               	movwf	indf
   971  0137  0A84               	incf	fsr,f
   972  0138  0822               	movf	(_Start_Timer_TimeoutVal+1),w
   973  0139  0080               	movwf	indf
   974                           	line	26
   975                           ;SW_TIMER.c: 26: }
   976  013A                     l18:	
   977  013A  0008               	return
   978                           ; =============== function _Start_Timer ends ==
                                 =============
   979                           
   980                           GLOBAL __end_of_Start_Timer
   981  013B                     	__end_of_Start_Timer:
   982                           	FNSIZE	_Start_Timer,2,2
   983                           	signat	_Start_Timer,8312
   984                           	global	_init_SWTimer
   985                           	global	??_init_SWTimer
   986                           	global	?_init_SWTimer
   987                           
   988                           ; *************** function _init_SWTimer ******
                                 *********
   989                           ; Defined at:
   990                           ;		line 6 in file "C:\Documents and Settings\Ja
                                 yamma\My Documents\PIC\PIC16F684_BCDTimer\SW_TI
                                 MER.c"
   991                           ; Parameters:
   992                           ;		None
   993                           ; Auto variables:
   994                           ;		counter     	       	type: unsigned char 
   995                           ; Return value:
   996                           ;		type: void 
   997                           ;		size: 0
   998                           ; Registers used:
   999                           ;		wreg, fsr, status,2, status,0
  1000                           ; Tracked objects:
  1001                           ;		On entry : 0/0
  1002                           ;		On exit  : 0/0
  1003                           ;		Unchanged: 0/0
  1004                           ; Data sizes:
  1005                           ;		Autos:    1
  1006                           ;		Params:   0
  1007                           ;		Temp:     1
  1008                           ;		Total:    2
  1009                           ; This function calls:
  1010                           ;		Nothing
  1011                           ; This function is called by:
  1012                           ;		_main
  1013                           ; This function uses a non-reentrant model
  1014                           ; 
  1015                           	psect	text94,local,class=CODE,delta=2
  1016                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\SW_TIMER.c"
  1017                           	line	6
  1018                           ;SW_TIMER.c: 5: void init_SWTimer(void)
  1019                           ;SW_TIMER.c: 6: {
  1020                           	
  1021  00C1                     _init_SWTimer:	
  1022                           ; Regs used in _init_SWTimer: [wreg+fsr+status,
                                 2+status,0]
  1023                           	line	7
  1024                           ;SW_TIMER.c: 7: unsigned char counter=0;
  1025  00C1  1003               	clrc
  1026  00C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1027                           	
  1028  00C3  3000               	movlw	0
  1029  00C4  1803               	btfsc	status,0
  1030  00C5  3001               	movlw	1
  1031  00C6  00A1               	movwf	(_init_SWTimer_counter)
  1032                           	line	9
  1033                           ;SW_TIMER.c: 9: for (counter=0;counter <4 ; cou
                                 nter++)
  1034  00C7  1003               	clrc
  1035                           	
  1036  00C8  3000               	movlw	0
  1037  00C9  1803               	btfsc	status,0
  1038  00CA  3001               	movlw	1
  1039  00CB  00A1               	movwf	(_init_SWTimer_counter)
  1040  00CC  28CD               	goto	l15
  1041                           	line	10
  1042                           	
  1043  00CD                     l15:	
  1044                           	line	11
  1045                           ;SW_TIMER.c: 10: {
  1046                           ;SW_TIMER.c: 11: TimerStart[counter]=0;
  1047                           	
  1048  00CD  0821               	movf	(_init_SWTimer_counter),w
  1049  00CE  1383               	bcf	status, 7	;select IRP bank0
  1050                           	
  1051  00CF  00A2               	movwf	(??_init_SWTimer+1+0)
  1052  00D0  0722               	addwf	(??_init_SWTimer+1+0),w
  1053  00D1  3E68               	addlw	104&0ffh
  1054  00D2  0084               	movwf	fsr
  1055  00D3  3000               	movlw	low(0)
  1056  00D4  0080               	movwf	indf
  1057  00D5  0A84               	incf	fsr,f
  1058  00D6  3000               	movlw	high(0)
  1059  00D7  0080               	movwf	indf
  1060                           	line	12
  1061                           ;SW_TIMER.c: 12: TimerState[counter] =2;
  1062  00D8  3002               	movlw	(02h)
  1063  00D9  00A2               	movwf	(??_init_SWTimer+1+0)
  1064                           	
  1065  00DA  0821               	movf	(_init_SWTimer_counter),w
  1066                           	
  1067  00DB  3E64               	addlw	100&0ffh
  1068  00DC  0084               	movwf	fsr
  1069                           	
  1070  00DD  0822               	movf	(??_init_SWTimer+1+0),w
  1071  00DE  0080               	movwf	indf
  1072                           	line	13
  1073                           ;SW_TIMER.c: 13: TimerTimeOutVal[counter]=0;
  1074                           	
  1075  00DF  0821               	movf	(_init_SWTimer_counter),w
  1076                           	
  1077  00E0  00A2               	movwf	(??_init_SWTimer+1+0)
  1078  00E1  0722               	addwf	(??_init_SWTimer+1+0),w
  1079  00E2  3E70               	addlw	112&0ffh
  1080  00E3  0084               	movwf	fsr
  1081  00E4  3000               	movlw	low(0)
  1082  00E5  0080               	movwf	indf
  1083  00E6  0A84               	incf	fsr,f
  1084  00E7  3000               	movlw	high(0)
  1085  00E8  0080               	movwf	indf
  1086                           	line	9
  1087  00E9  3001               	movlw	(01h)
  1088  00EA  00A2               	movwf	(??_init_SWTimer+1+0)
  1089                           	
  1090  00EB  0822               	movf	(??_init_SWTimer+1+0),w
  1091  00EC  07A1               	addwf	(_init_SWTimer_counter),f
  1092  00ED  3004               	movlw	(04h)
  1093                           	
  1094  00EE  0221               	subwf	(_init_SWTimer_counter),w
  1095  00EF  1C03               	skipc
  1096  00F0  28F2               	goto	u1101
  1097  00F1  28F3               	goto	u1100
  1098  00F2                     u1101:
  1099  00F2  28CD               	goto	l15
  1100  00F3                     u1100:
  1101                           	
  1102  00F3                     l16:	
  1103                           	line	18
  1104                           ;SW_TIMER.c: 15: }
  1105                           ;SW_TIMER.c: 18: }
  1106  00F3                     l14:	
  1107  00F3  0008               	return
  1108                           ; =============== function _init_SWTimer ends =
                                 ==============
  1109                           
  1110                           GLOBAL __end_of_init_SWTimer
  1111  00F4                     	__end_of_init_SWTimer:
  1112                           	FNSIZE	_init_SWTimer,2,0
  1113                           	signat	_init_SWTimer,88
  1114                           	global	_isr
  1115                           	global	??_isr
  1116                           	global	?_isr
  1117                           
  1118                           ; *************** function _isr ***************
  1119                           ; Defined at:
  1120                           ;		line 25 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PIC16F684_BCDTimer\Time
                                 rc.c"
  1121                           ; Parameters:
  1122                           ;		None
  1123                           ; Auto variables:
  1124                           ;		None
  1125                           ; Return value:
  1126                           ;		type: void 
  1127                           ;		size: 0
  1128                           ; Registers used:
  1129                           ;		wreg
  1130                           ; Tracked objects:
  1131                           ;		On entry : 100/0
  1132                           ;		On exit  : 0/0
  1133                           ;		Unchanged: 0/0
  1134                           ; Data sizes:
  1135                           ;		Autos:    0
  1136                           ;		Params:   0
  1137                           ;		Temp:     4
  1138                           ;		Total:    4
  1139                           ; This function calls:
  1140                           ;		Nothing
  1141                           ; This function is called by:
  1142                           ;		Interrupt level 1
  1143                           ; This function uses a non-reentrant model
  1144                           ; 
  1145                           	psect	intrtext,class=CODE,delta=2
  1146                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PIC16F684_BCDTimer\Timerc.c"
  1147                           	line	25
  1148                           ;Timerc.c: 23: static void interrupt isr(void)
  1149                           ;Timerc.c: 25: {
  1150                           	
  1151  013B                     _isr:	
  1152                           ; Regs used in _isr: [wreg]
  1153                           	psect	intentry,class=CODE,delta=2
  1154                           global interrupt_function
  1155  0004                     interrupt_function:
  1156                           	global saved_w
  1157  0000                     	saved_w	set	btemp+1
  1158  0004  00FF               	movwf	saved_w
  1159  0005  0803               	movf	status,w
  1160  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  1161  0007  00AA               	movwf	(??_isr+0)
  1162  0008  0804               	movf	fsr,w
  1163  0009  00AB               	movwf	(??_isr+1)
  1164  000A  080A               	movf	pclath,w
  1165  000B  00AC               	movwf	(??_isr+2)
  1166  000C  087E               	movf	btemp+0,w
  1167  000D  00AD               	movwf	(??_isr+3)
  1168  000E  293B               	ljmp	_isr
  1169                           	psect	intrtext
  1170                           	line	27
  1171                           ;Timerc.c: 27: if (TMR1IF)
  1172  013B  1C0C               	btfss	(96/8),(96)&7
  1173  013C  293E               	goto	i1u901
  1174  013D  293F               	goto	i1u900
  1175  013E                     i1u901:
  1176  013E  2945               	goto	i1l25
  1177  013F                     i1u900:
  1178                           	line	30
  1179                           ;Timerc.c: 29: {
  1180                           ;Timerc.c: 30: Ref1ms_counter++;
  1181                           	
  1182  013F  3001               	movlw	low(01h)
  1183  0140  07E1               	addwf	(97),f	;volatile
  1184  0141  1803               	skipnc
  1185  0142  0AE2               	incf	(97+1),f	;volatile
  1186  0143  3000               	movlw	high(01h)
  1187  0144  07E2               	addwf	(97+1),f	;volatile
  1188                           	line	31
  1189                           	
  1190  0145                     i1l25:	
  1191                           	line	32
  1192                           ;Timerc.c: 31: }
  1193                           ;Timerc.c: 32: TMR1H = 0xFC;
  1194  0145  30FC               	movlw	(0FCh)
  1195                           	
  1196  0146  008F               	movwf	(15)	;volatile
  1197                           	line	33
  1198                           ;Timerc.c: 33: TMR1L =0x17;
  1199  0147  3017               	movlw	(017h)
  1200                           	
  1201  0148  008E               	movwf	(14)	;volatile
  1202                           	line	34
  1203                           ;Timerc.c: 34: TMR1IF=0;
  1204  0149  100C               	bcf	(96/8),(96)&7
  1205                           	line	36
  1206                           ;Timerc.c: 36: }
  1207  014A                     i1l24:	
  1208  014A  082D               	movf	(??_isr+3),w
  1209  014B  00FE               	movwf	btemp+0
  1210  014C  082C               	movf	(??_isr+2),w
  1211  014D  008A               	movwf	pclath
  1212  014E  082B               	movf	(??_isr+1),w
  1213  014F  0084               	movwf	fsr
  1214  0150  082A               	movf	(??_isr+0),w
  1215  0151  0083               	movwf	status
  1216  0152  0EFF               	swapf	saved_w,f
  1217  0153  0E7F               	swapf	saved_w,w
  1218  0154  0009               	retfie
  1219                           ; =============== function _isr ends ==========
                                 =====
  1220                           
  1221                           GLOBAL __end_of_isr
  1222  0155                     	__end_of_isr:
  1223                           	FNSIZE	_isr,4,0
  1224                           	signat	_isr,88
  1225                           	FNCALL	_main,_init_DigIO
  1226                           	FNCALL	_main,_init_timer
  1227                           	FNCALL	_main,_init_SWTimer
  1228                           	FNCALL	_main,_Start_Timer
  1229                           	FNCALL	_main,_Set_Relay_off
  1230                           	FNCALL	_main,_Read_switch
  1231                           	FNCALL	_main,_GetTimer_State
  1232                           	FNCALL	_main,_Set_Relay_on
  1233                           	FNROOT	_main
  1234                           	FNCALL	intlevel1,_isr
  1235                           	global	intlevel1
  1236                           	FNROOT	intlevel1
  1237                           	psect	strings,class=CODE,delta=2,reloc=256
  1238                           	global	_TimerStart
  1239                           	psect	rbss_0,class=BANK0,space=1
  1240                           
  1241                           	DABS	1,104,8	;_TimerStart
  1242  0000                     	_TimerStart	set	0x68
  1243                           
  1244                           	global	_TimerTimeOutVal
  1245                           	psect	common,class=COMMON,space=1
  1246                           
  1247                           	DABS	1,112,8	;_TimerTimeOutVal
  1248  0000                     	_TimerTimeOutVal	set	0x70
  1249                           
  1250                           	global	_TimerState
  1251                           	psect	rbss_0
  1252                           
  1253                           	DABS	1,100,4	;_TimerState
  1254  0000                     	_TimerState	set	0x64
  1255                           
  1256                           	global	_Ref1ms_counter
  1257                           
  1258                           	DABS	1,97,2	;_Ref1ms_counter
  1259  0000                     	_Ref1ms_counter	set	0x61
  1260                           
  1261                           	global	_Elapsed_Hours
  1262                           
  1263                           	DABS	1,99,1	;_Elapsed_Hours
  1264  0000                     	_Elapsed_Hours	set	0x63
  1265                           
  1266                           	global	_Elapsed_Mins
  1267                           	psect	common
  1268                           
  1269                           	DABS	1,120,1	;_Elapsed_Mins
  1270  0000                     	_Elapsed_Mins	set	0x78
  1271                           
  1272                           	global	_Elapsed_Secs
  1273                           
  1274                           	DABS	1,124,1	;_Elapsed_Secs
  1275  0000                     	_Elapsed_Secs	set	0x7C
  1276                           
  1277                           	global	_Input_Time
  1278                           
  1279                           	DABS	1,125,1	;_Input_Time
  1280  0000                     	_Input_Time	set	0x7D
  1281                           
  1282                           	global	_Time_Hour
  1283                           
  1284                           	DABS	1,123,1	;_Time_Hour
  1285  0000                     	_Time_Hour	set	0x7B
  1286                           
  1287                           	global	_Time_Min
  1288                           
  1289                           	DABS	1,121,1	;_Time_Min
  1290  0000                     	_Time_Min	set	0x79
  1291                           
  1292                           	global	_Time_Sec
  1293                           
  1294                           	DABS	1,122,1	;_Time_Sec
  1295  0000                     	_Time_Sec	set	0x7A
  1296                           
  1297                           	global	_ADCON0
  1298                           	global	_ADCON0
  1299  0000                     	_ADCON0	set	0x1F
  1300                           
  1301                           	global	_ADCON1
  1302                           	global	_ADCON1
  1303  0000                     	_ADCON1	set	0x9F
  1304                           
  1305                           	global	_ADRESH
  1306                           	global	_ADRESH
  1307  0000                     	_ADRESH	set	0x1E
  1308                           
  1309                           	global	_ADRESL
  1310                           	global	_ADRESL
  1311  0000                     	_ADRESL	set	0x9E
  1312                           
  1313                           	global	_ANSEL
  1314  0000                     	_ANSEL	set	0x91
  1315                           
  1316                           	global	_CCP1CON
  1317                           	global	_CCP1CON
  1318  0000                     	_CCP1CON	set	0x15
  1319                           
  1320                           	global	_CCPR1H
  1321                           	global	_CCPR1H
  1322  0000                     	_CCPR1H	set	0x14
  1323                           
  1324                           	global	_CCPR1L
  1325                           	global	_CCPR1L
  1326  0000                     	_CCPR1L	set	0x13
  1327                           
  1328                           	global	_CMCON0
  1329  0000                     	_CMCON0	set	0x19
  1330                           
  1331                           	global	_CMCON1
  1332                           	global	_CMCON1
  1333  0000                     	_CMCON1	set	0x1A
  1334                           
  1335                           	global	_ECCPAS
  1336                           	global	_ECCPAS
  1337  0000                     	_ECCPAS	set	0x17
  1338                           
  1339                           	global	_EEADR
  1340                           	global	_EEADR
  1341  0000                     	_EEADR	set	0x9B
  1342                           
  1343                           	global	_EEADRL
  1344                           	global	_EEADRL
  1345  0000                     	_EEADRL	set	0x9B
  1346                           
  1347                           	global	_EECON1
  1348                           	global	_EECON1
  1349  0000                     	_EECON1	set	0x9C
  1350                           
  1351                           	global	_EECON2
  1352                           	global	_EECON2
  1353  0000                     	_EECON2	set	0x9D
  1354                           
  1355                           	global	_EEDAT
  1356                           	global	_EEDAT
  1357  0000                     	_EEDAT	set	0x9A
  1358                           
  1359                           	global	_EEDATA
  1360                           	global	_EEDATA
  1361  0000                     	_EEDATA	set	0x9A
  1362                           
  1363                           	global	_FSR
  1364                           	global	_FSR
  1365  0000                     	_FSR	set	0x4
  1366                           
  1367                           	global	_INDF
  1368                           	global	_INDF
  1369  0000                     	_INDF	set	0x0
  1370                           
  1371                           	global	_INTCON
  1372                           	global	_INTCON
  1373  0000                     	_INTCON	set	0xB
  1374                           
  1375                           	global	_IOCA
  1376                           	global	_IOCA
  1377  0000                     	_IOCA	set	0x96
  1378                           
  1379                           	global	_OPTION
  1380                           	global	_OPTION
  1381  0000                     	_OPTION	set	0x81
  1382                           
  1383                           	global	_OSCCON
  1384                           	global	_OSCCON
  1385  0000                     	_OSCCON	set	0x8F
  1386                           
  1387                           	global	_OSCTUNE
  1388                           	global	_OSCTUNE
  1389  0000                     	_OSCTUNE	set	0x90
  1390                           
  1391                           	global	_PCL
  1392                           	global	_PCL
  1393  0000                     	_PCL	set	0x2
  1394                           
  1395                           	global	_PCLATH
  1396                           	global	_PCLATH
  1397  0000                     	_PCLATH	set	0xA
  1398                           
  1399                           	global	_PCON
  1400                           	global	_PCON
  1401  0000                     	_PCON	set	0x8E
  1402                           
  1403                           	global	_PIE1
  1404                           	global	_PIE1
  1405  0000                     	_PIE1	set	0x8C
  1406                           
  1407                           	global	_PIR1
  1408                           	global	_PIR1
  1409  0000                     	_PIR1	set	0xC
  1410                           
  1411                           	global	_PORTA
  1412  0000                     	_PORTA	set	0x5
  1413                           
  1414                           	global	_PORTC
  1415  0000                     	_PORTC	set	0x7
  1416                           
  1417                           	global	_PR2
  1418                           	global	_PR2
  1419  0000                     	_PR2	set	0x92
  1420                           
  1421                           	global	_PWM1CON
  1422                           	global	_PWM1CON
  1423  0000                     	_PWM1CON	set	0x16
  1424                           
  1425                           	global	_STATUS
  1426                           	global	_STATUS
  1427  0000                     	_STATUS	set	0x3
  1428                           
  1429                           	global	_T1CON
  1430  0000                     	_T1CON	set	0x10
  1431                           
  1432                           	global	_T2CON
  1433                           	global	_T2CON
  1434  0000                     	_T2CON	set	0x12
  1435                           
  1436                           	global	_TMR0
  1437                           	global	_TMR0
  1438  0000                     	_TMR0	set	0x1
  1439                           
  1440                           	global	_TMR1H
  1441  0000                     	_TMR1H	set	0xF
  1442                           
  1443                           	global	_TMR1L
  1444  0000                     	_TMR1L	set	0xE
  1445                           
  1446                           	global	_TMR2
  1447                           	global	_TMR2
  1448  0000                     	_TMR2	set	0x11
  1449                           
  1450                           	global	_TRISA
  1451  0000                     	_TRISA	set	0x85
  1452                           
  1453                           	global	_TRISC
  1454  0000                     	_TRISC	set	0x87
  1455                           
  1456                           	global	_VRCON
  1457                           	global	_VRCON
  1458  0000                     	_VRCON	set	0x99
  1459                           
  1460                           	global	_WDTCON
  1461                           	global	_WDTCON
  1462  0000                     	_WDTCON	set	0x18
  1463                           
  1464                           	global	_WPUA
  1465                           	global	_WPUA
  1466  0000                     	_WPUA	set	0x95
  1467                           
  1468                           	global	_ADCS0
  1469                           	global	_ADCS0
  1470  0000                     	_ADCS0	set	0x4FC	;byte address: 0x9F
  1471                           
  1472                           	global	_ADCS1
  1473                           	global	_ADCS1
  1474  0000                     	_ADCS1	set	0x4FD	;byte address: 0x9F
  1475                           
  1476                           	global	_ADCS2
  1477                           	global	_ADCS2
  1478  0000                     	_ADCS2	set	0x4FE	;byte address: 0x9F
  1479                           
  1480                           	global	_ADFM
  1481                           	global	_ADFM
  1482  0000                     	_ADFM	set	0xFF	;byte address: 0x1F
  1483                           
  1484                           	global	_ADIE
  1485                           	global	_ADIE
  1486  0000                     	_ADIE	set	0x466	;byte address: 0x8C
  1487                           
  1488                           	global	_ADIF
  1489                           	global	_ADIF
  1490  0000                     	_ADIF	set	0x66	;byte address: 0xC
  1491                           
  1492                           	global	_ADON
  1493                           	global	_ADON
  1494  0000                     	_ADON	set	0xF8	;byte address: 0x1F
  1495                           
  1496                           	global	_ANS0
  1497                           	global	_ANS0
  1498  0000                     	_ANS0	set	0x488	;byte address: 0x91
  1499                           
  1500                           	global	_ANS1
  1501                           	global	_ANS1
  1502  0000                     	_ANS1	set	0x489	;byte address: 0x91
  1503                           
  1504                           	global	_ANS2
  1505                           	global	_ANS2
  1506  0000                     	_ANS2	set	0x48A	;byte address: 0x91
  1507                           
  1508                           	global	_ANS3
  1509                           	global	_ANS3
  1510  0000                     	_ANS3	set	0x48B	;byte address: 0x91
  1511                           
  1512                           	global	_ANS4
  1513                           	global	_ANS4
  1514  0000                     	_ANS4	set	0x48C	;byte address: 0x91
  1515                           
  1516                           	global	_ANS5
  1517                           	global	_ANS5
  1518  0000                     	_ANS5	set	0x48D	;byte address: 0x91
  1519                           
  1520                           	global	_ANS6
  1521                           	global	_ANS6
  1522  0000                     	_ANS6	set	0x48E	;byte address: 0x91
  1523                           
  1524                           	global	_ANS7
  1525                           	global	_ANS7
  1526  0000                     	_ANS7	set	0x48F	;byte address: 0x91
  1527                           
  1528                           	global	_BOD
  1529                           	global	_BOD
  1530  0000                     	_BOD	set	0x470	;byte address: 0x8E
  1531                           
  1532                           	global	_C1IE
  1533                           	global	_C1IE
  1534  0000                     	_C1IE	set	0x463	;byte address: 0x8C
  1535                           
  1536                           	global	_C1IF
  1537                           	global	_C1IF
  1538  0000                     	_C1IF	set	0x63	;byte address: 0xC
  1539                           
  1540                           	global	_C1INV
  1541                           	global	_C1INV
  1542  0000                     	_C1INV	set	0xCC	;byte address: 0x19
  1543                           
  1544                           	global	_C1OUT
  1545                           	global	_C1OUT
  1546  0000                     	_C1OUT	set	0xCE	;byte address: 0x19
  1547                           
  1548                           	global	_C2IE
  1549                           	global	_C2IE
  1550  0000                     	_C2IE	set	0x464	;byte address: 0x8C
  1551                           
  1552                           	global	_C2IF
  1553                           	global	_C2IF
  1554  0000                     	_C2IF	set	0x64	;byte address: 0xC
  1555                           
  1556                           	global	_C2INV
  1557                           	global	_C2INV
  1558  0000                     	_C2INV	set	0xCD	;byte address: 0x19
  1559                           
  1560                           	global	_C2OUT
  1561                           	global	_C2OUT
  1562  0000                     	_C2OUT	set	0xCF	;byte address: 0x19
  1563                           
  1564                           	global	_C2SYNC
  1565                           	global	_C2SYNC
  1566  0000                     	_C2SYNC	set	0xD0	;byte address: 0x1A
  1567                           
  1568                           	global	_CARRY
  1569                           	global	_CARRY
  1570  0000                     	_CARRY	set	0x18	;byte address: 0x3
  1571                           
  1572                           	global	_CCP1IE
  1573                           	global	_CCP1IE
  1574  0000                     	_CCP1IE	set	0x465	;byte address: 0x8C
  1575                           
  1576                           	global	_CCP1IF
  1577                           	global	_CCP1IF
  1578  0000                     	_CCP1IF	set	0x65	;byte address: 0xC
  1579                           
  1580                           	global	_CCP1M0
  1581                           	global	_CCP1M0
  1582  0000                     	_CCP1M0	set	0xA8	;byte address: 0x15
  1583                           
  1584                           	global	_CCP1M1
  1585                           	global	_CCP1M1
  1586  0000                     	_CCP1M1	set	0xA9	;byte address: 0x15
  1587                           
  1588                           	global	_CCP1M2
  1589                           	global	_CCP1M2
  1590  0000                     	_CCP1M2	set	0xAA	;byte address: 0x15
  1591                           
  1592                           	global	_CCP1M3
  1593                           	global	_CCP1M3
  1594  0000                     	_CCP1M3	set	0xAB	;byte address: 0x15
  1595                           
  1596                           	global	_CHS0
  1597                           	global	_CHS0
  1598  0000                     	_CHS0	set	0xFA	;byte address: 0x1F
  1599                           
  1600                           	global	_CHS1
  1601                           	global	_CHS1
  1602  0000                     	_CHS1	set	0xFB	;byte address: 0x1F
  1603                           
  1604                           	global	_CHS2
  1605                           	global	_CHS2
  1606  0000                     	_CHS2	set	0xFC	;byte address: 0x1F
  1607                           
  1608                           	global	_CIS
  1609                           	global	_CIS
  1610  0000                     	_CIS	set	0xCB	;byte address: 0x19
  1611                           
  1612                           	global	_CM0
  1613                           	global	_CM0
  1614  0000                     	_CM0	set	0xC8	;byte address: 0x19
  1615                           
  1616                           	global	_CM1
  1617                           	global	_CM1
  1618  0000                     	_CM1	set	0xC9	;byte address: 0x19
  1619                           
  1620                           	global	_CM2
  1621                           	global	_CM2
  1622  0000                     	_CM2	set	0xCA	;byte address: 0x19
  1623                           
  1624                           	global	_DC
  1625                           	global	_DC
  1626  0000                     	_DC	set	0x19	;byte address: 0x3
  1627                           
  1628                           	global	_DC1B0
  1629                           	global	_DC1B0
  1630  0000                     	_DC1B0	set	0xAC	;byte address: 0x15
  1631                           
  1632                           	global	_DC1B1
  1633                           	global	_DC1B1
  1634  0000                     	_DC1B1	set	0xAD	;byte address: 0x15
  1635                           
  1636                           	global	_ECCPAS0
  1637                           	global	_ECCPAS0
  1638  0000                     	_ECCPAS0	set	0xBC	;byte address: 0x17
  1639                           
  1640                           	global	_ECCPAS1
  1641                           	global	_ECCPAS1
  1642  0000                     	_ECCPAS1	set	0xBD	;byte address: 0x17
  1643                           
  1644                           	global	_ECCPAS2
  1645                           	global	_ECCPAS2
  1646  0000                     	_ECCPAS2	set	0xBE	;byte address: 0x17
  1647                           
  1648                           	global	_ECCPASE
  1649                           	global	_ECCPASE
  1650  0000                     	_ECCPASE	set	0xBF	;byte address: 0x17
  1651                           
  1652                           	global	_EEIE
  1653                           	global	_EEIE
  1654  0000                     	_EEIE	set	0x467	;byte address: 0x8C
  1655                           
  1656                           	global	_EEIF
  1657                           	global	_EEIF
  1658  0000                     	_EEIF	set	0x67	;byte address: 0xC
  1659                           
  1660                           	global	_GIE
  1661  0000                     	_GIE	set	0x5F	;byte address: 0xB
  1662                           
  1663                           	global	_GODONE
  1664                           	global	_GODONE
  1665  0000                     	_GODONE	set	0xF9	;byte address: 0x1F
  1666                           
  1667                           	global	_HTS
  1668                           	global	_HTS
  1669  0000                     	_HTS	set	0x47A	;byte address: 0x8F
  1670                           
  1671                           	global	_INTE
  1672                           	global	_INTE
  1673  0000                     	_INTE	set	0x5C	;byte address: 0xB
  1674                           
  1675                           	global	_INTEDG
  1676                           	global	_INTEDG
  1677  0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  1678                           
  1679                           	global	_INTF
  1680                           	global	_INTF
  1681  0000                     	_INTF	set	0x59	;byte address: 0xB
  1682                           
  1683                           	global	_IOCA0
  1684                           	global	_IOCA0
  1685  0000                     	_IOCA0	set	0x4B0	;byte address: 0x96
  1686                           
  1687                           	global	_IOCA1
  1688                           	global	_IOCA1
  1689  0000                     	_IOCA1	set	0x4B1	;byte address: 0x96
  1690                           
  1691                           	global	_IOCA2
  1692                           	global	_IOCA2
  1693  0000                     	_IOCA2	set	0x4B2	;byte address: 0x96
  1694                           
  1695                           	global	_IOCA3
  1696                           	global	_IOCA3
  1697  0000                     	_IOCA3	set	0x4B3	;byte address: 0x96
  1698                           
  1699                           	global	_IOCA4
  1700                           	global	_IOCA4
  1701  0000                     	_IOCA4	set	0x4B4	;byte address: 0x96
  1702                           
  1703                           	global	_IOCA5
  1704                           	global	_IOCA5
  1705  0000                     	_IOCA5	set	0x4B5	;byte address: 0x96
  1706                           
  1707                           	global	_IRCF0
  1708                           	global	_IRCF0
  1709  0000                     	_IRCF0	set	0x47C	;byte address: 0x8F
  1710                           
  1711                           	global	_IRCF1
  1712                           	global	_IRCF1
  1713  0000                     	_IRCF1	set	0x47D	;byte address: 0x8F
  1714                           
  1715                           	global	_IRCF2
  1716                           	global	_IRCF2
  1717  0000                     	_IRCF2	set	0x47E	;byte address: 0x8F
  1718                           
  1719                           	global	_IRP
  1720                           	global	_IRP
  1721  0000                     	_IRP	set	0x1F	;byte address: 0x3
  1722                           
  1723                           	global	_LTS
  1724                           	global	_LTS
  1725  0000                     	_LTS	set	0x479	;byte address: 0x8F
  1726                           
  1727                           	global	_OSFIE
  1728                           	global	_OSFIE
  1729  0000                     	_OSFIE	set	0x462	;byte address: 0x8C
  1730                           
  1731                           	global	_OSFIF
  1732                           	global	_OSFIF
  1733  0000                     	_OSFIF	set	0x62	;byte address: 0xC
  1734                           
  1735                           	global	_OSTS
  1736                           	global	_OSTS
  1737  0000                     	_OSTS	set	0x47B	;byte address: 0x8F
  1738                           
  1739                           	global	_P1M0
  1740                           	global	_P1M0
  1741  0000                     	_P1M0	set	0xAE	;byte address: 0x15
  1742                           
  1743                           	global	_P1M1
  1744                           	global	_P1M1
  1745  0000                     	_P1M1	set	0xAF	;byte address: 0x15
  1746                           
  1747                           	global	_PD
  1748                           	global	_PD
  1749  0000                     	_PD	set	0x1B	;byte address: 0x3
  1750                           
  1751                           	global	_PDC0
  1752                           	global	_PDC0
  1753  0000                     	_PDC0	set	0xB0	;byte address: 0x16
  1754                           
  1755                           	global	_PDC1
  1756                           	global	_PDC1
  1757  0000                     	_PDC1	set	0xB1	;byte address: 0x16
  1758                           
  1759                           	global	_PDC2
  1760                           	global	_PDC2
  1761  0000                     	_PDC2	set	0xB2	;byte address: 0x16
  1762                           
  1763                           	global	_PDC3
  1764                           	global	_PDC3
  1765  0000                     	_PDC3	set	0xB3	;byte address: 0x16
  1766                           
  1767                           	global	_PDC4
  1768                           	global	_PDC4
  1769  0000                     	_PDC4	set	0xB4	;byte address: 0x16
  1770                           
  1771                           	global	_PDC5
  1772                           	global	_PDC5
  1773  0000                     	_PDC5	set	0xB5	;byte address: 0x16
  1774                           
  1775                           	global	_PDC6
  1776                           	global	_PDC6
  1777  0000                     	_PDC6	set	0xB6	;byte address: 0x16
  1778                           
  1779                           	global	_PEIE
  1780  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  1781                           
  1782                           	global	_POR
  1783                           	global	_POR
  1784  0000                     	_POR	set	0x471	;byte address: 0x8E
  1785                           
  1786                           	global	_PRSEN
  1787                           	global	_PRSEN
  1788  0000                     	_PRSEN	set	0xB7	;byte address: 0x16
  1789                           
  1790                           	global	_PS0
  1791                           	global	_PS0
  1792  0000                     	_PS0	set	0x408	;byte address: 0x81
  1793                           
  1794                           	global	_PS1
  1795                           	global	_PS1
  1796  0000                     	_PS1	set	0x409	;byte address: 0x81
  1797                           
  1798                           	global	_PS2
  1799                           	global	_PS2
  1800  0000                     	_PS2	set	0x40A	;byte address: 0x81
  1801                           
  1802                           	global	_PSA
  1803                           	global	_PSA
  1804  0000                     	_PSA	set	0x40B	;byte address: 0x81
  1805                           
  1806                           	global	_PSSAC0
  1807                           	global	_PSSAC0
  1808  0000                     	_PSSAC0	set	0xBA	;byte address: 0x17
  1809                           
  1810                           	global	_PSSAC1
  1811                           	global	_PSSAC1
  1812  0000                     	_PSSAC1	set	0xBB	;byte address: 0x17
  1813                           
  1814                           	global	_PSSBD0
  1815                           	global	_PSSBD0
  1816  0000                     	_PSSBD0	set	0xB8	;byte address: 0x17
  1817                           
  1818                           	global	_PSSBD1
  1819                           	global	_PSSBD1
  1820  0000                     	_PSSBD1	set	0xB9	;byte address: 0x17
  1821                           
  1822                           	global	_RA0
  1823                           	global	_RA0
  1824  0000                     	_RA0	set	0x28	;byte address: 0x5
  1825                           
  1826                           	global	_RA1
  1827                           	global	_RA1
  1828  0000                     	_RA1	set	0x29	;byte address: 0x5
  1829                           
  1830                           	global	_RA2
  1831                           	global	_RA2
  1832  0000                     	_RA2	set	0x2A	;byte address: 0x5
  1833                           
  1834                           	global	_RA3
  1835                           	global	_RA3
  1836  0000                     	_RA3	set	0x2B	;byte address: 0x5
  1837                           
  1838                           	global	_RA4
  1839                           	global	_RA4
  1840  0000                     	_RA4	set	0x2C	;byte address: 0x5
  1841                           
  1842                           	global	_RA5
  1843                           	global	_RA5
  1844  0000                     	_RA5	set	0x2D	;byte address: 0x5
  1845                           
  1846                           	global	_RAIE
  1847                           	global	_RAIE
  1848  0000                     	_RAIE	set	0x5B	;byte address: 0xB
  1849                           
  1850                           	global	_RAIF
  1851                           	global	_RAIF
  1852  0000                     	_RAIF	set	0x58	;byte address: 0xB
  1853                           
  1854                           	global	_RAPU
  1855                           	global	_RAPU
  1856  0000                     	_RAPU	set	0x40F	;byte address: 0x81
  1857                           
  1858                           	global	_RC0
  1859                           	global	_RC0
  1860  0000                     	_RC0	set	0x38	;byte address: 0x7
  1861                           
  1862                           	global	_RC1
  1863                           	global	_RC1
  1864  0000                     	_RC1	set	0x39	;byte address: 0x7
  1865                           
  1866                           	global	_RC2
  1867                           	global	_RC2
  1868  0000                     	_RC2	set	0x3A	;byte address: 0x7
  1869                           
  1870                           	global	_RC3
  1871                           	global	_RC3
  1872  0000                     	_RC3	set	0x3B	;byte address: 0x7
  1873                           
  1874                           	global	_RC4
  1875                           	global	_RC4
  1876  0000                     	_RC4	set	0x3C	;byte address: 0x7
  1877                           
  1878                           	global	_RC5
  1879                           	global	_RC5
  1880  0000                     	_RC5	set	0x3D	;byte address: 0x7
  1881                           
  1882                           	global	_RD
  1883                           	global	_RD
  1884  0000                     	_RD	set	0x4E0	;byte address: 0x9C
  1885                           
  1886                           	global	_RP0
  1887                           	global	_RP0
  1888  0000                     	_RP0	set	0x1D	;byte address: 0x3
  1889                           
  1890                           	global	_RP1
  1891                           	global	_RP1
  1892  0000                     	_RP1	set	0x1E	;byte address: 0x3
  1893                           
  1894                           	global	_SBODEN
  1895                           	global	_SBODEN
  1896  0000                     	_SBODEN	set	0x474	;byte address: 0x8E
  1897                           
  1898                           	global	_SCS
  1899                           	global	_SCS
  1900  0000                     	_SCS	set	0x478	;byte address: 0x8F
  1901                           
  1902                           	global	_SWDTEN
  1903                           	global	_SWDTEN
  1904  0000                     	_SWDTEN	set	0xC0	;byte address: 0x18
  1905                           
  1906                           	global	_T0CS
  1907                           	global	_T0CS
  1908  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  1909                           
  1910                           	global	_T0IE
  1911                           	global	_T0IE
  1912  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  1913                           
  1914                           	global	_T0IF
  1915                           	global	_T0IF
  1916  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  1917                           
  1918                           	global	_T0SE
  1919                           	global	_T0SE
  1920  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  1921                           
  1922                           	global	_T1CKPS0
  1923                           	global	_T1CKPS0
  1924  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  1925                           
  1926                           	global	_T1CKPS1
  1927                           	global	_T1CKPS1
  1928  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  1929                           
  1930                           	global	_T1GE
  1931                           	global	_T1GE
  1932  0000                     	_T1GE	set	0x86	;byte address: 0x10
  1933                           
  1934                           	global	_T1GINV
  1935                           	global	_T1GINV
  1936  0000                     	_T1GINV	set	0x87	;byte address: 0x10
  1937                           
  1938                           	global	_T1GSS
  1939                           	global	_T1GSS
  1940  0000                     	_T1GSS	set	0xD1	;byte address: 0x1A
  1941                           
  1942                           	global	_T1OSCEN
  1943                           	global	_T1OSCEN
  1944  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  1945                           
  1946                           	global	_T1SYNC
  1947                           	global	_T1SYNC
  1948  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  1949                           
  1950                           	global	_T2CKPS0
  1951                           	global	_T2CKPS0
  1952  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  1953                           
  1954                           	global	_T2CKPS1
  1955                           	global	_T2CKPS1
  1956  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  1957                           
  1958                           	global	_TMR1CS
  1959                           	global	_TMR1CS
  1960  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  1961                           
  1962                           	global	_TMR1IE
  1963  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  1964                           
  1965                           	global	_TMR1IF
  1966  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  1967                           
  1968                           	global	_TMR1ON
  1969                           	global	_TMR1ON
  1970  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  1971                           
  1972                           	global	_TMR2IE
  1973                           	global	_TMR2IE
  1974  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  1975                           
  1976                           	global	_TMR2IF
  1977                           	global	_TMR2IF
  1978  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  1979                           
  1980                           	global	_TMR2ON
  1981                           	global	_TMR2ON
  1982  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  1983                           
  1984                           	global	_TO
  1985                           	global	_TO
  1986  0000                     	_TO	set	0x1C	;byte address: 0x3
  1987                           
  1988                           	global	_TOUTPS0
  1989                           	global	_TOUTPS0
  1990  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  1991                           
  1992                           	global	_TOUTPS1
  1993                           	global	_TOUTPS1
  1994  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  1995                           
  1996                           	global	_TOUTPS2
  1997                           	global	_TOUTPS2
  1998  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  1999                           
  2000                           	global	_TOUTPS3
  2001                           	global	_TOUTPS3
  2002  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  2003                           
  2004                           	global	_TRISA0
  2005                           	global	_TRISA0
  2006  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  2007                           
  2008                           	global	_TRISA1
  2009                           	global	_TRISA1
  2010  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  2011                           
  2012                           	global	_TRISA2
  2013                           	global	_TRISA2
  2014  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  2015                           
  2016                           	global	_TRISA3
  2017                           	global	_TRISA3
  2018  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  2019                           
  2020                           	global	_TRISA4
  2021                           	global	_TRISA4
  2022  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  2023                           
  2024                           	global	_TRISA5
  2025                           	global	_TRISA5
  2026  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  2027                           
  2028                           	global	_TRISC0
  2029                           	global	_TRISC0
  2030  0000                     	_TRISC0	set	0x438	;byte address: 0x87
  2031                           
  2032                           	global	_TRISC1
  2033                           	global	_TRISC1
  2034  0000                     	_TRISC1	set	0x439	;byte address: 0x87
  2035                           
  2036                           	global	_TRISC2
  2037                           	global	_TRISC2
  2038  0000                     	_TRISC2	set	0x43A	;byte address: 0x87
  2039                           
  2040                           	global	_TRISC3
  2041                           	global	_TRISC3
  2042  0000                     	_TRISC3	set	0x43B	;byte address: 0x87
  2043                           
  2044                           	global	_TRISC4
  2045                           	global	_TRISC4
  2046  0000                     	_TRISC4	set	0x43C	;byte address: 0x87
  2047                           
  2048                           	global	_TRISC5
  2049                           	global	_TRISC5
  2050  0000                     	_TRISC5	set	0x43D	;byte address: 0x87
  2051                           
  2052                           	global	_TUN0
  2053                           	global	_TUN0
  2054  0000                     	_TUN0	set	0x480	;byte address: 0x90
  2055                           
  2056                           	global	_TUN1
  2057                           	global	_TUN1
  2058  0000                     	_TUN1	set	0x481	;byte address: 0x90
  2059                           
  2060                           	global	_TUN2
  2061                           	global	_TUN2
  2062  0000                     	_TUN2	set	0x482	;byte address: 0x90
  2063                           
  2064                           	global	_TUN3
  2065                           	global	_TUN3
  2066  0000                     	_TUN3	set	0x483	;byte address: 0x90
  2067                           
  2068                           	global	_TUN4
  2069                           	global	_TUN4
  2070  0000                     	_TUN4	set	0x484	;byte address: 0x90
  2071                           
  2072                           	global	_ULPWUE
  2073                           	global	_ULPWUE
  2074  0000                     	_ULPWUE	set	0x475	;byte address: 0x8E
  2075                           
  2076                           	global	_VCFG
  2077                           	global	_VCFG
  2078  0000                     	_VCFG	set	0xFE	;byte address: 0x1F
  2079                           
  2080                           	global	_VR0
  2081                           	global	_VR0
  2082  0000                     	_VR0	set	0x4C8	;byte address: 0x99
  2083                           
  2084                           	global	_VR1
  2085                           	global	_VR1
  2086  0000                     	_VR1	set	0x4C9	;byte address: 0x99
  2087                           
  2088                           	global	_VR2
  2089                           	global	_VR2
  2090  0000                     	_VR2	set	0x4CA	;byte address: 0x99
  2091                           
  2092                           	global	_VR3
  2093                           	global	_VR3
  2094  0000                     	_VR3	set	0x4CB	;byte address: 0x99
  2095                           
  2096                           	global	_VREN
  2097                           	global	_VREN
  2098  0000                     	_VREN	set	0x4CF	;byte address: 0x99
  2099                           
  2100                           	global	_VRR
  2101                           	global	_VRR
  2102  0000                     	_VRR	set	0x4CD	;byte address: 0x99
  2103                           
  2104                           	global	_WDTPS0
  2105                           	global	_WDTPS0
  2106  0000                     	_WDTPS0	set	0xC1	;byte address: 0x18
  2107                           
  2108                           	global	_WDTPS1
  2109                           	global	_WDTPS1
  2110  0000                     	_WDTPS1	set	0xC2	;byte address: 0x18
  2111                           
  2112                           	global	_WDTPS2
  2113                           	global	_WDTPS2
  2114  0000                     	_WDTPS2	set	0xC3	;byte address: 0x18
  2115                           
  2116                           	global	_WDTPS3
  2117                           	global	_WDTPS3
  2118  0000                     	_WDTPS3	set	0xC4	;byte address: 0x18
  2119                           
  2120                           	global	_WPUA0
  2121                           	global	_WPUA0
  2122  0000                     	_WPUA0	set	0x4A8	;byte address: 0x95
  2123                           
  2124                           	global	_WPUA1
  2125                           	global	_WPUA1
  2126  0000                     	_WPUA1	set	0x4A9	;byte address: 0x95
  2127                           
  2128                           	global	_WPUA2
  2129                           	global	_WPUA2
  2130  0000                     	_WPUA2	set	0x4AA	;byte address: 0x95
  2131                           
  2132                           	global	_WPUA4
  2133                           	global	_WPUA4
  2134  0000                     	_WPUA4	set	0x4AC	;byte address: 0x95
  2135                           
  2136                           	global	_WPUA5
  2137                           	global	_WPUA5
  2138  0000                     	_WPUA5	set	0x4AD	;byte address: 0x95
  2139                           
  2140                           	global	_WR
  2141                           	global	_WR
  2142  0000                     	_WR	set	0x4E1	;byte address: 0x9C
  2143                           
  2144                           	global	_WREN
  2145                           	global	_WREN
  2146  0000                     	_WREN	set	0x4E2	;byte address: 0x9C
  2147                           
  2148                           	global	_WRERR
  2149                           	global	_WRERR
  2150  0000                     	_WRERR	set	0x4E3	;byte address: 0x9C
  2151                           
  2152                           	global	_ZERO
  2153                           	global	_ZERO
  2154  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  2155                           
  2156                           	PSECT	fnauto0,class=BANK0,space=1
  2157                           	FNCONF	fnauto0,??,?
  2158                           
  2159                           	DABS	1,126,2	;btemp
  2160                           	global	btemp
  2161  0000                     	btemp set 07Eh
  2162                           apbank macro
  2163                           	bcf	status,5
  2164                           	bcf	status,6
  2165  0020                     	endm


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Fri Jan 02 16:04:26 2015

              __Lrbss_0 0061                       l1 016C  
                     l2 011D                       l3 017F  
                     l4 017D                       l6 007E  
                     l7 002E                       l9 0076  
              _Time_Min 0079               __Lrdata_0 0000  
              _Time_Sec 007A               __Lramdata 0000  
                    l10 0076                      l11 0076  
                    l20 00BB                      l12 0076  
                    l21 00BB                      l13 007E  
                    l14 00F3                      _DC 0019  
                    l15 00CD                      l23 0177  
                    l16 00F3                      l18 013A  
                    l19 00C0                      _PD 001B  
                    _RD 04E0                      _TO 001C  
                    _WR 04E1               _Time_Hour 007B  
          ??_init_DigIO 0021                      fsr 0004  
                   _CM0 00C8                     _CM1 00C9  
                   _CM2 00CA                     _BOD 0470  
                   _CIS 00CB                     _GIE 005F  
                   _RA0 0028                     _RA1 0029  
                   _RA2 002A                     _RA3 002B  
                   _RC0 0038                     _RA4 002C  
                   _RC1 0039                     _RA5 002D  
                   _RC2 003A                     _RC3 003B  
                   _RC4 003C                     _RC5 003D  
                   _FSR 0004                     _PCL 0002  
                   _PS0 0408                     _PR2 0092  
                   _PS1 0409                     _RP0 001D  
                   _PS2 040A                     _IRP 001F  
                   _RP1 001E                     _HTS 047A  
                   _SCS 0478                     _PSA 040B  
                   _LTS 0479                     _VR0 04C8  
                   _VR1 04C9                     _VR2 04CA  
                   _VR3 04CB                     _POR 0471  
                   _VRR 04CD                     _isr 013B  
                   indf 0000            ??_init_timer 0021  
          _Set_Relay_on 017E              _TimerState 0064  
            _TimerStart 0068                    _C1IE 0463  
                  _C1IF 0063                    _C2IE 0464  
                  _C2IF 0064    __end_of_Set_Relay_on 0180  
                  _ADIE 0466                    _ADIF 0066  
                  _ADFM 00FF                    ?_isr 002A  
              __tempreg 0020                    _ADON 00F8  
                  _P1M0 00AE                    _CHS0 00FA  
                  _P1M1 00AF                    _CHS1 00FB  
                  _CHS2 00FC                    _EEIE 0467  
                  _EEIF 0067                    _ANS0 0488  
                  _ANS1 0489                    _ANS2 048A  
                  _ANS3 048B                    _ANS4 048C  
                  _ANS5 048D                    _ANS6 048E  
                  _ANS7 048F                    _T1GE 0086  
                  _T0IE 005D                    _T0IF 005A  
                  _T0CS 040D                    u1010 0035  
                  u1011 0034                    u1100 00F3  
                  u1020 004B                    u1101 00F2  
                  u1021 004A                    u1030 005E  
                  u1031 005D                    u1040 0071  
                  u1041 0070                    u1050 007D  
                  u1051 007C                    _PDC0 00B0  
                  u1070 008C                    _PDC1 00B1  
                  u1071 008B                    _PDC2 00B2  
                  u1080 00B4                    _PDC3 00B3  
                  u1081 00B3                    u1065 0109  
                  _PDC4 00B4                    _T0SE 040C  
                  _PDC5 00B5                    _IOCA 0096  
                  _PDC6 00B6                    u1085 00B0  
                  _INDF 0000                    _PIE1 008C  
                  _RAIE 005B                    _PEIE 005E  
                  _RAIF 0058                    _INTE 005C  
                  _INTF 0059                    i1l24 014A  
                  i1l25 0145                    _PCON 008E  
                  _PIR1 000C                    _RAPU 040F  
                  _VCFG 00FE                    _TMR0 0001  
                  _TMR2 0011               __databank 0000  
                  _OSTS 047B                    _TUN0 0480  
                  _TUN1 0481                    _TUN2 0482  
                  _TUN3 0483                    _TUN4 0484  
                  _VREN 04CF                    _ZERO 001A  
                  _WREN 04E2                    _WPUA 0095  
                  _main 001C           ??_Read_switch 0021  
                  btemp 007E                    start 000F  
        ??_init_SWTimer 0021          _Ref1ms_counter 0061  
         _Set_Relay_off 0178       interrupt_function 0004  
_GetTimer_State_TimerID 0021                   ??_isr 002A  
               _CCP1CON 0015                 _ECCPAS0 00BC  
               _ECCPAS1 00BD                 _ECCPAS2 00BE  
               _ECCPASE 00BF                   _C1INV 00CC  
                 _DC1B0 00AC                   _DC1B1 00AD  
                 _C2INV 00CD   __end_of_Set_Relay_off 017E  
                 _C1OUT 00CE                   _C2OUT 00CF  
                 _ADCS0 04FC                   _ADCS1 04FD  
                 _ADCS2 04FE                   ?_main 0020  
                 _EEADR 009B                   _EEDAT 009A  
                 _CARRY 0018                   _ANSEL 0091  
                 _T1CON 0010                   _IOCA0 04B0  
         _Elapsed_Hours 0063                   _IOCA1 04B1  
                 _IOCA2 04B2                   _T2CON 0012  
                 _IOCA3 04B3                   _IOCA4 04B4  
                 _IOCA5 04B5  _Start_Timer_TimeoutVal 0021  
                 _T1GSS 00D1                 _T1CKPS0 0084  
               _T1CKPS1 0085                   _IRCF0 047C  
                 _IRCF1 047D                   _IRCF2 047E  
               _T2CKPS0 0090                 _T2CKPS1 0091  
                 i1u900 013F                   i1u901 013E  
                 _OSFIE 0462                   _OSFIF 0062  
                 _TMR1H 000F                   _TMR1L 000E  
                 _PORTA 0005                 _T1OSCEN 0083  
                 _PORTC 0007                   _PRSEN 00B7  
                 _TRISA 0085                   _TRISC 0087  
                 _VRCON 0099                   _WPUA0 04A8  
                 _WPUA1 04A9                   _WPUA2 04AA  
                 _WPUA4 04AC                   _WPUA5 04AD  
                 _WRERR 04E3           ?_Set_Relay_on 0021  
               _OSCTUNE 0090                 _PWM1CON 0016  
               _TOUTPS0 0093                 _TOUTPS1 0094  
               _TOUTPS2 0095                 _TOUTPS3 0096  
                 pclath 000A        _Read_switch_temp 0021  
              intlevel1 0004          _GetTimer_State 0080  
                 status 0003         _TimerTimeOutVal 0070  
       ?_GetTimer_State 0021            _init_SWTimer 00C1  
           _Start_Timer 011E        ??_GetTimer_State 0021  
  __end_of_init_SWTimer 00F4     __end_of_Start_Timer 013B  
                ??_main 0020  __end_of_GetTimer_State 00C1  
          ?_Start_Timer 0021                  _C2SYNC 00D0  
                _ADCON0 001F                  _ADCON1 009F  
                _CCP1M0 00A8                  _CCP1M1 00A9  
                _CCP1M2 00AA                  _CCP1M3 00AB  
                _CCP1IE 0465                  _CCP1IF 0065  
                _ADRESH 001E                  _ADRESL 009E  
                _EEADRL 009B                  _EEDATA 009A  
                _ECCPAS 0017                  _CCPR1H 0014  
                _CCPR1L 0013                  _EECON1 009C  
                _EECON2 009D                  _CMCON0 0019  
                _CMCON1 001A            _Elapsed_Mins 0078  
          _Elapsed_Secs 007C            __end_of_main 0080  
                _T1GINV 0087                  _GODONE 00F9  
                _T1SYNC 0082                  _INTEDG 040E  
                _PCLATH 000A                  _INTCON 000B  
                _SBODEN 0474                  _OSCCON 008F  
                _TMR1IE 0460                  _TMR1IF 0060  
                _TMR1CS 0081                  _TMR2IE 0461  
                _TMR2IF 0061                  _PSSAC0 00BA  
                _PSSAC1 00BB                  _PSSBD0 00B8  
                _PSSBD1 00B9                  _TMR1ON 0080  
                _OPTION 0081                  _TMR2ON 0092  
                _WDTCON 0018                  _WDTPS0 00C1  
                _WDTPS1 00C2                  _WDTPS2 00C3  
                _WDTPS3 00C4                  _TRISA0 0428  
                _TRISA1 0429                  _TRISA2 042A  
                _TRISA3 042B                  _TRISC0 0438  
                _TRISA4 042C                  _TRISC1 0439  
                _TRISA5 042D                  _TRISC2 043A  
                _TRISC3 043B                  _TRISC4 043C  
                _TRISC5 043D                  _STATUS 0003  
                _SWDTEN 00C0                  _ULPWUE 0475  
         ?_init_SWTimer 0021          ?_Set_Relay_off 0021  
       ??_Set_Relay_off 0021      _Read_switch_retval 0022  
  _Start_Timer_Timer_ID 0023             _Read_switch 00F4  
           __end_of_isr 0155     __end_of_Read_switch 011E  
            _init_DigIO 0155      __end_of_init_DigIO 016D  
         ??_Start_Timer 0023                  saved_w 007F  
        ??_Set_Relay_on 0021              _init_timer 016D  
           ?_init_DigIO 0021      __end_of_init_timer 0178  
  _init_SWTimer_counter 0021            ?_Read_switch 0021  
            _Input_Time 007D             ?_init_timer 0021  
             __Hrdata_0 0001               __Hramdata 0001  
              __Hrbss_0 007E  
