

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Wed Nov 19 07:48:03 2014

HI-TECH Software Omniscient Code Generator build 3884
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code 
                                 Generator build 3884"
     2                           
     3                           	processor	16F628A
     4                           clrc	macro
     5                           	bcf	status,0
     6  0000                     	endm
     7                           clrz	macro
     8                           	bcf	status,2
     9  0000                     	endm
    10                           setc	macro
    11                           	bsf	status,0
    12  0000                     	endm
    13                           setz	macro
    14                           	bsf	status,2
    15  0000                     	endm
    16                           skipc	macro
    17                           	btfss	status,0
    18  0000                     	endm
    19                           skipz	macro
    20                           	btfss	status,2
    21  0000                     	endm
    22                           skipnc	macro
    23                           	btfsc	status,0
    24  0000                     	endm
    25                           skipnz	macro
    26                           	btfsc	status,2
    27  0000                     	endm
    28  0000                     indf	equ	0
    29  0000                     indf0	equ	0
    30  0000                     pc	equ	2
    31  0000                     pcl	equ	2
    32  0000                     status	equ	3
    33  0000                     fsr	equ	4
    34  0000                     fsr0	equ	4
    35  0000                     c	equ	1
    36  0000                     z	equ	0
    37  0000                     pclath	equ	10
    38                           # 9 "C:\Documents and Settings\Jayamma\My Docum
                                 ents\PIC\PICCC2500_11Nov2014\main.c"
    39                           	psect config,class=CONFIG,delta=2 ;#
    40                           # 9 "C:\Documents and Settings\Jayamma\My Docum
                                 ents\PIC\PICCC2500_11Nov2014\main.c"
    41  2007  3F90               	dw 0x3FFC & 0x3FFB & 0x3FF7 & 0x3FDF & 0x3FFF 
                                 & 0x3FFF & 0x3FBF ;#
    42                           global __tempreg
    43  0000                     __tempreg	set	83
    44                           global __Lrbss_0, __Hrbss_0
    45  0000                     __Lrbss_0 set 0x2F
    46  0000                     __Hrbss_0 set 0x53
    47                           global __Lcommon, __Hcommon
    48  0000                     __Lcommon set 0x75
    49  0000                     __Hcommon set 0x7E
    50                           global __Lrdata_1, __Hrdata_1
    51  0000                     __Lrdata_1	equ	0xC1
    52  0000                     __Hrdata_1	equ	0xF0
    53                           global __Lramdata, __Lrdata_1, __Hramdata, __Hr
                                 data_1
    54  0000                     __Lramdata	set	__Lrdata_1
    55  0000                     __Hramdata	set	__Hrdata_1
    56                           	GLOBAL	__databank
    57  0000                     __databank	EQU	1
    58  0000                     _Start_Timer_Timer_ID	equ	??_Start_Timer+0
    59                           	global	_Start_Timer_Timer_ID
    60  0000                     _Start_Timer_TimeoutVal	equ	?_Start_Timer+0
    61                           	global	_Start_Timer_TimeoutVal
    62  0000                     _CC2500_Init_i	equ	??_CC2500_Init+0
    63                           	global	_CC2500_Init_i
    64  0000                     _GetTimer_State_TimerID	equ	??_GetTimer_State+0
    65                           	global	_GetTimer_State_TimerID
    66  0000                     _RF_Module_Rxchar_rxbytes	equ	??_RF_Module_Rxch
                                 ar+0
    67                           	global	_RF_Module_Rxchar_rxbytes
    68  0000                     _RF_Module_Rxchar_status	equ	??_RF_Module_Rxcha
                                 r+1
    69                           	global	_RF_Module_Rxchar_status
    70  0000                     _RF_Module_Rxchar_ValidPacketReceived	equ	??_RF
                                 _Module_Rxchar+2
    71                           	global	_RF_Module_Rxchar_ValidPacketReceived
    72  0000                     _RF_Module_Rxchar_NewPacketReceived	equ	??_RF_M
                                 odule_Rxchar+3
    73                           	global	_RF_Module_Rxchar_NewPacketReceived
    74  0000                     _RF_Module_Rxchar_i	equ	??_RF_Module_Rxchar+4
    75                           	global	_RF_Module_Rxchar_i
    76  0000                     _init_SWTimer_counter	equ	??_init_SWTimer+0
    77                           	global	_init_SWTimer_counter
    78  0000                     _read_switchs_ret_val	equ	??_read_switchs+0
    79                           	global	_read_switchs_ret_val
    80  0000                     _RF_Module_init_ErrorCount	equ	??_RF_Module_ini
                                 t+0
    81                           	global	_RF_Module_init_ErrorCount
    82  0000                     _RF_Module_init_i	equ	??_RF_Module_init+1
    83                           	global	_RF_Module_init_i
    84  0000                     _RF_Module_Txchar_Txdata	equ	??_RF_Module_Txcha
                                 r+0
    85                           	global	_RF_Module_Txchar_Txdata
    86  0000                     _RF_Module_Txchar_status	equ	??_RF_Module_Txcha
                                 r+1
    87                           	global	_RF_Module_Txchar_status
    88  0000                     _RF_Module_Txchar_i	equ	??_RF_Module_Txchar+2
    89                           	global	_RF_Module_Txchar_i
    90  0000                     _RF_Module_Txchar_Len	equ	?_RF_Module_Txchar+0
    91                           	global	_RF_Module_Txchar_Len
    92  0000                     _CC2500_WriteReg_i	equ	??_CC2500_WriteReg+0
    93                           	global	_CC2500_WriteReg_i
    94  0000                     _CC2500_WriteReg_addr	equ	??_CC2500_WriteReg+1
    95                           	global	_CC2500_WriteReg_addr
    96  0000                     _CC2500_WriteReg_value	equ	?_CC2500_WriteReg+0
    97                           	global	_CC2500_WriteReg_value
    98  0000                     _command_a	equ	??_command+0
    99                           	global	_command_a
   100  0000                     _command_val	equ	??_command+1
   101                           	global	_command_val
   102  0000                     _CC2500_ReadReg_addr	equ	??_CC2500_ReadReg+0
   103                           	global	_CC2500_ReadReg_addr
   104  0000                     _CC2500_ReadReg_value	equ	??_CC2500_ReadReg+1
   105                           	global	_CC2500_ReadReg_value
   106  0000                     _spi_TxByte_txchar	equ	??_spi_TxByte+0
   107                           	global	_spi_TxByte_txchar
   108  0000                     _spi_TxByte_index	equ	??_spi_TxByte+1
   109                           	global	_spi_TxByte_index
   110  0000                     _spi_TxByte_received_ch	equ	??_spi_TxByte+2
   111                           	global	_spi_TxByte_received_ch
   112  0000                     _Delay_ms_x	equ	??_Delay_ms+0
   113                           	global	_Delay_ms_x
   114  0000                     _Delay_ms_y	equ	??_Delay_ms+2
   115                           	global	_Delay_ms_y
   116  0000                     _Delay_ms_delayms	equ	?_Delay_ms+0
   117                           	global	_Delay_ms_delayms
   118                           ;Data sizes: Strings 0, constant 8, data 47, bs
                                 s 0, persistent 0 stack 27
   119                           	global	_main
   120                           	global	??_main
   121                           	global	?_main
   122                           
   123                           ; *************** function _main **************
                                 *
   124                           ; Defined at:
   125                           ;		line 15 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\mai
                                 n.c"
   126                           ; Parameters:
   127                           ;		None
   128                           ; Auto variables:
   129                           ;		tempcounter 	       	type: unsigned char 
   130                           ; Return value:
   131                           ;		type: void 
   132                           ;		size: 0
   133                           ; Registers used:
   134                           ;		wreg, fsr, status,2, status,0, pclath, cstac
                                 k
   135                           ; Tracked objects:
   136                           ;		On entry : BFF/0
   137                           ;		On exit  : 0/0
   138                           ;		Unchanged: 0/0
   139                           ; Data sizes:
   140                           ;		Autos:    0
   141                           ;		Params:   0
   142                           ;		Temp:     0
   143                           ;		Total:    0
   144                           ; This function calls:
   145                           ;		_init_DigIO
   146                           ;		_init_timer
   147                           ;		_init_SWTimer
   148                           ;		_init_spi
   149                           ;		_CC2500_Init
   150                           ;		_Start_Timer
   151                           ;		_GetTimer_State
   152                           ;		_RF_Module_Rxchar
   153                           ;		_TX_LED_Toggle
   154                           ; This function is called by:
   155                           ;		Startup code after reset
   156                           ; This function uses a non-reentrant model
   157                           ; 
   158                           	psect	maintext,class=CODE,delta=2
   159                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\main.c"
   160                           	line	15
   161                           	psect	maintext
   162                           ;main.c: 9: asm("\tpsect config,class=CONFIG,de
                                 lta=2"); asm("\tdw ""0x3FFC & 0x3FFB & 0x3FF7 &
                                  0x3FDF & 0x3FFF & 0x3FFF & 0x3FBF");
   163                           ;main.c: 12: unsigned char temp;;
   164                           ;main.c: 14: void main(void)
   165                           ;main.c: 15: {
   166                           	
   167  0038                     _main:	
   168                           ; Regs used in _main: [wreg+fsr+status,2+status
                                 ,0+pclath+cstack]
   169                           	line	17
   170                           ;main.c: 17: init_DigIO();
   171  0038  246C               	fcall	_init_DigIO
   172                           	line	18
   173                           ;main.c: 18: init_timer();
   174  0039  245F               	fcall	_init_timer
   175                           	line	19
   176                           ;main.c: 19: init_SWTimer();
   177  003A  231D               	fcall	_init_SWTimer
   178                           	line	20
   179                           ;main.c: 20: init_spi();
   180  003B  2479               	fcall	_init_spi
   181                           	line	21
   182                           ;main.c: 21: CC2500_Init();
   183  003C  23DA               	fcall	_CC2500_Init
   184                           	line	23
   185                           ;main.c: 23: PEIE = 1;
   186  003D  1283               	bcf	status, 5	;RP0=0, select bank0
   187  003E  1303               	bcf	status, 6	;RP2=0, select bank0
   188  003F  170B               	bsf	(94/8),(94)&7
   189                           	line	24
   190                           ;main.c: 24: GIE = 1;
   191  0040  178B               	bsf	(95/8),(95)&7
   192                           	line	25
   193                           ;main.c: 25: Start_Timer(0,1000);
   194  0041  30E8               	movlw	low(03E8h)
   195                           	
   196  0042  00D3               	movwf	(?_Start_Timer)
   197  0043  3003               	movlw	high(03E8h)
   198  0044  00D4               	movwf	((?_Start_Timer))+1
   199  0045  3000               	movlw	(0)
   200  0046  2400               	fcall	_Start_Timer
   201                           	line	28
   202                           ;main.c: 26: unsigned char tempcounter;
   203                           ;main.c: 28: while (1)
   204                           	
   205  0047                     l163:	
   206                           	line	30
   207                           ;main.c: 29: {
   208                           ;main.c: 30: if(GetTimer_State(0) == 3)
   209  0047  3000               	movlw	(0)
   210  0048  229E               	fcall	_GetTimer_State
   211  0049  3A03               	xorlw	03h
   212  004A  1D03               	skipz
   213  004B  284D               	goto	u1811
   214  004C  284E               	goto	u1810
   215  004D                     u1811:
   216  004D  2858               	goto	l162
   217  004E                     u1810:
   218                           	line	32
   219                           ;main.c: 31: {
   220                           ;main.c: 32: Start_Timer(0,250);
   221  004E  30FA               	movlw	low(0FAh)
   222  004F  1283               	bcf	status, 5	;RP0=0, select bank0
   223  0050  1303               	bcf	status, 6	;RP2=0, select bank0
   224                           	
   225  0051  00D3               	movwf	(?_Start_Timer)
   226  0052  3000               	movlw	high(0FAh)
   227  0053  00D4               	movwf	((?_Start_Timer))+1
   228  0054  3000               	movlw	(0)
   229  0055  2400               	fcall	_Start_Timer
   230                           	line	33
   231                           ;main.c: 33: RF_Module_Rxchar();
   232  0056  2146               	fcall	_RF_Module_Rxchar
   233                           	line	34
   234                           ;main.c: 34: TX_LED_Toggle();
   235  0057  2482               	fcall	_TX_LED_Toggle
   236                           	line	35
   237                           	
   238  0058                     l165:	
   239                           	line	40
   240                           	
   241  0058                     l162:	
   242                           	line	28
   243  0058  2847               	goto	l163
   244                           	global	start
   245  0059  2810               	ljmp	start
   246                           ; =============== function _main ends =========
                                 ======
   247                           
   248                           GLOBAL __end_of_main
   249  005A                     	__end_of_main:
   250                           	FNSIZE	_main,0,0
   251                           	psect	maintext
   252                           	line	41
   253                           	signat	_main,88
   254                           	global	_Start_Timer
   255                           	global	??_Start_Timer
   256                           	global	?_Start_Timer
   257                           
   258                           ; *************** function _Start_Timer *******
                                 ********
   259                           ; Defined at:
   260                           ;		line 22 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\test\SW_TIMER.c"
   261                           ; Parameters:
   262                           ;		Timer_ID    	reg:   wr	type: unsigned char 
   263                           ;		TimeoutVal  	offs:   0	type: unsigned int 
   264                           ; Auto variables:
   265                           ;		Timer_ID    	       	type: unsigned char 
   266                           ; Return value:
   267                           ;		type: void 
   268                           ;		size: 0
   269                           ; Registers used:
   270                           ;		wreg, fsr, status,2, status,0
   271                           ; Tracked objects:
   272                           ;		On entry : 300/0
   273                           ;		On exit  : 0/0
   274                           ;		Unchanged: 0/0
   275                           ; Data sizes:
   276                           ;		Autos:    1
   277                           ;		Params:   2
   278                           ;		Temp:     1
   279                           ;		Total:    4
   280                           ; This function calls:
   281                           ;		Nothing
   282                           ; This function is called by:
   283                           ;		_main
   284                           ; This function uses a non-reentrant model
   285                           ; 
   286                           	psect	text218,local,class=CODE,delta=2
   287                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\test\SW_TIMER.c"
   288                           	line	22
   289                           ;SW_TIMER.c: 21: void Start_Timer(unsigned char
                                  Timer_ID , unsigned int TimeoutVal)
   290                           ;SW_TIMER.c: 22: {
   291                           	
   292  0400                     _Start_Timer:	
   293                           ; Regs used in _Start_Timer: [wreg+fsr+status,2
                                 +status,0]
   294                           ;_Start_Timer_Timer_ID stored from wreg
   295                           	
   296  0400  00D5               	movwf	(_Start_Timer_Timer_ID)
   297                           	line	23
   298                           ;SW_TIMER.c: 23: TimerStart[Timer_ID] = Ref1ms_
                                 counter;
   299                           	
   300                           	
   301  0401  0855               	movf	(_Start_Timer_Timer_ID),w
   302  0402  1383               	bcf	status, 7	;select IRP bank0
   303                           	
   304  0403  00D6               	movwf	(??_Start_Timer+1+0)
   305  0404  0756               	addwf	(??_Start_Timer+1+0),w
   306  0405  3E2F               	addlw	47&0ffh
   307  0406  0084               	movwf	fsr
   308  0407  087B               	movf	(123),w	;volatile
   309  0408  0080               	movwf	indf
   310  0409  0A84               	incf	fsr,f
   311  040A  087C               	movf	(123+1),w	;volatile
   312  040B  0080               	movwf	indf
   313                           	line	24
   314                           ;SW_TIMER.c: 24: TimerState[Timer_ID] =1;
   315                           	
   316  040C  0855               	movf	(_Start_Timer_Timer_ID),w
   317                           	
   318  040D  3E75               	addlw	117&0ffh
   319  040E  0084               	movwf	fsr
   320                           	
   321  040F  0180               	clrf	indf
   322  0410  1403               	bsf	status,0
   323  0411  0D80               	rlf	indf,f
   324                           	line	25
   325                           ;SW_TIMER.c: 25: TimerTimeOutVal[Timer_ID] =Tim
                                 eoutVal;
   326                           	
   327                           	
   328  0412  0855               	movf	(_Start_Timer_Timer_ID),w
   329                           	
   330  0413  00D6               	movwf	(??_Start_Timer+1+0)
   331  0414  0756               	addwf	(??_Start_Timer+1+0),w
   332  0415  3E37               	addlw	55&0ffh
   333  0416  0084               	movwf	fsr
   334  0417  0853               	movf	(_Start_Timer_TimeoutVal),w
   335  0418  0080               	movwf	indf
   336  0419  0A84               	incf	fsr,f
   337  041A  0854               	movf	(_Start_Timer_TimeoutVal+1),w
   338  041B  0080               	movwf	indf
   339                           	line	26
   340                           ;SW_TIMER.c: 26: }
   341  041C                     l5:	
   342  041C  0008               	return
   343                           ; =============== function _Start_Timer ends ==
                                 =============
   344                           
   345                           GLOBAL __end_of_Start_Timer
   346  041D                     	__end_of_Start_Timer:
   347                           	FNSIZE	_Start_Timer,2,2
   348                           	signat	_Start_Timer,8312
   349                           	global	_CC2500_Init
   350                           	global	??_CC2500_Init
   351                           	global	?_CC2500_Init
   352                           
   353                           ; *************** function _CC2500_Init *******
                                 ********
   354                           ; Defined at:
   355                           ;		line 479 in file "C:\Documents and Settings\
                                 Jayamma\My Documents\PIC\PICCC2500_11Nov2014\RF
                                 _Module.c"
   356                           ; Parameters:
   357                           ;		None
   358                           ; Auto variables:
   359                           ;		i           	       	type: unsigned char 
   360                           ; Return value:
   361                           ;		type: void 
   362                           ;		size: 0
   363                           ; Registers used:
   364                           ;		wreg, fsr, status,2, status,0, pclath, cstac
                                 k
   365                           ; Tracked objects:
   366                           ;		On entry : 0/0
   367                           ;		On exit  : 0/0
   368                           ;		Unchanged: 0/0
   369                           ; Data sizes:
   370                           ;		Autos:    1
   371                           ;		Params:   0
   372                           ;		Temp:     1
   373                           ;		Total:    2
   374                           ; This function calls:
   375                           ;		_RF_Module_init
   376                           ;		_SPI_SS_Enable
   377                           ;		_SPI_MISO_READ
   378                           ;		_spi_TxByte
   379                           ;		_SPI_SS_Disable
   380                           ; This function is called by:
   381                           ;		_main
   382                           ; This function uses a non-reentrant model
   383                           ; 
   384                           	psect	text219,local,class=CODE,delta=2
   385                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
   386                           	line	479
   387                           ;RF_Module.c: 478: void CC2500_Init(void)
   388                           ;RF_Module.c: 479: {
   389                           	
   390  03DA                     _CC2500_Init:	
   391                           ; Regs used in _CC2500_Init: [wreg+fsr+status,2
                                 +status,0+pclath+cstack]
   392                           	line	484
   393                           ;RF_Module.c: 480: unsigned char i;
   394                           ;RF_Module.c: 484: RF_Module_init();
   395  03DA  2383               	fcall	_RF_Module_init
   396                           	line	486
   397                           ;RF_Module.c: 486: SPI_SS_Enable();
   398  03DB  2490               	fcall	_SPI_SS_Enable
   399                           	line	487
   400                           ;RF_Module.c: 487: while(SPI_MISO_READ()== 1);
   401  03DC  2BDD               	goto	l150
   402                           	
   403  03DD                     l150:	
   404  03DD  2497               	fcall	_SPI_MISO_READ
   405  03DE  3A01               	xorlw	01h
   406  03DF  1903               	skipnz
   407  03E0  2BE2               	goto	u1891
   408  03E1  2BE3               	goto	u1890
   409  03E2                     u1891:
   410  03E2  2BDD               	goto	l150
   411  03E3                     u1890:
   412                           	
   413  03E3                     l152:	
   414                           	line	488
   415                           ;RF_Module.c: 488: spi_TxByte(0x3E|0x40);
   416  03E3  307E               	movlw	(07Eh)
   417  03E4  225A               	fcall	_spi_TxByte
   418                           	line	489
   419                           ;RF_Module.c: 489: for(i=0;i<8;i++)
   420  03E5  1003               	clrc
   421  03E6  1283               	bcf	status, 5	;RP0=0, select bank0
   422  03E7  1303               	bcf	status, 6	;RP2=0, select bank0
   423                           	
   424  03E8  3000               	movlw	0
   425  03E9  1803               	btfsc	status,0
   426  03EA  3001               	movlw	1
   427  03EB  00D3               	movwf	(_CC2500_Init_i)
   428  03EC  2BED               	goto	l153
   429                           	line	490
   430                           	
   431  03ED                     l153:	
   432                           	line	491
   433                           ;RF_Module.c: 490: {
   434                           ;RF_Module.c: 491: spi_TxByte(paTable_CC2500[i]
                                 );
   435                           	
   436  03ED  0853               	movf	(_CC2500_Init_i),w
   437  03EE  1383               	bcf	status, 7	;select IRP bank0
   438                           	
   439  03EF  3E01               	addlw	(_paTable_CC2500-__stringbase)
   440  03F0  2109               	fcall	stringdir
   441  03F1  225A               	fcall	_spi_TxByte
   442                           	line	489
   443  03F2  3001               	movlw	(01h)
   444  03F3  1283               	bcf	status, 5	;RP0=0, select bank0
   445  03F4  1303               	bcf	status, 6	;RP2=0, select bank0
   446  03F5  00D4               	movwf	(??_CC2500_Init+1+0)
   447                           	
   448  03F6  0854               	movf	(??_CC2500_Init+1+0),w
   449  03F7  07D3               	addwf	(_CC2500_Init_i),f
   450  03F8  3008               	movlw	(08h)
   451                           	
   452  03F9  0253               	subwf	(_CC2500_Init_i),w
   453  03FA  1C03               	skipc
   454  03FB  2BFD               	goto	u1911
   455  03FC  2BFE               	goto	u1910
   456  03FD                     u1911:
   457  03FD  2BED               	goto	l153
   458  03FE                     u1910:
   459                           	
   460  03FE                     l154:	
   461                           	line	493
   462                           ;RF_Module.c: 492: }
   463                           ;RF_Module.c: 493: SPI_SS_Disable();
   464  03FE  24A2               	fcall	_SPI_SS_Disable
   465                           	line	496
   466                           ;RF_Module.c: 496: }
   467  03FF                     l149:	
   468  03FF  0008               	return
   469                           ; =============== function _CC2500_Init ends ==
                                 =============
   470                           
   471                           GLOBAL __end_of_CC2500_Init
   472  0400                     	__end_of_CC2500_Init:
   473                           	FNSIZE	_CC2500_Init,2,0
   474                           	signat	_CC2500_Init,88
   475                           	global	_GetTimer_State
   476                           	global	??_GetTimer_State
   477                           	global	?_GetTimer_State
   478                           
   479                           ; *************** function _GetTimer_State ****
                                 ***********
   480                           ; Defined at:
   481                           ;		line 30 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\test\SW_TIMER.c"
   482                           ; Parameters:
   483                           ;		TimerID     	reg:   wr	type: unsigned char 
   484                           ; Auto variables:
   485                           ;		TimerID     	       	type: unsigned char 
   486                           ; Return value:
   487                           ;		type: unsigned char 
   488                           ;		size: 1
   489                           ; Registers used:
   490                           ;		wreg, fsr, status,2, status,0
   491                           ; Tracked objects:
   492                           ;		On entry : 0/0
   493                           ;		On exit  : 0/0
   494                           ;		Unchanged: 0/0
   495                           ; Data sizes:
   496                           ;		Autos:    1
   497                           ;		Params:   0
   498                           ;		Temp:     8
   499                           ;		Total:    9
   500                           ; This function calls:
   501                           ;		Nothing
   502                           ; This function is called by:
   503                           ;		_main
   504                           ; This function uses a non-reentrant model
   505                           ; 
   506                           	psect	text220,local,class=CODE,delta=2
   507                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\test\SW_TIMER.c"
   508                           	line	30
   509                           ;SW_TIMER.c: 29: unsigned char GetTimer_State(u
                                 nsigned char TimerID)
   510                           ;SW_TIMER.c: 30: {
   511                           	
   512  029E                     _GetTimer_State:	
   513                           ; Regs used in _GetTimer_State: [wreg+fsr+statu
                                 s,2+status,0]
   514                           ;_GetTimer_State_TimerID stored from wreg
   515  029E  1283               	bcf	status, 5	;RP0=0, select bank0
   516  029F  1303               	bcf	status, 6	;RP2=0, select bank0
   517                           	
   518  02A0  00D3               	movwf	(_GetTimer_State_TimerID)
   519                           	line	31
   520                           ;SW_TIMER.c: 31: if ( TimerState[TimerID] == 1 
                                 )
   521                           	
   522  02A1  0853               	movf	(_GetTimer_State_TimerID),w
   523  02A2  1383               	bcf	status, 7	;select IRP bank0
   524                           	
   525  02A3  3E75               	addlw	117&0ffh
   526  02A4  0084               	movwf	fsr
   527                           	
   528  02A5  0800               	movf	indf,w
   529                           	
   530  02A6  3A01               	xorlw	01h
   531  02A7  1D03               	skipz
   532  02A8  2AAA               	goto	u2031
   533  02A9  2AAB               	goto	u2030
   534  02AA                     u2031:
   535  02AA  2ADA               	goto	l7
   536  02AB                     u2030:
   537                           	line	33
   538                           ;SW_TIMER.c: 32: {
   539                           ;SW_TIMER.c: 33: if( (Ref1ms_counter -TimerStar
                                 t[TimerID]) > TimerTimeOutVal[TimerID] )
   540                           	
   541  02AB  0853               	movf	(_GetTimer_State_TimerID),w
   542                           	
   543  02AC  00D4               	movwf	(??_GetTimer_State+1+0)
   544  02AD  0754               	addwf	(??_GetTimer_State+1+0),w
   545  02AE  3E2F               	addlw	47&0ffh
   546  02AF  0084               	movwf	fsr
   547  02B0  0800               	movf	indf,w
   548  02B1  00D5               	movwf	(??_GetTimer_State+2+0)
   549  02B2  3001               	movlw	1
   550  02B3  0784               	addwf	fsr,f
   551  02B4  0800               	movf	indf,w
   552  02B5  00D6               	movwf	(??_GetTimer_State+2+0+1)
   553                           	
   554  02B6  0855               	movf	0+(??_GetTimer_State+2+0),w
   555  02B7  027B               	subwf	(123),w	;volatile
   556  02B8  00D7               	movwf	(??_GetTimer_State+4+0)
   557  02B9  0856               	movf	1+(??_GetTimer_State+2+0),w
   558  02BA  1C03               	skipc
   559  02BB  0A56               	incf	1+(??_GetTimer_State+2+0),w
   560  02BC  027C               	subwf	(123+1),w	;volatile
   561  02BD  00D8               	movwf	1+(??_GetTimer_State+4+0)
   562                           	
   563  02BE  0853               	movf	(_GetTimer_State_TimerID),w
   564                           	
   565  02BF  00D9               	movwf	(??_GetTimer_State+6+0)
   566  02C0  0759               	addwf	(??_GetTimer_State+6+0),w
   567  02C1  3E37               	addlw	55&0ffh
   568  02C2  0084               	movwf	fsr
   569  02C3  0800               	movf	indf,w
   570  02C4  00DA               	movwf	(??_GetTimer_State+7+0)
   571  02C5  3001               	movlw	1
   572  02C6  0784               	addwf	fsr,f
   573  02C7  0800               	movf	indf,w
   574  02C8  00DB               	movwf	(??_GetTimer_State+7+0+1)
   575  02C9  0858               	movf	1+(??_GetTimer_State+4+0),w
   576  02CA  025B               	subwf	1+(??_GetTimer_State+7+0),w
   577  02CB  1D03               	skipz
   578  02CC  2ACF               	goto	u2045
   579  02CD  0857               	movf	0+(??_GetTimer_State+4+0),w
   580  02CE  025A               	subwf	0+(??_GetTimer_State+7+0),w
   581  02CF                     u2045:
   582  02CF  1803               	skipnc
   583  02D0  2AD2               	goto	u2041
   584  02D1  2AD3               	goto	u2040
   585  02D2                     u2041:
   586  02D2  2ADA               	goto	l7
   587  02D3                     u2040:
   588                           	line	34
   589                           ;SW_TIMER.c: 34: TimerState[TimerID] =3;
   590  02D3  3003               	movlw	(03h)
   591  02D4  00D4               	movwf	(??_GetTimer_State+1+0)
   592                           	
   593  02D5  0853               	movf	(_GetTimer_State_TimerID),w
   594                           	
   595  02D6  3E75               	addlw	117&0ffh
   596  02D7  0084               	movwf	fsr
   597                           	
   598  02D8  0854               	movf	(??_GetTimer_State+1+0),w
   599  02D9  0080               	movwf	indf
   600                           	
   601  02DA                     l8:	
   602                           	line	35
   603                           	
   604  02DA                     l7:	
   605                           	line	36
   606                           ;SW_TIMER.c: 35: }
   607                           ;SW_TIMER.c: 36: return TimerState[TimerID];
   608                           	
   609  02DA  0853               	movf	(_GetTimer_State_TimerID),w
   610                           	
   611  02DB  3E75               	addlw	117&0ffh
   612  02DC  0084               	movwf	fsr
   613                           	
   614  02DD  0800               	movf	indf,w
   615                           	
   616  02DE  2ADF               	goto	l6
   617                           	line	37
   618                           ;SW_TIMER.c: 37: }
   619  02DF                     l6:	
   620  02DF  0008               	return
   621                           ; =============== function _GetTimer_State ends
                                  ===============
   622                           
   623                           GLOBAL __end_of_GetTimer_State
   624  02E0                     	__end_of_GetTimer_State:
   625                           	FNSIZE	_GetTimer_State,9,0
   626                           	signat	_GetTimer_State,4217
   627                           	global	_RF_Module_Rxchar
   628                           	global	??_RF_Module_Rxchar
   629                           	global	?_RF_Module_Rxchar
   630                           
   631                           ; *************** function _RF_Module_Rxchar **
                                 *************
   632                           ; Defined at:
   633                           ;		line 100 in file "C:\Documents and Settings\
                                 Jayamma\My Documents\PIC\PICCC2500_11Nov2014\RF
                                 _Module.c"
   634                           ; Parameters:
   635                           ;		None
   636                           ; Auto variables:
   637                           ;		status      	       	type: unsigned char 
   638                           ;		rxbytes     	       	type: unsigned char 
   639                           ;		NewPacketRec	       	type: unsigned char 
   640                           ;		ValidPacketR	       	type: unsigned char 
   641                           ;		i           	       	type: unsigned char 
   642                           ; Return value:
   643                           ;		type: unsigned char 
   644                           ;		size: 1
   645                           ; Registers used:
   646                           ;		wreg, fsr, status,2, status,0, pclath, cstac
                                 k
   647                           ; Tracked objects:
   648                           ;		On entry : 0/0
   649                           ;		On exit  : 0/0
   650                           ;		Unchanged: 0/0
   651                           ; Data sizes:
   652                           ;		Autos:    5
   653                           ;		Params:   0
   654                           ;		Temp:     1
   655                           ;		Total:    6
   656                           ; This function calls:
   657                           ;		_command
   658                           ;		_CC2500_ReadReg
   659                           ;		_SPI_SS_Enable
   660                           ;		_SPI_MISO_READ
   661                           ;		_spi_TxByte
   662                           ;		_SPI_SS_Disable
   663                           ;		_read_switchs
   664                           ;		_TX_LED_Toggle
   665                           ;		_RF_Module_Txchar
   666                           ; This function is called by:
   667                           ;		_main
   668                           ; This function uses a non-reentrant model
   669                           ; 
   670                           	psect	text221,local,class=CODE,delta=2
   671                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
   672                           	line	100
   673                           ;RF_Module.c: 99: unsigned char RF_Module_Rxcha
                                 r(void)
   674                           ;RF_Module.c: 100: {
   675                           	
   676  0146                     _RF_Module_Rxchar:	
   677                           ; Regs used in _RF_Module_Rxchar: [wreg+fsr+sta
                                 tus,2+status,0+pclath+cstack]
   678                           	line	102
   679                           ;RF_Module.c: 101: unsigned char i,rxbytes;
   680                           ;RF_Module.c: 102: unsigned char NewPacketRecei
                                 ved=0,ValidPacketReceived=0;
   681  0146  1003               	clrc
   682  0147  1283               	bcf	status, 5	;RP0=0, select bank0
   683  0148  1303               	bcf	status, 6	;RP2=0, select bank0
   684                           	
   685  0149  3000               	movlw	0
   686  014A  1803               	btfsc	status,0
   687  014B  3001               	movlw	1
   688  014C  00D6               	movwf	(_RF_Module_Rxchar_NewPacketReceived)
   689  014D  1003               	clrc
   690                           	
   691  014E  3000               	movlw	0
   692  014F  1803               	btfsc	status,0
   693  0150  3001               	movlw	1
   694  0151  00D5               	movwf	(_RF_Module_Rxchar_ValidPacketReceived)
   695                           	line	105
   696                           ;RF_Module.c: 103: static unsigned char OldPack
                                 etNum=0,Packetcounter=0;
   697                           ;RF_Module.c: 104: unsigned char status;
   698                           ;RF_Module.c: 105: status = command(0x3D);
   699  0152  303D               	movlw	(03Dh)
   700  0153  2437               	fcall	_command
   701  0154  1283               	bcf	status, 5	;RP0=0, select bank0
   702  0155  1303               	bcf	status, 6	;RP2=0, select bank0
   703                           	
   704  0156  00D4               	movwf	(_RF_Module_Rxchar_status)
   705                           	line	107
   706                           ;RF_Module.c: 107: if((status & 0x20) != 0x20)
   707                           	
   708  0157  1AD4               	btfsc	(_RF_Module_Rxchar_status),(5)&7
   709  0158  295A               	goto	u1731
   710  0159  295B               	goto	u1730
   711  015A                     u1731:
   712  015A  2A06               	goto	l51
   713  015B                     u1730:
   714                           	line	109
   715                           ;RF_Module.c: 108: {
   716                           ;RF_Module.c: 109: command(0x34);
   717  015B  3034               	movlw	(034h)
   718  015C  2437               	fcall	_command
   719                           	line	112
   720                           ;RF_Module.c: 112: rxbytes=CC2500_ReadReg(0xFB)
                                 ;
   721  015D  30FB               	movlw	(0FBh)
   722  015E  2351               	fcall	_CC2500_ReadReg
   723  015F  1283               	bcf	status, 5	;RP0=0, select bank0
   724  0160  1303               	bcf	status, 6	;RP2=0, select bank0
   725                           	
   726  0161  00D3               	movwf	(_RF_Module_Rxchar_rxbytes)
   727                           	line	113
   728                           ;RF_Module.c: 113: SPI_SS_Enable();
   729  0162  2490               	fcall	_SPI_SS_Enable
   730                           	line	114
   731                           ;RF_Module.c: 114: while(SPI_MISO_READ()== 1);
   732  0163  2964               	goto	l52
   733                           	
   734  0164                     l52:	
   735  0164  2497               	fcall	_SPI_MISO_READ
   736  0165  3A01               	xorlw	01h
   737  0166  1903               	skipnz
   738  0167  2969               	goto	u1741
   739  0168  296A               	goto	u1740
   740  0169                     u1741:
   741  0169  2964               	goto	l52
   742  016A                     u1740:
   743                           	
   744  016A                     l54:	
   745                           	line	115
   746                           ;RF_Module.c: 115: spi_TxByte(0xFF);
   747  016A  30FF               	movlw	(0FFh)
   748  016B  225A               	fcall	_spi_TxByte
   749                           	line	116
   750                           ;RF_Module.c: 116: for(i=0;i<rxbytes;i++)
   751  016C  1003               	clrc
   752  016D  1283               	bcf	status, 5	;RP0=0, select bank0
   753  016E  1303               	bcf	status, 6	;RP2=0, select bank0
   754                           	
   755  016F  3000               	movlw	0
   756  0170  1803               	btfsc	status,0
   757  0171  3001               	movlw	1
   758  0172  00D7               	movwf	(_RF_Module_Rxchar_i)
   759  0173  2983               	goto	l58
   760                           	line	117
   761                           	
   762  0174                     l55:	
   763                           	line	119
   764                           ;RF_Module.c: 117: {
   765                           ;RF_Module.c: 119: bTempRxBuf[i]=spi_TxByte(0x0
                                 0);
   766  0174  3000               	movlw	(0)
   767  0175  225A               	fcall	_spi_TxByte
   768  0176  1283               	bcf	status, 5	;RP0=0, select bank0
   769  0177  1303               	bcf	status, 6	;RP2=0, select bank0
   770  0178  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   771                           	
   772  0179  0857               	movf	(_RF_Module_Rxchar_i),w
   773  017A  1383               	bcf	status, 7	;select IRP bank0
   774                           	
   775  017B  3E3F               	addlw	63&0ffh
   776  017C  0084               	movwf	fsr
   777                           	
   778  017D  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   779  017E  0080               	movwf	indf
   780                           	line	116
   781  017F  3001               	movlw	(01h)
   782  0180  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   783                           	
   784  0181  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   785  0182  07D7               	addwf	(_RF_Module_Rxchar_i),f
   786                           	
   787  0183                     l58:	
   788                           	
   789  0183  0853               	movf	(_RF_Module_Rxchar_rxbytes),w
   790  0184  1383               	bcf	status, 7	;select IRP bank0
   791                           	
   792                           	
   793  0185  0257               	subwf	(_RF_Module_Rxchar_i),w
   794  0186  1C03               	skipc
   795  0187  2989               	goto	u1751
   796  0188  298A               	goto	u1750
   797  0189                     u1751:
   798  0189  2974               	goto	l55
   799  018A                     u1750:
   800                           	
   801  018A                     l56:	
   802                           	line	122
   803                           ;RF_Module.c: 121: }
   804                           ;RF_Module.c: 122: SPI_SS_Disable();
   805  018A  24A2               	fcall	_SPI_SS_Disable
   806                           	line	130
   807                           ;RF_Module.c: 130: if( (bTempRxBuf[1] != OldPac
                                 ketNum) && (bTempRxBuf[0] == 5))
   808  018B  1283               	bcf	status, 5	;RP0=0, select bank0
   809  018C  1303               	bcf	status, 6	;RP2=0, select bank0
   810                           	
   811                           	
   812  018D  0840               	movf	(0+63+01h)&07fh,w
   813                           	
   814  018E  067D               	xorwf	(125),w
   815  018F  1903               	skipnz
   816  0190  2992               	goto	u1761
   817  0191  2993               	goto	u1760
   818  0192                     u1761:
   819  0192  29A1               	goto	l59
   820  0193                     u1760:
   821                           	
   822  0193  083F               	movf	(63),w
   823  0194  1383               	bcf	status, 7	;select IRP bank0
   824                           	
   825  0195  3A05               	xorlw	05h
   826  0196  1D03               	skipz
   827  0197  2999               	goto	u1771
   828  0198  299A               	goto	u1770
   829  0199                     u1771:
   830  0199  29A1               	goto	l59
   831  019A                     u1770:
   832                           	line	132
   833                           ;RF_Module.c: 131: {
   834                           ;RF_Module.c: 132: NewPacketReceived = 1;
   835                           	
   836  019A  01D6               	clrf	(_RF_Module_Rxchar_NewPacketReceived)
   837  019B  1403               	bsf	status,0
   838  019C  0DD6               	rlf	(_RF_Module_Rxchar_NewPacketReceived),f
   839                           	line	133
   840                           ;RF_Module.c: 133: OldPacketNum =bTempRxBuf[1];
   841                           	
   842  019D  0840               	movf	(0+63+01h)&07fh,w
   843                           	
   844  019E  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   845                           	
   846  019F  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   847  01A0  00FD               	movwf	(125)
   848                           	line	134
   849                           	
   850  01A1                     l59:	
   851                           	line	137
   852                           ;RF_Module.c: 134: }
   853                           ;RF_Module.c: 137: if(NewPacketReceived == 1)
   854                           	
   855  01A1  0856               	movf	(_RF_Module_Rxchar_NewPacketReceived),w
   856  01A2  1383               	bcf	status, 7	;select IRP bank0
   857                           	
   858  01A3  3A01               	xorlw	01h
   859  01A4  1D03               	skipz
   860  01A5  29A7               	goto	u1781
   861  01A6  29A8               	goto	u1780
   862  01A7                     u1781:
   863  01A7  29B6               	goto	l60
   864  01A8                     u1780:
   865                           	line	140
   866                           ;RF_Module.c: 138: {
   867                           ;RF_Module.c: 140: NewPacketReceived= 0;
   868  01A8  1003               	clrc
   869                           	
   870  01A9  3000               	movlw	0
   871  01AA  1803               	btfsc	status,0
   872  01AB  3001               	movlw	1
   873  01AC  00D6               	movwf	(_RF_Module_Rxchar_NewPacketReceived)
   874                           	line	142
   875                           ;RF_Module.c: 142: if(bTempRxBuf[2] == 2)
   876                           	
   877  01AD  0841               	movf	(0+63+02h)&07fh,w
   878                           	
   879  01AE  3A02               	xorlw	02h
   880  01AF  1D03               	skipz
   881  01B0  29B2               	goto	u1791
   882  01B1  29B3               	goto	u1790
   883  01B2                     u1791:
   884  01B2  29B6               	goto	l60
   885  01B3                     u1790:
   886                           	line	144
   887                           ;RF_Module.c: 143: {
   888                           ;RF_Module.c: 144: ValidPacketReceived = 1;
   889                           	
   890  01B3  01D5               	clrf	(_RF_Module_Rxchar_ValidPacketReceived)
   891  01B4  1403               	bsf	status,0
   892  01B5  0DD5               	rlf	(_RF_Module_Rxchar_ValidPacketReceived),f
   893                           	line	146
   894                           	
   895  01B6                     l61:	
   896                           	line	148
   897                           	
   898  01B6                     l60:	
   899                           	line	150
   900                           ;RF_Module.c: 146: }
   901                           ;RF_Module.c: 148: }
   902                           ;RF_Module.c: 150: if(ValidPacketReceived == 1)
   903                           	
   904  01B6  0855               	movf	(_RF_Module_Rxchar_ValidPacketReceived),w
   905                           	
   906  01B7  3A01               	xorlw	01h
   907  01B8  1D03               	skipz
   908  01B9  29BB               	goto	u1801
   909  01BA  29BC               	goto	u1800
   910  01BB                     u1801:
   911  01BB  2A06               	goto	l51
   912  01BC                     u1800:
   913                           	line	152
   914                           ;RF_Module.c: 151: {
   915                           ;RF_Module.c: 152: ValidPacketReceived = 0;
   916  01BC  1003               	clrc
   917                           	
   918  01BD  3000               	movlw	0
   919  01BE  1803               	btfsc	status,0
   920  01BF  3001               	movlw	1
   921  01C0  00D5               	movwf	(_RF_Module_Rxchar_ValidPacketReceived)
   922                           	line	153
   923                           ;RF_Module.c: 153: bTxBuf[0] =5;
   924  01C1  3005               	movlw	(05h)
   925  01C2  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   926                           	
   927  01C3  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   928  01C4  00C9               	movwf	(73)
   929                           	line	154
   930                           ;RF_Module.c: 154: bTxBuf[1] = bTempRxBuf[1];
   931                           	
   932  01C5  0840               	movf	(0+63+01h)&07fh,w
   933                           	
   934  01C6  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   935                           	
   936  01C7  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   937  01C8  00CA               	movwf	(0+73+01h)&07fh
   938                           	line	155
   939                           ;RF_Module.c: 155: bTxBuf[2] = 2;
   940  01C9  3002               	movlw	(02h)
   941  01CA  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   942                           	
   943  01CB  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   944  01CC  00CB               	movwf	(0+73+02h)&07fh
   945                           	line	156
   946                           ;RF_Module.c: 156: bTxBuf[3] =bTempRxBuf[3];
   947                           	
   948  01CD  0842               	movf	(0+63+03h)&07fh,w
   949                           	
   950  01CE  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   951                           	
   952  01CF  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   953  01D0  00CC               	movwf	(0+73+03h)&07fh
   954                           	line	158
   955                           ;RF_Module.c: 158: switch(bTempRxBuf[3])
   956  01D1  29F1               	goto	l64
   957                           	line	160
   958                           ;RF_Module.c: 159: {
   959                           ;RF_Module.c: 160: case 0x01 : bTxBuf[4] =read_
                                 switchs(); break;
   960                           	
   961  01D2                     l65:	
   962  01D2  2451               	fcall	_read_switchs
   963  01D3  1283               	bcf	status, 5	;RP0=0, select bank0
   964  01D4  1303               	bcf	status, 6	;RP2=0, select bank0
   965  01D5  00D8               	movwf	(??_RF_Module_Rxchar+5+0)
   966                           	
   967  01D6  0858               	movf	(??_RF_Module_Rxchar+5+0),w
   968  01D7  00CD               	movwf	(0+73+04h)&07fh
   969  01D8  29FF               	goto	l63
   970                           	line	162
   971                           ;RF_Module.c: 162: case 0x02 : bTxBuf[4] =0; br
                                 eak;
   972                           	
   973  01D9                     l66:	
   974  01D9  1003               	clrc
   975                           	
   976  01DA  3000               	movlw	0
   977  01DB  1803               	btfsc	status,0
   978  01DC  3001               	movlw	1
   979  01DD  00CD               	movwf	(0+73+04h)&07fh
   980  01DE  29FF               	goto	l63
   981                           	line	164
   982                           ;RF_Module.c: 164: case 0x03 : bTxBuf[4] =0; br
                                 eak;
   983                           	
   984  01DF                     l67:	
   985  01DF  1003               	clrc
   986                           	
   987  01E0  3000               	movlw	0
   988  01E1  1803               	btfsc	status,0
   989  01E2  3001               	movlw	1
   990  01E3  00CD               	movwf	(0+73+04h)&07fh
   991  01E4  29FF               	goto	l63
   992                           	line	166
   993                           ;RF_Module.c: 166: case 0x04 : bTxBuf[4] =0; br
                                 eak;
   994                           	
   995  01E5                     l68:	
   996  01E5  1003               	clrc
   997                           	
   998  01E6  3000               	movlw	0
   999  01E7  1803               	btfsc	status,0
  1000  01E8  3001               	movlw	1
  1001  01E9  00CD               	movwf	(0+73+04h)&07fh
  1002  01EA  29FF               	goto	l63
  1003                           	line	168
  1004                           ;RF_Module.c: 168: default: bTxBuf[4] =0; break
                                 ;
  1005                           	
  1006  01EB                     l69:	
  1007  01EB  1003               	clrc
  1008                           	
  1009  01EC  3000               	movlw	0
  1010  01ED  1803               	btfsc	status,0
  1011  01EE  3001               	movlw	1
  1012  01EF  00CD               	movwf	(0+73+04h)&07fh
  1013  01F0  29FF               	goto	l63
  1014                           	line	158
  1015                           	
  1016  01F1                     l64:	
  1017                           	
  1018  01F1  0842               	movf	(0+63+03h)&07fh,w
  1019                           	
  1020  01F2  3A01               		xorlw	1^0
  1021  01F3  1903               	skipnz
  1022  01F4  29D2               	goto	l65
  1023  01F5  3A03               	xorlw	2^1
  1024  01F6  1903               	skipnz
  1025  01F7  29D9               	goto	l66
  1026  01F8  3A01               	xorlw	3^2
  1027  01F9  1903               	skipnz
  1028  01FA  29DF               	goto	l67
  1029  01FB  3A07               	xorlw	4^3
  1030  01FC  1903               	skipnz
  1031  01FD  29E5               	goto	l68
  1032  01FE  29EB               	goto	l69
  1033                           
  1034                           	line	170
  1035                           	
  1036  01FF                     l63:	
  1037                           	line	173
  1038                           ;RF_Module.c: 173: TX_LED_Toggle();
  1039  01FF  2482               	fcall	_TX_LED_Toggle
  1040                           	line	174
  1041                           ;RF_Module.c: 174: RF_Module_Txchar(bTxBuf+1,5)
                                 ;
  1042  0200  3005               	movlw	(05h)
  1043  0201  1283               	bcf	status, 5	;RP0=0, select bank0
  1044  0202  1303               	bcf	status, 6	;RP2=0, select bank0
  1045                           	
  1046  0203  00D9               	movwf	(?_RF_Module_Txchar)
  1047                           	
  1048  0204  304A               	movlw	(73+01h)&0ffh
  1049  0205  22E0               	fcall	_RF_Module_Txchar
  1050                           	line	180
  1051                           	
  1052  0206                     l62:	
  1053                           	line	187
  1054                           	
  1055  0206                     l51:	
  1056                           	line	190
  1057                           ;RF_Module.c: 180: }
  1058                           ;RF_Module.c: 187: }
  1059                           ;RF_Module.c: 190: }
  1060  0206                     l50:	
  1061  0206  0008               	return
  1062                           ; =============== function _RF_Module_Rxchar en
                                 ds ===============
  1063                           
  1064                           GLOBAL __end_of_RF_Module_Rxchar
  1065  0207                     	__end_of_RF_Module_Rxchar:
  1066                           	FNSIZE	_RF_Module_Rxchar,6,0
  1067                           	signat	_RF_Module_Rxchar,89
  1068                           	global	_init_timer
  1069                           	global	??_init_timer
  1070                           	global	?_init_timer
  1071                           
  1072                           ; *************** function _init_timer ********
                                 *******
  1073                           ; Defined at:
  1074                           ;		line 8 in file "C:\Documents and Settings\Ja
                                 yamma\My Documents\PIC\test\Timerc.c"
  1075                           ; Parameters:
  1076                           ;		None
  1077                           ; Auto variables:
  1078                           ;		None
  1079                           ; Return value:
  1080                           ;		type: void 
  1081                           ;		size: 0
  1082                           ; Registers used:
  1083                           ;		wreg
  1084                           ; Tracked objects:
  1085                           ;		On entry : 0/0
  1086                           ;		On exit  : 0/0
  1087                           ;		Unchanged: 0/0
  1088                           ; Data sizes:
  1089                           ;		Autos:    0
  1090                           ;		Params:   0
  1091                           ;		Temp:     0
  1092                           ;		Total:    0
  1093                           ; This function calls:
  1094                           ;		Nothing
  1095                           ; This function is called by:
  1096                           ;		_main
  1097                           ; This function uses a non-reentrant model
  1098                           ; 
  1099                           	psect	text222,local,class=CODE,delta=2
  1100                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\test\Timerc.c"
  1101                           	line	8
  1102                           ;Timerc.c: 6: void init_timer(void)
  1103                           ;Timerc.c: 8: {
  1104                           	
  1105  045F                     _init_timer:	
  1106                           ; Regs used in _init_timer: [wreg]
  1107                           	line	10
  1108                           ;Timerc.c: 10: TMR1H = 0xFC;
  1109  045F  30FC               	movlw	(0FCh)
  1110  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  1111  0461  1303               	bcf	status, 6	;RP2=0, select bank0
  1112                           	
  1113  0462  008F               	movwf	(15)	;volatile
  1114                           	line	11
  1115                           ;Timerc.c: 11: TMR1L =0x17;
  1116  0463  3017               	movlw	(017h)
  1117                           	
  1118  0464  008E               	movwf	(14)	;volatile
  1119                           	line	12
  1120                           ;Timerc.c: 12: T1CON = 0x01;
  1121  0465  3001               	movlw	(01h)
  1122                           	
  1123  0466  0090               	movwf	(16)	;volatile
  1124                           	line	14
  1125                           ;Timerc.c: 14: TMR1IF=0;
  1126  0467  100C               	bcf	(96/8),(96)&7
  1127                           	line	15
  1128                           ;Timerc.c: 15: TMR1IE =1;
  1129  0468  1683               	bsf	status, 5	;RP0=1, select bank1
  1130  0469  1303               	bcf	status, 6	;RP2=0, select bank1
  1131  046A  140C               	bsf	(1120/8)^080h,(1120)&7
  1132                           	line	18
  1133                           ;Timerc.c: 18: }
  1134  046B                     l10:	
  1135  046B  0008               	return
  1136                           ; =============== function _init_timer ends ===
                                 ============
  1137                           
  1138                           GLOBAL __end_of_init_timer
  1139  046C                     	__end_of_init_timer:
  1140                           	FNSIZE	_init_timer,0,0
  1141                           	signat	_init_timer,88
  1142                           	global	_init_DigIO
  1143                           	global	??_init_DigIO
  1144                           	global	?_init_DigIO
  1145                           
  1146                           ; *************** function _init_DigIO ********
                                 *******
  1147                           ; Defined at:
  1148                           ;		line 5 in file "C:\Documents and Settings\Ja
                                 yamma\My Documents\PIC\PICCC2500_11Nov2014\DigI
                                 O.c"
  1149                           ; Parameters:
  1150                           ;		None
  1151                           ; Auto variables:
  1152                           ;		None
  1153                           ; Return value:
  1154                           ;		type: void 
  1155                           ;		size: 0
  1156                           ; Registers used:
  1157                           ;		wreg, status,2, status,0
  1158                           ; Tracked objects:
  1159                           ;		On entry : BFF/0
  1160                           ;		On exit  : 0/0
  1161                           ;		Unchanged: 0/0
  1162                           ; Data sizes:
  1163                           ;		Autos:    0
  1164                           ;		Params:   0
  1165                           ;		Temp:     1
  1166                           ;		Total:    1
  1167                           ; This function calls:
  1168                           ;		Nothing
  1169                           ; This function is called by:
  1170                           ;		_main
  1171                           ; This function uses a non-reentrant model
  1172                           ; 
  1173                           	psect	text223,local,class=CODE,delta=2
  1174                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\DigIO.c"
  1175                           	line	5
  1176                           ;DigIO.c: 4: void init_DigIO(void)
  1177                           ;DigIO.c: 5: {
  1178                           	
  1179  046C                     _init_DigIO:	
  1180                           ; Regs used in _init_DigIO: [wreg+status,2+stat
                                 us,0]
  1181                           	line	6
  1182                           ;DigIO.c: 6: OPTION &=0x7F;
  1183  046C  307F               	movlw	(07Fh)
  1184  046D  00D3               	movwf	(??_init_DigIO+0+0)
  1185  046E  1683               	bsf	status, 5	;RP0=1, select bank1
  1186  046F  1303               	bcf	status, 6	;RP2=0, select bank1
  1187                           	
  1188  0470  1283               	bcf	status, 5	;RP0=0, select bank0
  1189  0471  1303               	bcf	status, 6	;RP2=0, select bank0
  1190  0472  0853               	movf	(??_init_DigIO+0+0),w
  1191  0473  1683               	bsf	status, 5	;RP0=1, select bank1
  1192  0474  1303               	bcf	status, 6	;RP2=0, select bank1
  1193  0475  0581               	andwf	(129)^080h,f
  1194                           	line	7
  1195                           ;DigIO.c: 7: TRISB =0xF0;
  1196  0476  30F0               	movlw	(0F0h)
  1197                           	
  1198  0477  0086               	movwf	(134)^080h	;volatile
  1199                           	line	9
  1200                           ;DigIO.c: 9: }
  1201  0478                     l13:	
  1202  0478  0008               	return
  1203                           ; =============== function _init_DigIO ends ===
                                 ============
  1204                           
  1205                           GLOBAL __end_of_init_DigIO
  1206  0479                     	__end_of_init_DigIO:
  1207                           	FNSIZE	_init_DigIO,1,0
  1208                           	signat	_init_DigIO,88
  1209                           	global	_init_SWTimer
  1210                           	global	??_init_SWTimer
  1211                           	global	?_init_SWTimer
  1212                           
  1213                           ; *************** function _init_SWTimer ******
                                 *********
  1214                           ; Defined at:
  1215                           ;		line 6 in file "C:\Documents and Settings\Ja
                                 yamma\My Documents\PIC\test\SW_TIMER.c"
  1216                           ; Parameters:
  1217                           ;		None
  1218                           ; Auto variables:
  1219                           ;		counter     	       	type: unsigned char 
  1220                           ; Return value:
  1221                           ;		type: void 
  1222                           ;		size: 0
  1223                           ; Registers used:
  1224                           ;		wreg, fsr, status,2, status,0
  1225                           ; Tracked objects:
  1226                           ;		On entry : 0/0
  1227                           ;		On exit  : 0/0
  1228                           ;		Unchanged: 0/0
  1229                           ; Data sizes:
  1230                           ;		Autos:    1
  1231                           ;		Params:   0
  1232                           ;		Temp:     1
  1233                           ;		Total:    2
  1234                           ; This function calls:
  1235                           ;		Nothing
  1236                           ; This function is called by:
  1237                           ;		_main
  1238                           ; This function uses a non-reentrant model
  1239                           ; 
  1240                           	psect	text224,local,class=CODE,delta=2
  1241                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\test\SW_TIMER.c"
  1242                           	line	6
  1243                           ;SW_TIMER.c: 5: void init_SWTimer(void)
  1244                           ;SW_TIMER.c: 6: {
  1245                           	
  1246  031D                     _init_SWTimer:	
  1247                           ; Regs used in _init_SWTimer: [wreg+fsr+status,
                                 2+status,0]
  1248                           	line	7
  1249                           ;SW_TIMER.c: 7: unsigned char counter=0;
  1250  031D  1003               	clrc
  1251  031E  1283               	bcf	status, 5	;RP0=0, select bank0
  1252  031F  1303               	bcf	status, 6	;RP2=0, select bank0
  1253                           	
  1254  0320  3000               	movlw	0
  1255  0321  1803               	btfsc	status,0
  1256  0322  3001               	movlw	1
  1257  0323  00D3               	movwf	(_init_SWTimer_counter)
  1258                           	line	9
  1259                           ;SW_TIMER.c: 9: for (counter=0;counter <4 ; cou
                                 nter++)
  1260  0324  1003               	clrc
  1261                           	
  1262  0325  3000               	movlw	0
  1263  0326  1803               	btfsc	status,0
  1264  0327  3001               	movlw	1
  1265  0328  00D3               	movwf	(_init_SWTimer_counter)
  1266  0329  2B2A               	goto	l2
  1267                           	line	10
  1268                           	
  1269  032A                     l2:	
  1270                           	line	11
  1271                           ;SW_TIMER.c: 10: {
  1272                           ;SW_TIMER.c: 11: TimerStart[counter]=0;
  1273                           	
  1274  032A  0853               	movf	(_init_SWTimer_counter),w
  1275  032B  1383               	bcf	status, 7	;select IRP bank0
  1276                           	
  1277  032C  00D4               	movwf	(??_init_SWTimer+1+0)
  1278  032D  0754               	addwf	(??_init_SWTimer+1+0),w
  1279  032E  3E2F               	addlw	47&0ffh
  1280  032F  0084               	movwf	fsr
  1281  0330  3000               	movlw	low(0)
  1282  0331  0080               	movwf	indf
  1283  0332  0A84               	incf	fsr,f
  1284  0333  3000               	movlw	high(0)
  1285  0334  0080               	movwf	indf
  1286                           	line	12
  1287                           ;SW_TIMER.c: 12: TimerState[counter] =2;
  1288  0335  3002               	movlw	(02h)
  1289  0336  00D4               	movwf	(??_init_SWTimer+1+0)
  1290                           	
  1291  0337  0853               	movf	(_init_SWTimer_counter),w
  1292                           	
  1293  0338  3E75               	addlw	117&0ffh
  1294  0339  0084               	movwf	fsr
  1295                           	
  1296  033A  0854               	movf	(??_init_SWTimer+1+0),w
  1297  033B  0080               	movwf	indf
  1298                           	line	13
  1299                           ;SW_TIMER.c: 13: TimerTimeOutVal[counter]=0;
  1300                           	
  1301  033C  0853               	movf	(_init_SWTimer_counter),w
  1302                           	
  1303  033D  00D4               	movwf	(??_init_SWTimer+1+0)
  1304  033E  0754               	addwf	(??_init_SWTimer+1+0),w
  1305  033F  3E37               	addlw	55&0ffh
  1306  0340  0084               	movwf	fsr
  1307  0341  3000               	movlw	low(0)
  1308  0342  0080               	movwf	indf
  1309  0343  0A84               	incf	fsr,f
  1310  0344  3000               	movlw	high(0)
  1311  0345  0080               	movwf	indf
  1312                           	line	9
  1313  0346  3001               	movlw	(01h)
  1314  0347  00D4               	movwf	(??_init_SWTimer+1+0)
  1315                           	
  1316  0348  0854               	movf	(??_init_SWTimer+1+0),w
  1317  0349  07D3               	addwf	(_init_SWTimer_counter),f
  1318  034A  3004               	movlw	(04h)
  1319                           	
  1320  034B  0253               	subwf	(_init_SWTimer_counter),w
  1321  034C  1C03               	skipc
  1322  034D  2B4F               	goto	u2061
  1323  034E  2B50               	goto	u2060
  1324  034F                     u2061:
  1325  034F  2B2A               	goto	l2
  1326  0350                     u2060:
  1327                           	
  1328  0350                     l3:	
  1329                           	line	18
  1330                           ;SW_TIMER.c: 15: }
  1331                           ;SW_TIMER.c: 18: }
  1332  0350                     l1:	
  1333  0350  0008               	return
  1334                           ; =============== function _init_SWTimer ends =
                                 ==============
  1335                           
  1336                           GLOBAL __end_of_init_SWTimer
  1337  0351                     	__end_of_init_SWTimer:
  1338                           	FNSIZE	_init_SWTimer,2,0
  1339                           	signat	_init_SWTimer,88
  1340                           	global	_init_spi
  1341                           	global	??_init_spi
  1342                           	global	?_init_spi
  1343                           
  1344                           ; *************** function _init_spi **********
                                 *****
  1345                           ; Defined at:
  1346                           ;		line 15 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  1347                           ; Parameters:
  1348                           ;		None
  1349                           ; Auto variables:
  1350                           ;		None
  1351                           ; Return value:
  1352                           ;		type: void 
  1353                           ;		size: 0
  1354                           ; Registers used:
  1355                           ;		wreg
  1356                           ; Tracked objects:
  1357                           ;		On entry : 0/0
  1358                           ;		On exit  : 0/0
  1359                           ;		Unchanged: 0/0
  1360                           ; Data sizes:
  1361                           ;		Autos:    0
  1362                           ;		Params:   0
  1363                           ;		Temp:     0
  1364                           ;		Total:    0
  1365                           ; This function calls:
  1366                           ;		Nothing
  1367                           ; This function is called by:
  1368                           ;		_main
  1369                           ; This function uses a non-reentrant model
  1370                           ; 
  1371                           	psect	text225,local,class=CODE,delta=2
  1372                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  1373                           	line	15
  1374                           ;Spi.c: 14: void init_spi(void)
  1375                           ;Spi.c: 15: {
  1376                           	
  1377  0479                     _init_spi:	
  1378                           ; Regs used in _init_spi: [wreg]
  1379                           	line	17
  1380                           ;Spi.c: 17: TRISA =0x02;
  1381  0479  3002               	movlw	(02h)
  1382  047A  1683               	bsf	status, 5	;RP0=1, select bank1
  1383  047B  1303               	bcf	status, 6	;RP2=0, select bank1
  1384                           	
  1385  047C  0085               	movwf	(133)^080h	;volatile
  1386                           	line	18
  1387                           ;Spi.c: 18: PORTA =0x08;
  1388  047D  3008               	movlw	(08h)
  1389  047E  1283               	bcf	status, 5	;RP0=0, select bank0
  1390  047F  1303               	bcf	status, 6	;RP2=0, select bank0
  1391                           	
  1392  0480  0085               	movwf	(5)	;volatile
  1393                           	line	20
  1394                           ;Spi.c: 20: }
  1395  0481                     l18:	
  1396  0481  0008               	return
  1397                           ; =============== function _init_spi ends =====
                                 ==========
  1398                           
  1399                           GLOBAL __end_of_init_spi
  1400  0482                     	__end_of_init_spi:
  1401                           	FNSIZE	_init_spi,0,0
  1402                           	signat	_init_spi,88
  1403                           	global	_read_switchs
  1404                           	global	??_read_switchs
  1405                           	global	?_read_switchs
  1406                           
  1407                           ; *************** function _read_switchs ******
                                 *********
  1408                           ; Defined at:
  1409                           ;		line 12 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Dig
                                 IO.c"
  1410                           ; Parameters:
  1411                           ;		None
  1412                           ; Auto variables:
  1413                           ;		ret_val     	       	type: unsigned char 
  1414                           ; Return value:
  1415                           ;		type: unsigned char 
  1416                           ;		size: 1
  1417                           ; Registers used:
  1418                           ;		wreg, status,2, status,0
  1419                           ; Tracked objects:
  1420                           ;		On entry : B00/0
  1421                           ;		On exit  : 0/0
  1422                           ;		Unchanged: 0/0
  1423                           ; Data sizes:
  1424                           ;		Autos:    1
  1425                           ;		Params:   0
  1426                           ;		Temp:     1
  1427                           ;		Total:    2
  1428                           ; This function calls:
  1429                           ;		Nothing
  1430                           ; This function is called by:
  1431                           ;		_RF_Module_Rxchar
  1432                           ; This function uses a non-reentrant model
  1433                           ; 
  1434                           	psect	text226,local,class=CODE,delta=2
  1435                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\DigIO.c"
  1436                           	line	12
  1437                           ;DigIO.c: 11: unsigned char read_switchs(void)
  1438                           ;DigIO.c: 12: {
  1439                           	
  1440  0451                     _read_switchs:	
  1441                           ; Regs used in _read_switchs: [wreg+status,2+st
                                 atus,0]
  1442                           	line	13
  1443                           ;DigIO.c: 13: unsigned char ret_val=0;
  1444  0451  1003               	clrc
  1445                           	
  1446  0452  3000               	movlw	0
  1447  0453  1803               	btfsc	status,0
  1448  0454  3001               	movlw	1
  1449  0455  00D9               	movwf	(_read_switchs_ret_val)
  1450                           	line	14
  1451                           ;DigIO.c: 14: ret_val = ~ PORTA;
  1452                           	
  1453  0456  0905               	comf	(5),w	;volatile
  1454                           	
  1455  0457  00D9               	movwf	(_read_switchs_ret_val)
  1456                           	line	16
  1457                           ;DigIO.c: 16: ret_val &=0xF0;
  1458  0458  30F0               	movlw	(0F0h)
  1459  0459  00DA               	movwf	(??_read_switchs+1+0)
  1460                           	
  1461  045A  085A               	movf	(??_read_switchs+1+0),w
  1462  045B  05D9               	andwf	(_read_switchs_ret_val),f
  1463                           	line	18
  1464                           ;DigIO.c: 18: return ret_val;
  1465                           	
  1466  045C  0859               	movf	(_read_switchs_ret_val),w
  1467                           	
  1468  045D  2C5E               	goto	l14
  1469                           	line	20
  1470                           ;DigIO.c: 20: }
  1471  045E                     l14:	
  1472  045E  0008               	return
  1473                           ; =============== function _read_switchs ends =
                                 ==============
  1474                           
  1475                           GLOBAL __end_of_read_switchs
  1476  045F                     	__end_of_read_switchs:
  1477                           	FNSIZE	_read_switchs,2,0
  1478                           	signat	_read_switchs,89
  1479                           	global	_TX_LED_Toggle
  1480                           	global	??_TX_LED_Toggle
  1481                           	global	?_TX_LED_Toggle
  1482                           
  1483                           ; *************** function _TX_LED_Toggle *****
                                 **********
  1484                           ; Defined at:
  1485                           ;		line 34 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Dig
                                 IO.c"
  1486                           ; Parameters:
  1487                           ;		None
  1488                           ; Auto variables:
  1489                           ;		None
  1490                           ; Return value:
  1491                           ;		type: void 
  1492                           ;		size: 0
  1493                           ; Registers used:
  1494                           ;		wreg, status,2, status,0
  1495                           ; Tracked objects:
  1496                           ;		On entry : 0/0
  1497                           ;		On exit  : 0/0
  1498                           ;		Unchanged: 0/0
  1499                           ; Data sizes:
  1500                           ;		Autos:    0
  1501                           ;		Params:   0
  1502                           ;		Temp:     1
  1503                           ;		Total:    1
  1504                           ; This function calls:
  1505                           ;		Nothing
  1506                           ; This function is called by:
  1507                           ;		_RF_Module_Rxchar
  1508                           ;		_main
  1509                           ; This function uses a non-reentrant model
  1510                           ; 
  1511                           	psect	text227,local,class=CODE,delta=2
  1512                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\DigIO.c"
  1513                           	line	34
  1514                           ;DigIO.c: 33: void TX_LED_Toggle(void)
  1515                           ;DigIO.c: 34: {
  1516                           	
  1517  0482                     _TX_LED_Toggle:	
  1518                           ; Regs used in _TX_LED_Toggle: [wreg+status,2+s
                                 tatus,0]
  1519                           	line	35
  1520                           ;DigIO.c: 35: PORTB ^= 0x01;
  1521  0482  3001               	movlw	(01h)
  1522  0483  1283               	bcf	status, 5	;RP0=0, select bank0
  1523  0484  1303               	bcf	status, 6	;RP2=0, select bank0
  1524  0485  00D9               	movwf	(??_TX_LED_Toggle+0+0)
  1525                           	
  1526  0486  0859               	movf	(??_TX_LED_Toggle+0+0),w
  1527  0487  0686               	xorwf	(6),f	;volatile
  1528                           	line	36
  1529                           ;DigIO.c: 36: }
  1530  0488                     l17:	
  1531  0488  0008               	return
  1532                           ; =============== function _TX_LED_Toggle ends 
                                 ===============
  1533                           
  1534                           GLOBAL __end_of_TX_LED_Toggle
  1535  0489                     	__end_of_TX_LED_Toggle:
  1536                           	FNSIZE	_TX_LED_Toggle,1,0
  1537                           	signat	_TX_LED_Toggle,88
  1538                           	global	_RF_Module_init
  1539                           	global	??_RF_Module_init
  1540                           	global	?_RF_Module_init
  1541                           
  1542                           ; *************** function _RF_Module_init ****
                                 ***********
  1543                           ; Defined at:
  1544                           ;		line 499 in file "C:\Documents and Settings\
                                 Jayamma\My Documents\PIC\PICCC2500_11Nov2014\RF
                                 _Module.c"
  1545                           ; Parameters:
  1546                           ;		None
  1547                           ; Auto variables:
  1548                           ;		ErrorCount  	       	type: unsigned char 
  1549                           ;		i           	       	type: unsigned char 
  1550                           ; Return value:
  1551                           ;		type: void 
  1552                           ;		size: 0
  1553                           ; Registers used:
  1554                           ;		wreg, fsr, status,2, status,0, pclath, cstac
                                 k
  1555                           ; Tracked objects:
  1556                           ;		On entry : 0/0
  1557                           ;		On exit  : 0/0
  1558                           ;		Unchanged: 0/0
  1559                           ; Data sizes:
  1560                           ;		Autos:    2
  1561                           ;		Params:   0
  1562                           ;		Temp:     1
  1563                           ;		Total:    3
  1564                           ; This function calls:
  1565                           ;		_CC2500_WriteReg
  1566                           ;		_command
  1567                           ; This function is called by:
  1568                           ;		_CC2500_Init
  1569                           ; This function uses a non-reentrant model
  1570                           ; 
  1571                           	psect	text228,local,class=CODE,delta=2
  1572                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
  1573                           	line	499
  1574                           ;RF_Module.c: 498: void RF_Module_init(void)
  1575                           ;RF_Module.c: 499: {
  1576                           	
  1577  0383                     _RF_Module_init:	
  1578                           ; Regs used in _RF_Module_init: [wreg+fsr+statu
                                 s,2+status,0+pclath+cstack]
  1579                           	line	501
  1580                           ;RF_Module.c: 500: unsigned char i,ErrorCount;
  1581                           ;RF_Module.c: 501: for(i=0x00;i<0x2F;i++)
  1582  0383  1003               	clrc
  1583  0384  1283               	bcf	status, 5	;RP0=0, select bank0
  1584  0385  1303               	bcf	status, 6	;RP2=0, select bank0
  1585                           	
  1586  0386  3000               	movlw	0
  1587  0387  1803               	btfsc	status,0
  1588  0388  3001               	movlw	1
  1589  0389  00D6               	movwf	(_RF_Module_init_i)
  1590  038A  2B8B               	goto	l157
  1591                           	line	502
  1592                           	
  1593  038B                     l157:	
  1594                           	line	503
  1595                           ;RF_Module.c: 502: {
  1596                           ;RF_Module.c: 503: if( CC2500_WriteReg(i,CC_rfS
                                 ettings[i])) ErrorCount++;
  1597                           	
  1598  038B  0856               	movf	(_RF_Module_init_i),w
  1599  038C  1383               	bcf	status, 7	;select IRP bank0
  1600                           	
  1601  038D  3EC1               	addlw	193&0ffh
  1602  038E  0084               	movwf	fsr
  1603                           	
  1604  038F  0800               	movf	indf,w
  1605                           	
  1606                           	
  1607  0390  00D8               	movwf	(?_CC2500_WriteReg)
  1608                           	
  1609  0391  0856               	movf	(_RF_Module_init_i),w
  1610                           	
  1611  0392  2207               	fcall	_CC2500_WriteReg
  1612  0393  3A00               	xorlw	0
  1613  0394  1903               	skipnz
  1614  0395  2B97               	goto	u1871
  1615  0396  2B98               	goto	u1870
  1616  0397                     u1871:
  1617  0397  2B9E               	goto	l160
  1618  0398                     u1870:
  1619  0398  3001               	movlw	(01h)
  1620  0399  1283               	bcf	status, 5	;RP0=0, select bank0
  1621  039A  1303               	bcf	status, 6	;RP2=0, select bank0
  1622  039B  00D7               	movwf	(??_RF_Module_init+2+0)
  1623                           	
  1624  039C  0857               	movf	(??_RF_Module_init+2+0),w
  1625  039D  07D5               	addwf	(_RF_Module_init_ErrorCount),f
  1626                           	
  1627  039E                     l160:	
  1628                           	line	501
  1629  039E  3001               	movlw	(01h)
  1630  039F  1283               	bcf	status, 5	;RP0=0, select bank0
  1631  03A0  1303               	bcf	status, 6	;RP2=0, select bank0
  1632  03A1  00D7               	movwf	(??_RF_Module_init+2+0)
  1633                           	
  1634  03A2  0857               	movf	(??_RF_Module_init+2+0),w
  1635  03A3  07D6               	addwf	(_RF_Module_init_i),f
  1636  03A4  302F               	movlw	(02Fh)
  1637                           	
  1638  03A5  0256               	subwf	(_RF_Module_init_i),w
  1639  03A6  1C03               	skipc
  1640  03A7  2BA9               	goto	u1881
  1641  03A8  2BAA               	goto	u1880
  1642  03A9                     u1881:
  1643  03A9  2B8B               	goto	l157
  1644  03AA                     u1880:
  1645                           	
  1646  03AA                     l158:	
  1647                           	line	505
  1648                           ;RF_Module.c: 504: }
  1649                           ;RF_Module.c: 505: command(0x36);
  1650  03AA  3036               	movlw	(036h)
  1651  03AB  2437               	fcall	_command
  1652                           	line	506
  1653                           ;RF_Module.c: 506: command(0x3A);
  1654  03AC  303A               	movlw	(03Ah)
  1655  03AD  2437               	fcall	_command
  1656                           	line	517
  1657                           ;RF_Module.c: 517: }
  1658  03AE                     l156:	
  1659  03AE  0008               	return
  1660                           ; =============== function _RF_Module_init ends
                                  ===============
  1661                           
  1662                           GLOBAL __end_of_RF_Module_init
  1663  03AF                     	__end_of_RF_Module_init:
  1664                           	FNSIZE	_RF_Module_init,3,0
  1665                           	signat	_RF_Module_init,88
  1666                           	global	_RF_Module_Txchar
  1667                           	global	??_RF_Module_Txchar
  1668                           	global	?_RF_Module_Txchar
  1669                           
  1670                           ; *************** function _RF_Module_Txchar **
                                 *************
  1671                           ; Defined at:
  1672                           ;		line 68 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\RF_
                                 Module.c"
  1673                           ; Parameters:
  1674                           ;		Txdata      	reg:   wr	type: PTR unsigned ch
                                 ar ; Largest target is 10
  1675                           ;		 -> bTxBuf(10), 
  1676                           ;		Len         	offs:   0	type: unsigned char 
  1677                           ; Auto variables:
  1678                           ;		Txdata      	       	type: PTR unsigned char
                                  ; Largest target is 10
  1679                           ;		 -> bTxBuf(10), 
  1680                           ;		status      	       	type: unsigned char 
  1681                           ;		i           	       	type: unsigned char 
  1682                           ; Return value:
  1683                           ;		type: void 
  1684                           ;		size: 0
  1685                           ; Registers used:
  1686                           ;		wreg, fsr, status,2, status,0, pclath, cstac
                                 k
  1687                           ; Tracked objects:
  1688                           ;		On entry : 300/0
  1689                           ;		On exit  : 0/0
  1690                           ;		Unchanged: 0/0
  1691                           ; Data sizes:
  1692                           ;		Autos:    3
  1693                           ;		Params:   1
  1694                           ;		Temp:     1
  1695                           ;		Total:    5
  1696                           ; This function calls:
  1697                           ;		_command
  1698                           ;		_SPI_SS_Enable
  1699                           ;		_SPI_MISO_READ
  1700                           ;		_spi_TxByte
  1701                           ;		_SPI_SS_Disable
  1702                           ; This function is called by:
  1703                           ;		_RF_Module_Rxchar
  1704                           ; This function uses a non-reentrant model
  1705                           ; 
  1706                           	psect	text229,local,class=CODE,delta=2
  1707                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
  1708                           	line	68
  1709                           ;RF_Module.c: 8: const unsigned char paTable_CC
                                 2500[8]={0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xf
                                 e};
  1710                           ;RF_Module.c: 15: unsigned char CC_rfSettings[0
                                 x2F]=
  1711                           ;RF_Module.c: 16: {
  1712                           ;RF_Module.c: 17: 0x29,
  1713                           ;RF_Module.c: 18: 0x2E,
  1714                           ;RF_Module.c: 19: 0x06,
  1715                           ;RF_Module.c: 20: 0x07,
  1716                           ;RF_Module.c: 21: 0xD3,
  1717                           ;RF_Module.c: 22: 0x91,
  1718                           ;RF_Module.c: 23: 0xFF,
  1719                           ;RF_Module.c: 24: 0x04,
  1720                           ;RF_Module.c: 25: 0x05,
  1721                           ;RF_Module.c: 26: 0x00,
  1722                           ;RF_Module.c: 27: 0x03,
  1723                           ;RF_Module.c: 28: 0x08,
  1724                           ;RF_Module.c: 29: 0x00,
  1725                           ;RF_Module.c: 30: 0x5D,
  1726                           ;RF_Module.c: 31: 0x44,
  1727                           	
  1728  02E0                     _RF_Module_Txchar:	
  1729                           ; Regs used in _RF_Module_Txchar: [wreg+fsr+sta
                                 tus,2+status,0+pclath+cstack]
  1730                           ;_RF_Module_Txchar_Txdata stored from wreg
  1731                           	line	71
  1732                           	
  1733  02E0  00DA               	movwf	(_RF_Module_Txchar_Txdata)
  1734                           ;RF_Module.c: 69: unsigned char i,status;
  1735                           ;RF_Module.c: 71: command(0x36);
  1736  02E1  3036               	movlw	(036h)
  1737  02E2  2437               	fcall	_command
  1738                           	line	72
  1739                           ;RF_Module.c: 72: command(0x3B);
  1740  02E3  303B               	movlw	(03Bh)
  1741  02E4  2437               	fcall	_command
  1742                           	line	73
  1743                           ;RF_Module.c: 73: command(0x3A);
  1744  02E5  303A               	movlw	(03Ah)
  1745  02E6  2437               	fcall	_command
  1746                           	line	76
  1747                           ;RF_Module.c: 76: status = command(0x3D);
  1748  02E7  303D               	movlw	(03Dh)
  1749  02E8  2437               	fcall	_command
  1750  02E9  1283               	bcf	status, 5	;RP0=0, select bank0
  1751  02EA  1303               	bcf	status, 6	;RP2=0, select bank0
  1752                           	
  1753  02EB  00DB               	movwf	(_RF_Module_Txchar_status)
  1754                           	line	78
  1755                           ;RF_Module.c: 78: if((status & 0x20) != 0x20)
  1756                           	
  1757  02EC  1ADB               	btfsc	(_RF_Module_Txchar_status),(5)&7
  1758  02ED  2AEF               	goto	u1921
  1759  02EE  2AF0               	goto	u1920
  1760  02EF                     u1921:
  1761  02EF  2B1C               	goto	l42
  1762  02F0                     u1920:
  1763                           	line	81
  1764                           ;RF_Module.c: 79: {
  1765                           ;RF_Module.c: 81: SPI_SS_Enable();
  1766  02F0  2490               	fcall	_SPI_SS_Enable
  1767                           	line	84
  1768                           ;RF_Module.c: 84: while(SPI_MISO_READ()== 1);
  1769  02F1  2AF2               	goto	l43
  1770                           	
  1771  02F2                     l43:	
  1772  02F2  2497               	fcall	_SPI_MISO_READ
  1773  02F3  3A01               	xorlw	01h
  1774  02F4  1903               	skipnz
  1775  02F5  2AF7               	goto	u1931
  1776  02F6  2AF8               	goto	u1930
  1777  02F7                     u1931:
  1778  02F7  2AF2               	goto	l43
  1779  02F8                     u1930:
  1780                           	
  1781  02F8                     l45:	
  1782                           	line	85
  1783                           ;RF_Module.c: 85: spi_TxByte(0x7f);
  1784  02F8  307F               	movlw	(07Fh)
  1785  02F9  225A               	fcall	_spi_TxByte
  1786                           	line	86
  1787                           ;RF_Module.c: 86: spi_TxByte(Len);
  1788  02FA  1283               	bcf	status, 5	;RP0=0, select bank0
  1789  02FB  1303               	bcf	status, 6	;RP2=0, select bank0
  1790                           	
  1791  02FC  0859               	movf	(_RF_Module_Txchar_Len),w
  1792  02FD  1383               	bcf	status, 7	;select IRP bank0
  1793                           	
  1794  02FE  225A               	fcall	_spi_TxByte
  1795                           	line	88
  1796                           ;RF_Module.c: 88: for(i=0;i<Len;i++)
  1797  02FF  1003               	clrc
  1798  0300  1283               	bcf	status, 5	;RP0=0, select bank0
  1799  0301  1303               	bcf	status, 6	;RP2=0, select bank0
  1800                           	
  1801  0302  3000               	movlw	0
  1802  0303  1803               	btfsc	status,0
  1803  0304  3001               	movlw	1
  1804  0305  00DC               	movwf	(_RF_Module_Txchar_i)
  1805  0306  2B12               	goto	l49
  1806                           	line	89
  1807                           	
  1808  0307                     l46:	
  1809                           	line	90
  1810                           ;RF_Module.c: 89: {
  1811                           ;RF_Module.c: 90: spi_TxByte((unsigned char)*(T
                                 xdata+i));
  1812                           	
  1813  0307  085C               	movf	(_RF_Module_Txchar_i),w
  1814                           	
  1815                           	
  1816  0308  075A               	addwf	(_RF_Module_Txchar_Txdata),w
  1817  0309  0084               	movwf	fsr
  1818                           	
  1819  030A  0800               	movf	indf,w
  1820                           	
  1821  030B  225A               	fcall	_spi_TxByte
  1822                           	line	88
  1823  030C  3001               	movlw	(01h)
  1824  030D  1283               	bcf	status, 5	;RP0=0, select bank0
  1825  030E  1303               	bcf	status, 6	;RP2=0, select bank0
  1826  030F  00DD               	movwf	(??_RF_Module_Txchar+3+0)
  1827                           	
  1828  0310  085D               	movf	(??_RF_Module_Txchar+3+0),w
  1829  0311  07DC               	addwf	(_RF_Module_Txchar_i),f
  1830                           	
  1831  0312                     l49:	
  1832                           	
  1833  0312  0859               	movf	(_RF_Module_Txchar_Len),w
  1834  0313  1383               	bcf	status, 7	;select IRP bank0
  1835                           	
  1836                           	
  1837  0314  025C               	subwf	(_RF_Module_Txchar_i),w
  1838  0315  1C03               	skipc
  1839  0316  2B18               	goto	u1941
  1840  0317  2B19               	goto	u1940
  1841  0318                     u1941:
  1842  0318  2B07               	goto	l46
  1843  0319                     u1940:
  1844                           	
  1845  0319                     l47:	
  1846                           	line	93
  1847                           ;RF_Module.c: 92: }
  1848                           ;RF_Module.c: 93: SPI_SS_Disable();
  1849  0319  24A2               	fcall	_SPI_SS_Disable
  1850                           	line	94
  1851                           ;RF_Module.c: 94: command(0x35);
  1852  031A  3035               	movlw	(035h)
  1853  031B  2437               	fcall	_command
  1854                           	line	96
  1855                           	
  1856  031C                     l42:	
  1857                           	line	97
  1858                           ;RF_Module.c: 96: }
  1859                           ;RF_Module.c: 97: }
  1860  031C                     l41:	
  1861  031C  0008               	return
  1862                           ; =============== function _RF_Module_Txchar en
                                 ds ===============
  1863                           
  1864                           GLOBAL __end_of_RF_Module_Txchar
  1865  031D                     	__end_of_RF_Module_Txchar:
  1866                           	FNSIZE	_RF_Module_Txchar,4,1
  1867                           	signat	_RF_Module_Txchar,8312
  1868                           	global	_CC2500_WriteReg
  1869                           	global	??_CC2500_WriteReg
  1870                           	global	?_CC2500_WriteReg
  1871                           
  1872                           ; *************** function _CC2500_WriteReg ***
                                 ************
  1873                           ; Defined at:
  1874                           ;		line 256 in file "C:\Documents and Settings\
                                 Jayamma\My Documents\PIC\PICCC2500_11Nov2014\RF
                                 _Module.c"
  1875                           ; Parameters:
  1876                           ;		addr        	reg:   wr	type: unsigned char 
  1877                           ;		value       	offs:   0	type: unsigned char 
  1878                           ; Auto variables:
  1879                           ;		i           	       	type: unsigned char 
  1880                           ;		addr        	       	type: unsigned char 
  1881                           ; Return value:
  1882                           ;		type: unsigned char 
  1883                           ;		size: 1
  1884                           ; Registers used:
  1885                           ;		wreg, status,2, status,0, pclath, cstack
  1886                           ; Tracked objects:
  1887                           ;		On entry : B00/0
  1888                           ;		On exit  : 0/0
  1889                           ;		Unchanged: 0/0
  1890                           ; Data sizes:
  1891                           ;		Autos:    2
  1892                           ;		Params:   1
  1893                           ;		Temp:     1
  1894                           ;		Total:    4
  1895                           ; This function calls:
  1896                           ;		_Delay_ms
  1897                           ;		_SPI_SS_Enable
  1898                           ;		_SPI_MISO_READ
  1899                           ;		_spi_TxByte
  1900                           ;		_SPI_SS_Disable
  1901                           ;		_CC2500_ReadReg
  1902                           ; This function is called by:
  1903                           ;		_RF_Module_init
  1904                           ; This function uses a non-reentrant model
  1905                           ; 
  1906                           	psect	text230,local,class=CODE,delta=2
  1907                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
  1908                           	line	256
  1909                           ;RF_Module.c: 255: unsigned char CC2500_WriteRe
                                 g(unsigned char addr, unsigned char value)
  1910                           ;RF_Module.c: 256: {
  1911                           	
  1912  0207                     _CC2500_WriteReg:	
  1913                           ; Regs used in _CC2500_WriteReg: [wreg+status,2
                                 +status,0+pclath+cstack]
  1914                           ;_CC2500_WriteReg_addr stored from wreg
  1915                           	
  1916  0207  00DA               	movwf	(_CC2500_WriteReg_addr)
  1917                           	line	257
  1918                           ;RF_Module.c: 257: unsigned char i=0;
  1919  0208  1003               	clrc
  1920                           	
  1921  0209  3000               	movlw	0
  1922  020A  1803               	btfsc	status,0
  1923  020B  3001               	movlw	1
  1924  020C  00D9               	movwf	(_CC2500_WriteReg_i)
  1925                           	line	258
  1926                           ;RF_Module.c: 258: repeat: Delay_ms(20);
  1927                           	
  1928  020D                     l94:	
  1929  020D  3014               	movlw	low(014h)
  1930                           	
  1931  020E  00E4               	movwf	(?_Delay_ms)
  1932  020F  3000               	movlw	high(014h)
  1933  0210  00E5               	movwf	((?_Delay_ms))+1
  1934  0211  23AF               	fcall	_Delay_ms
  1935                           	line	259
  1936                           ;RF_Module.c: 259: SPI_SS_Enable();
  1937  0212  2490               	fcall	_SPI_SS_Enable
  1938                           	line	260
  1939                           ;RF_Module.c: 260: while(SPI_MISO_READ()== 1);
  1940  0213  2A14               	goto	l95
  1941                           	
  1942  0214                     l95:	
  1943  0214  2497               	fcall	_SPI_MISO_READ
  1944  0215  3A01               	xorlw	01h
  1945  0216  1903               	skipnz
  1946  0217  2A19               	goto	u1831
  1947  0218  2A1A               	goto	u1830
  1948  0219                     u1831:
  1949  0219  2A14               	goto	l95
  1950  021A                     u1830:
  1951                           	
  1952  021A                     l97:	
  1953                           	line	261
  1954                           ;RF_Module.c: 261: addr &= 0x7F;
  1955  021A  307F               	movlw	(07Fh)
  1956  021B  1283               	bcf	status, 5	;RP0=0, select bank0
  1957  021C  1303               	bcf	status, 6	;RP2=0, select bank0
  1958  021D  00DB               	movwf	(??_CC2500_WriteReg+2+0)
  1959                           	
  1960  021E  085B               	movf	(??_CC2500_WriteReg+2+0),w
  1961  021F  05DA               	andwf	(_CC2500_WriteReg_addr),f
  1962                           	line	262
  1963                           ;RF_Module.c: 262: Delay_ms(20);
  1964  0220  3014               	movlw	low(014h)
  1965                           	
  1966  0221  00E4               	movwf	(?_Delay_ms)
  1967  0222  3000               	movlw	high(014h)
  1968  0223  00E5               	movwf	((?_Delay_ms))+1
  1969  0224  23AF               	fcall	_Delay_ms
  1970                           	line	263
  1971                           ;RF_Module.c: 263: spi_TxByte(addr);
  1972  0225  1283               	bcf	status, 5	;RP0=0, select bank0
  1973  0226  1303               	bcf	status, 6	;RP2=0, select bank0
  1974                           	
  1975  0227  085A               	movf	(_CC2500_WriteReg_addr),w
  1976  0228  1383               	bcf	status, 7	;select IRP bank0
  1977                           	
  1978  0229  225A               	fcall	_spi_TxByte
  1979                           	line	264
  1980                           ;RF_Module.c: 264: Delay_ms(20);
  1981  022A  3014               	movlw	low(014h)
  1982  022B  1283               	bcf	status, 5	;RP0=0, select bank0
  1983  022C  1303               	bcf	status, 6	;RP2=0, select bank0
  1984                           	
  1985  022D  00E4               	movwf	(?_Delay_ms)
  1986  022E  3000               	movlw	high(014h)
  1987  022F  00E5               	movwf	((?_Delay_ms))+1
  1988  0230  23AF               	fcall	_Delay_ms
  1989                           	line	265
  1990                           ;RF_Module.c: 265: spi_TxByte(value);
  1991  0231  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  0232  1303               	bcf	status, 6	;RP2=0, select bank0
  1993                           	
  1994  0233  0858               	movf	(_CC2500_WriteReg_value),w
  1995  0234  1383               	bcf	status, 7	;select IRP bank0
  1996                           	
  1997  0235  225A               	fcall	_spi_TxByte
  1998                           	line	266
  1999                           ;RF_Module.c: 266: Delay_ms(20);
  2000  0236  3014               	movlw	low(014h)
  2001  0237  1283               	bcf	status, 5	;RP0=0, select bank0
  2002  0238  1303               	bcf	status, 6	;RP2=0, select bank0
  2003                           	
  2004  0239  00E4               	movwf	(?_Delay_ms)
  2005  023A  3000               	movlw	high(014h)
  2006  023B  00E5               	movwf	((?_Delay_ms))+1
  2007  023C  23AF               	fcall	_Delay_ms
  2008                           	line	267
  2009                           ;RF_Module.c: 267: SPI_SS_Disable();
  2010  023D  24A2               	fcall	_SPI_SS_Disable
  2011                           	line	269
  2012                           ;RF_Module.c: 269: if (CC2500_ReadReg(addr) == 
                                 value )
  2013  023E  1283               	bcf	status, 5	;RP0=0, select bank0
  2014  023F  1303               	bcf	status, 6	;RP2=0, select bank0
  2015                           	
  2016                           	
  2017  0240  085A               	movf	(_CC2500_WriteReg_addr),w
  2018  0241  1383               	bcf	status, 7	;select IRP bank0
  2019                           	
  2020  0242  2351               	fcall	_CC2500_ReadReg
  2021  0243  1283               	bcf	status, 5	;RP0=0, select bank0
  2022  0244  1303               	bcf	status, 6	;RP2=0, select bank0
  2023  0245  0658               	xorwf	(_CC2500_WriteReg_value),w
  2024  0246  1D03               	skipz
  2025  0247  2A49               	goto	u1841
  2026  0248  2A4A               	goto	u1840
  2027  0249                     u1841:
  2028  0249  2A4C               	goto	l98
  2029  024A                     u1840:
  2030                           	line	271
  2031                           ;RF_Module.c: 270: {
  2032                           ;RF_Module.c: 271: return 0;
  2033  024A  3000               	movlw	(0)
  2034  024B  2A59               	goto	l93
  2035                           	line	273
  2036                           	
  2037  024C                     l98:	
  2038                           	line	275
  2039                           ;RF_Module.c: 273: else
  2040                           ;RF_Module.c: 274: {
  2041                           ;RF_Module.c: 275: if(i++ < 5)
  2042  024C  3001               	movlw	(01h)
  2043  024D  00DB               	movwf	(??_CC2500_WriteReg+2+0)
  2044                           	
  2045  024E  085B               	movf	(??_CC2500_WriteReg+2+0),w
  2046  024F  07D9               	addwf	(_CC2500_WriteReg_i),f
  2047  0250  3006               	movlw	(06h)
  2048  0251  0259               	subwf	((_CC2500_WriteReg_i))&07fh,w
  2049  0252  1803               	skipnc
  2050  0253  2A55               	goto	u1851
  2051  0254  2A56               	goto	u1850
  2052  0255                     u1851:
  2053  0255  2A57               	goto	l100
  2054  0256                     u1850:
  2055                           	line	276
  2056                           ;RF_Module.c: 276: goto repeat;
  2057  0256  2A0D               	goto	l94
  2058                           	line	277
  2059                           	
  2060  0257                     l100:	
  2061                           	line	278
  2062                           ;RF_Module.c: 277: else
  2063                           ;RF_Module.c: 278: return 1;
  2064  0257  3001               	movlw	(01h)
  2065  0258  2A59               	goto	l93
  2066                           	line	282
  2067                           ;RF_Module.c: 279: }
  2068                           ;RF_Module.c: 282: }
  2069  0259                     l93:	
  2070  0259  0008               	return
  2071                           ; =============== function _CC2500_WriteReg end
                                 s ===============
  2072                           
  2073                           GLOBAL __end_of_CC2500_WriteReg
  2074  025A                     	__end_of_CC2500_WriteReg:
  2075                           	FNSIZE	_CC2500_WriteReg,3,1
  2076                           	signat	_CC2500_WriteReg,8313
  2077                           	global	_command
  2078                           	global	??_command
  2079                           	global	?_command
  2080                           
  2081                           ; *************** function _command ***********
                                 ****
  2082                           ; Defined at:
  2083                           ;		line 195 in file "C:\Documents and Settings\
                                 Jayamma\My Documents\PIC\PICCC2500_11Nov2014\RF
                                 _Module.c"
  2084                           ; Parameters:
  2085                           ;		a           	reg:   wr	type: unsigned char 
  2086                           ; Auto variables:
  2087                           ;		a           	       	type: unsigned char 
  2088                           ;		val         	       	type: unsigned char 
  2089                           ; Return value:
  2090                           ;		type: unsigned char 
  2091                           ;		size: 1
  2092                           ; Registers used:
  2093                           ;		wreg, status,2, status,0, pclath, cstack
  2094                           ; Tracked objects:
  2095                           ;		On entry : 0/0
  2096                           ;		On exit  : 0/0
  2097                           ;		Unchanged: 0/0
  2098                           ; Data sizes:
  2099                           ;		Autos:    2
  2100                           ;		Params:   0
  2101                           ;		Temp:     0
  2102                           ;		Total:    2
  2103                           ; This function calls:
  2104                           ;		_SPI_SS_Enable
  2105                           ;		_SPI_MISO_READ
  2106                           ;		_spi_TxByte
  2107                           ;		_SPI_SS_Disable
  2108                           ; This function is called by:
  2109                           ;		_RF_Module_Txchar
  2110                           ;		_RF_Module_Rxchar
  2111                           ;		_RF_Module_init
  2112                           ;		_CC2500_SetRxd
  2113                           ; This function uses a non-reentrant model
  2114                           ; 
  2115                           	psect	text231,local,class=CODE,delta=2
  2116                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
  2117                           	line	195
  2118                           ;RF_Module.c: 194: unsigned char command(unsign
                                 ed char a)
  2119                           ;RF_Module.c: 195: {
  2120                           	
  2121  0437                     _command:	
  2122                           ; Regs used in _command: [wreg+status,2+status,
                                 0+pclath+cstack]
  2123                           ;_command_a stored from wreg
  2124                           	line	197
  2125  0437  1283               	bcf	status, 5	;RP0=0, select bank0
  2126  0438  1303               	bcf	status, 6	;RP2=0, select bank0
  2127                           	
  2128  0439  00DE               	movwf	(_command_a)
  2129                           ;RF_Module.c: 196: unsigned char val;
  2130                           ;RF_Module.c: 197: SPI_SS_Enable();
  2131  043A  2490               	fcall	_SPI_SS_Enable
  2132                           	line	198
  2133                           ;RF_Module.c: 198: while(SPI_MISO_READ()== 1);
  2134  043B  2C3C               	goto	l71
  2135                           	
  2136  043C                     l71:	
  2137  043C  2497               	fcall	_SPI_MISO_READ
  2138  043D  3A01               	xorlw	01h
  2139  043E  1903               	skipnz
  2140  043F  2C41               	goto	u1951
  2141  0440  2C42               	goto	u1950
  2142  0441                     u1951:
  2143  0441  2C3C               	goto	l71
  2144  0442                     u1950:
  2145                           	
  2146  0442                     l73:	
  2147                           	line	199
  2148                           ;RF_Module.c: 199: val =spi_TxByte(a);
  2149  0442  1283               	bcf	status, 5	;RP0=0, select bank0
  2150  0443  1303               	bcf	status, 6	;RP2=0, select bank0
  2151                           	
  2152  0444  085E               	movf	(_command_a),w
  2153  0445  1383               	bcf	status, 7	;select IRP bank0
  2154                           	
  2155  0446  225A               	fcall	_spi_TxByte
  2156  0447  1283               	bcf	status, 5	;RP0=0, select bank0
  2157  0448  1303               	bcf	status, 6	;RP2=0, select bank0
  2158                           	
  2159  0449  00DF               	movwf	(_command_val)
  2160                           	line	200
  2161                           ;RF_Module.c: 200: SPI_SS_Disable();
  2162  044A  24A2               	fcall	_SPI_SS_Disable
  2163                           	line	201
  2164                           ;RF_Module.c: 201: return val;
  2165  044B  1283               	bcf	status, 5	;RP0=0, select bank0
  2166  044C  1303               	bcf	status, 6	;RP2=0, select bank0
  2167                           	
  2168  044D  085F               	movf	(_command_val),w
  2169  044E  1383               	bcf	status, 7	;select IRP bank0
  2170                           	
  2171  044F  2C50               	goto	l70
  2172                           	line	202
  2173                           ;RF_Module.c: 202: }
  2174  0450                     l70:	
  2175  0450  0008               	return
  2176                           ; =============== function _command ends ======
                                 =========
  2177                           
  2178                           GLOBAL __end_of_command
  2179  0451                     	__end_of_command:
  2180                           	FNSIZE	_command,2,0
  2181                           	signat	_command,4217
  2182                           	global	_CC2500_ReadReg
  2183                           	global	??_CC2500_ReadReg
  2184                           	global	?_CC2500_ReadReg
  2185                           
  2186                           ; *************** function _CC2500_ReadReg ****
                                 ***********
  2187                           ; Defined at:
  2188                           ;		line 241 in file "C:\Documents and Settings\
                                 Jayamma\My Documents\PIC\PICCC2500_11Nov2014\RF
                                 _Module.c"
  2189                           ; Parameters:
  2190                           ;		addr        	reg:   wr	type: unsigned char 
  2191                           ; Auto variables:
  2192                           ;		addr        	       	type: unsigned char 
  2193                           ;		value       	       	type: unsigned char 
  2194                           ; Return value:
  2195                           ;		type: unsigned char 
  2196                           ;		size: 1
  2197                           ; Registers used:
  2198                           ;		wreg, status,2, status,0, pclath, cstack
  2199                           ; Tracked objects:
  2200                           ;		On entry : 0/0
  2201                           ;		On exit  : 0/0
  2202                           ;		Unchanged: 0/0
  2203                           ; Data sizes:
  2204                           ;		Autos:    2
  2205                           ;		Params:   0
  2206                           ;		Temp:     0
  2207                           ;		Total:    2
  2208                           ; This function calls:
  2209                           ;		_SPI_SS_Enable
  2210                           ;		_SPI_MISO_READ
  2211                           ;		_Delay_ms
  2212                           ;		_spi_TxByte
  2213                           ;		_SPI_SS_Disable
  2214                           ; This function is called by:
  2215                           ;		_RF_Module_Rxchar
  2216                           ;		_CC2500_WriteReg
  2217                           ; This function uses a non-reentrant model
  2218                           ; 
  2219                           	psect	text232,local,class=CODE,delta=2
  2220                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
  2221                           	line	241
  2222                           ;RF_Module.c: 240: unsigned char CC2500_ReadReg
                                 (unsigned char addr)
  2223                           ;RF_Module.c: 241: {
  2224                           	
  2225  0351                     _CC2500_ReadReg:	
  2226                           ; Regs used in _CC2500_ReadReg: [wreg+status,2+
                                 status,0+pclath+cstack]
  2227                           ;_CC2500_ReadReg_addr stored from wreg
  2228                           	line	244
  2229  0351  1283               	bcf	status, 5	;RP0=0, select bank0
  2230  0352  1303               	bcf	status, 6	;RP2=0, select bank0
  2231                           	
  2232  0353  00DC               	movwf	(_CC2500_ReadReg_addr)
  2233                           ;RF_Module.c: 242: unsigned char value;
  2234                           ;RF_Module.c: 244: SPI_SS_Enable();
  2235  0354  2490               	fcall	_SPI_SS_Enable
  2236                           	line	245
  2237                           ;RF_Module.c: 245: while(SPI_MISO_READ()== 1);
  2238  0355  2B56               	goto	l90
  2239                           	
  2240  0356                     l90:	
  2241  0356  2497               	fcall	_SPI_MISO_READ
  2242  0357  3A01               	xorlw	01h
  2243  0358  1903               	skipnz
  2244  0359  2B5B               	goto	u1821
  2245  035A  2B5C               	goto	u1820
  2246  035B                     u1821:
  2247  035B  2B56               	goto	l90
  2248  035C                     u1820:
  2249                           	
  2250  035C                     l92:	
  2251                           	line	246
  2252                           ;RF_Module.c: 246: Delay_ms(20);
  2253  035C  3014               	movlw	low(014h)
  2254  035D  1283               	bcf	status, 5	;RP0=0, select bank0
  2255  035E  1303               	bcf	status, 6	;RP2=0, select bank0
  2256                           	
  2257  035F  00E4               	movwf	(?_Delay_ms)
  2258  0360  3000               	movlw	high(014h)
  2259  0361  00E5               	movwf	((?_Delay_ms))+1
  2260  0362  23AF               	fcall	_Delay_ms
  2261                           	line	247
  2262                           ;RF_Module.c: 247: spi_TxByte(addr|0x80);
  2263  0363  1283               	bcf	status, 5	;RP0=0, select bank0
  2264  0364  1303               	bcf	status, 6	;RP2=0, select bank0
  2265                           	
  2266  0365  085C               	movf	(_CC2500_ReadReg_addr),w
  2267  0366  1383               	bcf	status, 7	;select IRP bank0
  2268                           	
  2269  0367  3880               	iorlw	080h
  2270  0368  225A               	fcall	_spi_TxByte
  2271                           	line	248
  2272                           ;RF_Module.c: 248: Delay_ms(20);
  2273  0369  3014               	movlw	low(014h)
  2274  036A  1283               	bcf	status, 5	;RP0=0, select bank0
  2275  036B  1303               	bcf	status, 6	;RP2=0, select bank0
  2276                           	
  2277  036C  00E4               	movwf	(?_Delay_ms)
  2278  036D  3000               	movlw	high(014h)
  2279  036E  00E5               	movwf	((?_Delay_ms))+1
  2280  036F  23AF               	fcall	_Delay_ms
  2281                           	line	249
  2282                           ;RF_Module.c: 249: value = spi_TxByte(0x00);
  2283  0370  3000               	movlw	(0)
  2284  0371  225A               	fcall	_spi_TxByte
  2285  0372  1283               	bcf	status, 5	;RP0=0, select bank0
  2286  0373  1303               	bcf	status, 6	;RP2=0, select bank0
  2287                           	
  2288  0374  00DD               	movwf	(_CC2500_ReadReg_value)
  2289                           	line	250
  2290                           ;RF_Module.c: 250: SPI_SS_Disable();
  2291  0375  24A2               	fcall	_SPI_SS_Disable
  2292                           	line	251
  2293                           ;RF_Module.c: 251: Delay_ms(20);
  2294  0376  3014               	movlw	low(014h)
  2295  0377  1283               	bcf	status, 5	;RP0=0, select bank0
  2296  0378  1303               	bcf	status, 6	;RP2=0, select bank0
  2297                           	
  2298  0379  00E4               	movwf	(?_Delay_ms)
  2299  037A  3000               	movlw	high(014h)
  2300  037B  00E5               	movwf	((?_Delay_ms))+1
  2301  037C  23AF               	fcall	_Delay_ms
  2302                           	line	252
  2303                           ;RF_Module.c: 252: return value;
  2304  037D  1283               	bcf	status, 5	;RP0=0, select bank0
  2305  037E  1303               	bcf	status, 6	;RP2=0, select bank0
  2306                           	
  2307  037F  085D               	movf	(_CC2500_ReadReg_value),w
  2308  0380  1383               	bcf	status, 7	;select IRP bank0
  2309                           	
  2310  0381  2B82               	goto	l89
  2311                           	line	253
  2312                           ;RF_Module.c: 253: }
  2313  0382                     l89:	
  2314  0382  0008               	return
  2315                           ; =============== function _CC2500_ReadReg ends
                                  ===============
  2316                           
  2317                           GLOBAL __end_of_CC2500_ReadReg
  2318  0383                     	__end_of_CC2500_ReadReg:
  2319                           	FNSIZE	_CC2500_ReadReg,2,0
  2320                           	signat	_CC2500_ReadReg,4217
  2321                           	global	_SPI_SS_Disable
  2322                           	global	??_SPI_SS_Disable
  2323                           	global	?_SPI_SS_Disable
  2324                           
  2325                           ; *************** function _SPI_SS_Disable ****
                                 ***********
  2326                           ; Defined at:
  2327                           ;		line 61 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2328                           ; Parameters:
  2329                           ;		None
  2330                           ; Auto variables:
  2331                           ;		None
  2332                           ; Return value:
  2333                           ;		type: void 
  2334                           ;		size: 0
  2335                           ; Registers used:
  2336                           ;		None
  2337                           ; Tracked objects:
  2338                           ;		On entry : 0/0
  2339                           ;		On exit  : 0/0
  2340                           ;		Unchanged: 0/0
  2341                           ; Data sizes:
  2342                           ;		Autos:    0
  2343                           ;		Params:   0
  2344                           ;		Temp:     0
  2345                           ;		Total:    0
  2346                           ; This function calls:
  2347                           ;		Nothing
  2348                           ; This function is called by:
  2349                           ;		_RF_Module_Txchar
  2350                           ;		_RF_Module_Rxchar
  2351                           ;		_command
  2352                           ;		_CC2500_ReadReg
  2353                           ;		_CC2500_WriteReg
  2354                           ;		_CC2500_Init
  2355                           ; This function uses a non-reentrant model
  2356                           ; 
  2357                           	psect	text233,local,class=CODE,delta=2
  2358                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2359                           	line	61
  2360                           ;Spi.c: 60: void SPI_SS_Disable(void)
  2361                           ;Spi.c: 61: {
  2362                           	
  2363  04A2                     _SPI_SS_Disable:	
  2364                           ; Regs used in _SPI_SS_Disable: []
  2365                           	line	62
  2366                           ;Spi.c: 62: PORTA |= (0x08);
  2367  04A2  1283               	bcf	status, 5	;RP0=0, select bank0
  2368  04A3  1303               	bcf	status, 6	;RP2=0, select bank0
  2369                           	
  2370  04A4  1585               	bsf	(5)+(3/8),(3)&7	;volatile
  2371                           	line	63
  2372                           ;Spi.c: 63: }
  2373  04A5                     l27:	
  2374  04A5  0008               	return
  2375                           ; =============== function _SPI_SS_Disable ends
                                  ===============
  2376                           
  2377                           GLOBAL __end_of_SPI_SS_Disable
  2378  04A6                     	__end_of_SPI_SS_Disable:
  2379                           	FNSIZE	_SPI_SS_Disable,0,0
  2380                           	signat	_SPI_SS_Disable,88
  2381                           	global	_SPI_SS_Enable
  2382                           	global	??_SPI_SS_Enable
  2383                           	global	?_SPI_SS_Enable
  2384                           
  2385                           ; *************** function _SPI_SS_Enable *****
                                 **********
  2386                           ; Defined at:
  2387                           ;		line 56 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2388                           ; Parameters:
  2389                           ;		None
  2390                           ; Auto variables:
  2391                           ;		None
  2392                           ; Return value:
  2393                           ;		type: void 
  2394                           ;		size: 0
  2395                           ; Registers used:
  2396                           ;		wreg, status,2, status,0
  2397                           ; Tracked objects:
  2398                           ;		On entry : 0/0
  2399                           ;		On exit  : 0/0
  2400                           ;		Unchanged: 0/0
  2401                           ; Data sizes:
  2402                           ;		Autos:    0
  2403                           ;		Params:   0
  2404                           ;		Temp:     1
  2405                           ;		Total:    1
  2406                           ; This function calls:
  2407                           ;		Nothing
  2408                           ; This function is called by:
  2409                           ;		_RF_Module_Txchar
  2410                           ;		_RF_Module_Rxchar
  2411                           ;		_command
  2412                           ;		_CC2500_ReadReg
  2413                           ;		_CC2500_WriteReg
  2414                           ;		_CC2500_Init
  2415                           ; This function uses a non-reentrant model
  2416                           ; 
  2417                           	psect	text234,local,class=CODE,delta=2
  2418                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2419                           	line	56
  2420                           ;Spi.c: 55: void SPI_SS_Enable(void)
  2421                           ;Spi.c: 56: {
  2422                           	
  2423  0490                     _SPI_SS_Enable:	
  2424                           ; Regs used in _SPI_SS_Enable: [wreg+status,2+s
                                 tatus,0]
  2425                           	line	57
  2426                           ;Spi.c: 57: PORTA &= ~(0x08);
  2427  0490  30F7               	movlw	(0F7h)
  2428  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  2429  0492  1303               	bcf	status, 6	;RP2=0, select bank0
  2430  0493  00E0               	movwf	(??_SPI_SS_Enable+0+0)
  2431                           	
  2432  0494  0860               	movf	(??_SPI_SS_Enable+0+0),w
  2433  0495  0585               	andwf	(5),f	;volatile
  2434                           	line	58
  2435                           ;Spi.c: 58: }
  2436  0496                     l26:	
  2437  0496  0008               	return
  2438                           ; =============== function _SPI_SS_Enable ends 
                                 ===============
  2439                           
  2440                           GLOBAL __end_of_SPI_SS_Enable
  2441  0497                     	__end_of_SPI_SS_Enable:
  2442                           	FNSIZE	_SPI_SS_Enable,1,0
  2443                           	signat	_SPI_SS_Enable,88
  2444                           	global	_spi_TxByte
  2445                           	global	??_spi_TxByte
  2446                           	global	?_spi_TxByte
  2447                           
  2448                           ; *************** function _spi_TxByte ********
                                 *******
  2449                           ; Defined at:
  2450                           ;		line 23 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2451                           ; Parameters:
  2452                           ;		txchar      	reg:   wr	type: unsigned char 
  2453                           ; Auto variables:
  2454                           ;		txchar      	       	type: unsigned char 
  2455                           ;		index       	       	type: unsigned char 
  2456                           ;		received_ch 	       	type: unsigned char 
  2457                           ; Return value:
  2458                           ;		type: unsigned char 
  2459                           ;		size: 1
  2460                           ; Registers used:
  2461                           ;		wreg, status,2, status,0, pclath, cstack
  2462                           ; Tracked objects:
  2463                           ;		On entry : 0/0
  2464                           ;		On exit  : 0/0
  2465                           ;		Unchanged: 0/0
  2466                           ; Data sizes:
  2467                           ;		Autos:    3
  2468                           ;		Params:   0
  2469                           ;		Temp:     1
  2470                           ;		Total:    4
  2471                           ; This function calls:
  2472                           ;		_SPI_MOSI_SETHIGH
  2473                           ;		_SPI_MOSI_SETLOW
  2474                           ;		_SPI_SCK_SETHIGH
  2475                           ;		_SPI_MISO_READ
  2476                           ;		_Delay_ms
  2477                           ;		_SPI_SCK_SETLOW
  2478                           ; This function is called by:
  2479                           ;		_RF_Module_Txchar
  2480                           ;		_RF_Module_Rxchar
  2481                           ;		_command
  2482                           ;		_CC2500_ReadReg
  2483                           ;		_CC2500_WriteReg
  2484                           ;		_CC2500_Init
  2485                           ; This function uses a non-reentrant model
  2486                           ; 
  2487                           	psect	text235,local,class=CODE,delta=2
  2488                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2489                           	line	23
  2490                           ;Spi.c: 22: unsigned char spi_TxByte(unsigned c
                                 har txchar)
  2491                           ;Spi.c: 23: {
  2492                           	
  2493  025A                     _spi_TxByte:	
  2494                           ; Regs used in _spi_TxByte: [wreg+status,2+stat
                                 us,0+pclath+cstack]
  2495                           ;_spi_TxByte_txchar stored from wreg
  2496                           	line	25
  2497  025A  1283               	bcf	status, 5	;RP0=0, select bank0
  2498  025B  1303               	bcf	status, 6	;RP2=0, select bank0
  2499                           	
  2500  025C  00E0               	movwf	(_spi_TxByte_txchar)
  2501                           ;Spi.c: 25: unsigned char received_ch=0,index;
  2502  025D  1003               	clrc
  2503                           	
  2504  025E  3000               	movlw	0
  2505  025F  1803               	btfsc	status,0
  2506  0260  3001               	movlw	1
  2507  0261  00E2               	movwf	(_spi_TxByte_received_ch)
  2508                           	line	26
  2509                           ;Spi.c: 26: for(index=0; index <8;index++)
  2510  0262  1003               	clrc
  2511                           	
  2512  0263  3000               	movlw	0
  2513  0264  1803               	btfsc	status,0
  2514  0265  3001               	movlw	1
  2515  0266  00E1               	movwf	(_spi_TxByte_index)
  2516  0267  2A68               	goto	l20
  2517                           	line	27
  2518                           	
  2519  0268                     l20:	
  2520                           	line	28
  2521                           ;Spi.c: 27: {
  2522                           ;Spi.c: 28: if(txchar & 0x80)
  2523                           	
  2524  0268  1FE0               	btfss	(_spi_TxByte_txchar),(7)&7
  2525  0269  2A6B               	goto	u1971
  2526  026A  2A6C               	goto	u1970
  2527  026B                     u1971:
  2528  026B  2A6E               	goto	l23
  2529  026C                     u1970:
  2530                           	line	30
  2531                           ;Spi.c: 29: {
  2532                           ;Spi.c: 30: SPI_MOSI_SETHIGH();
  2533  026C  24AA               	fcall	_SPI_MOSI_SETHIGH
  2534                           	line	31
  2535                           ;Spi.c: 31: }
  2536  026D  2A6F               	goto	l24
  2537                           	line	32
  2538                           	
  2539  026E                     l23:	
  2540                           	line	34
  2541                           ;Spi.c: 32: else
  2542                           ;Spi.c: 33: {
  2543                           ;Spi.c: 34: SPI_MOSI_SETLOW();
  2544  026E  249D               	fcall	_SPI_MOSI_SETLOW
  2545                           	line	35
  2546                           	
  2547  026F                     l24:	
  2548                           	line	37
  2549                           ;Spi.c: 35: }
  2550                           ;Spi.c: 37: SPI_SCK_SETHIGH();
  2551  026F  24A6               	fcall	_SPI_SCK_SETHIGH
  2552                           	line	39
  2553                           ;Spi.c: 39: received_ch <<=1;
  2554  0270  1283               	bcf	status, 5	;RP0=0, select bank0
  2555  0271  1303               	bcf	status, 6	;RP2=0, select bank0
  2556                           	
  2557  0272  1003               	clrc
  2558  0273  0DE2               	rlf	(_spi_TxByte_received_ch),f
  2559                           
  2560                           	line	40
  2561                           ;Spi.c: 40: if (SPI_MISO_READ())
  2562  0274  2497               	fcall	_SPI_MISO_READ
  2563  0275  3A00               	xorlw	0
  2564  0276  1903               	skipnz
  2565  0277  2A79               	goto	u1981
  2566  0278  2A7A               	goto	u1980
  2567  0279                     u1981:
  2568  0279  2A7D               	goto	l25
  2569  027A                     u1980:
  2570                           	line	42
  2571                           ;Spi.c: 41: {
  2572                           ;Spi.c: 42: received_ch |=0x01;
  2573  027A  1283               	bcf	status, 5	;RP0=0, select bank0
  2574  027B  1303               	bcf	status, 6	;RP2=0, select bank0
  2575                           	
  2576  027C  1462               	bsf	(_spi_TxByte_received_ch)+(0/8),(0)&7
  2577                           	line	43
  2578                           	
  2579  027D                     l25:	
  2580                           	line	44
  2581                           ;Spi.c: 43: }
  2582                           ;Spi.c: 44: txchar <<=1;
  2583  027D  1283               	bcf	status, 5	;RP0=0, select bank0
  2584  027E  1303               	bcf	status, 6	;RP2=0, select bank0
  2585                           	
  2586  027F  1003               	clrc
  2587  0280  0DE0               	rlf	(_spi_TxByte_txchar),f
  2588                           
  2589                           	line	46
  2590                           ;Spi.c: 46: Delay_ms(5);
  2591  0281  3005               	movlw	low(05h)
  2592                           	
  2593  0282  00E4               	movwf	(?_Delay_ms)
  2594  0283  3000               	movlw	high(05h)
  2595  0284  00E5               	movwf	((?_Delay_ms))+1
  2596  0285  23AF               	fcall	_Delay_ms
  2597                           	line	47
  2598                           ;Spi.c: 47: SPI_SCK_SETLOW();
  2599  0286  2489               	fcall	_SPI_SCK_SETLOW
  2600                           	line	48
  2601                           ;Spi.c: 48: Delay_ms(5);
  2602  0287  3005               	movlw	low(05h)
  2603  0288  1283               	bcf	status, 5	;RP0=0, select bank0
  2604  0289  1303               	bcf	status, 6	;RP2=0, select bank0
  2605                           	
  2606  028A  00E4               	movwf	(?_Delay_ms)
  2607  028B  3000               	movlw	high(05h)
  2608  028C  00E5               	movwf	((?_Delay_ms))+1
  2609  028D  23AF               	fcall	_Delay_ms
  2610                           	line	26
  2611  028E  3001               	movlw	(01h)
  2612  028F  1283               	bcf	status, 5	;RP0=0, select bank0
  2613  0290  1303               	bcf	status, 6	;RP2=0, select bank0
  2614  0291  00E3               	movwf	(??_spi_TxByte+3+0)
  2615                           	
  2616  0292  0863               	movf	(??_spi_TxByte+3+0),w
  2617  0293  07E1               	addwf	(_spi_TxByte_index),f
  2618  0294  3008               	movlw	(08h)
  2619                           	
  2620  0295  0261               	subwf	(_spi_TxByte_index),w
  2621  0296  1C03               	skipc
  2622  0297  2A99               	goto	u1991
  2623  0298  2A9A               	goto	u1990
  2624  0299                     u1991:
  2625  0299  2A68               	goto	l20
  2626  029A                     u1990:
  2627                           	
  2628  029A                     l21:	
  2629                           	line	50
  2630                           ;Spi.c: 49: }
  2631                           ;Spi.c: 50: return received_ch;
  2632                           	
  2633  029A  0862               	movf	(_spi_TxByte_received_ch),w
  2634  029B  1383               	bcf	status, 7	;select IRP bank0
  2635                           	
  2636  029C  2A9D               	goto	l19
  2637                           	line	51
  2638                           ;Spi.c: 51: }
  2639  029D                     l19:	
  2640  029D  0008               	return
  2641                           ; =============== function _spi_TxByte ends ===
                                 ============
  2642                           
  2643                           GLOBAL __end_of_spi_TxByte
  2644  029E                     	__end_of_spi_TxByte:
  2645                           	FNSIZE	_spi_TxByte,4,0
  2646                           	signat	_spi_TxByte,4217
  2647                           	global	_SPI_MOSI_SETHIGH
  2648                           	global	??_SPI_MOSI_SETHIGH
  2649                           	global	?_SPI_MOSI_SETHIGH
  2650                           
  2651                           ; *************** function _SPI_MOSI_SETHIGH **
                                 *************
  2652                           ; Defined at:
  2653                           ;		line 75 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2654                           ; Parameters:
  2655                           ;		None
  2656                           ; Auto variables:
  2657                           ;		None
  2658                           ; Return value:
  2659                           ;		type: void 
  2660                           ;		size: 0
  2661                           ; Registers used:
  2662                           ;		None
  2663                           ; Tracked objects:
  2664                           ;		On entry : 300/0
  2665                           ;		On exit  : 0/0
  2666                           ;		Unchanged: 0/0
  2667                           ; Data sizes:
  2668                           ;		Autos:    0
  2669                           ;		Params:   0
  2670                           ;		Temp:     0
  2671                           ;		Total:    0
  2672                           ; This function calls:
  2673                           ;		Nothing
  2674                           ; This function is called by:
  2675                           ;		_spi_TxByte
  2676                           ; This function uses a non-reentrant model
  2677                           ; 
  2678                           	psect	text236,local,class=CODE,delta=2
  2679                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2680                           	line	75
  2681                           ;Spi.c: 74: void SPI_MOSI_SETHIGH(void)
  2682                           ;Spi.c: 75: {
  2683                           	
  2684  04AA                     _SPI_MOSI_SETHIGH:	
  2685                           ; Regs used in _SPI_MOSI_SETHIGH: []
  2686                           	line	76
  2687                           ;Spi.c: 76: PORTA |= 0x01;
  2688                           	
  2689  04AA  1405               	bsf	(5)+(0/8),(0)&7	;volatile
  2690                           	line	77
  2691                           ;Spi.c: 77: }
  2692  04AB                     l36:	
  2693  04AB  0008               	return
  2694                           ; =============== function _SPI_MOSI_SETHIGH en
                                 ds ===============
  2695                           
  2696                           GLOBAL __end_of_SPI_MOSI_SETHIGH
  2697  04AC                     	__end_of_SPI_MOSI_SETHIGH:
  2698                           	FNSIZE	_SPI_MOSI_SETHIGH,0,0
  2699                           	signat	_SPI_MOSI_SETHIGH,88
  2700                           	global	_SPI_MISO_READ
  2701                           	global	??_SPI_MISO_READ
  2702                           	global	?_SPI_MISO_READ
  2703                           
  2704                           ; *************** function _SPI_MISO_READ *****
                                 **********
  2705                           ; Defined at:
  2706                           ;		line 92 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2707                           ; Parameters:
  2708                           ;		None
  2709                           ; Auto variables:
  2710                           ;		None
  2711                           ; Return value:
  2712                           ;		type: unsigned char 
  2713                           ;		size: 1
  2714                           ; Registers used:
  2715                           ;		wreg
  2716                           ; Tracked objects:
  2717                           ;		On entry : 0/0
  2718                           ;		On exit  : 0/0
  2719                           ;		Unchanged: 0/0
  2720                           ; Data sizes:
  2721                           ;		Autos:    0
  2722                           ;		Params:   0
  2723                           ;		Temp:     0
  2724                           ;		Total:    0
  2725                           ; This function calls:
  2726                           ;		Nothing
  2727                           ; This function is called by:
  2728                           ;		_spi_TxByte
  2729                           ;		_RF_Module_Txchar
  2730                           ;		_RF_Module_Rxchar
  2731                           ;		_command
  2732                           ;		_CC2500_ReadReg
  2733                           ;		_CC2500_WriteReg
  2734                           ;		_CC2500_Init
  2735                           ; This function uses a non-reentrant model
  2736                           ; 
  2737                           	psect	text237,local,class=CODE,delta=2
  2738                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2739                           	line	92
  2740                           ;Spi.c: 91: unsigned char SPI_MISO_READ(void)
  2741                           ;Spi.c: 92: {
  2742                           	
  2743  0497                     _SPI_MISO_READ:	
  2744                           ; Regs used in _SPI_MISO_READ: [wreg]
  2745                           	line	93
  2746                           ;Spi.c: 93: return (PORTA & 0x02);
  2747  0497  1283               	bcf	status, 5	;RP0=0, select bank0
  2748  0498  1303               	bcf	status, 6	;RP2=0, select bank0
  2749                           	
  2750  0499  0805               	movf	(5),w	;volatile
  2751                           	
  2752  049A  3902               	andlw	02h
  2753  049B  2C9C               	goto	l40
  2754                           	line	94
  2755                           ;Spi.c: 94: }
  2756  049C                     l40:	
  2757  049C  0008               	return
  2758                           ; =============== function _SPI_MISO_READ ends 
                                 ===============
  2759                           
  2760                           GLOBAL __end_of_SPI_MISO_READ
  2761  049D                     	__end_of_SPI_MISO_READ:
  2762                           	FNSIZE	_SPI_MISO_READ,0,0
  2763                           	signat	_SPI_MISO_READ,89
  2764                           	global	_Delay_ms
  2765                           	global	??_Delay_ms
  2766                           	global	?_Delay_ms
  2767                           
  2768                           ; *************** function _Delay_ms **********
                                 *****
  2769                           ; Defined at:
  2770                           ;		line 66 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2771                           ; Parameters:
  2772                           ;		delayms     	offs:   0	type: unsigned int 
  2773                           ; Auto variables:
  2774                           ;		y           	       	type: unsigned int 
  2775                           ;		x           	       	type: unsigned int 
  2776                           ; Return value:
  2777                           ;		type: void 
  2778                           ;		size: 0
  2779                           ; Registers used:
  2780                           ;		wreg
  2781                           ; Tracked objects:
  2782                           ;		On entry : 300/0
  2783                           ;		On exit  : 0/0
  2784                           ;		Unchanged: 0/0
  2785                           ; Data sizes:
  2786                           ;		Autos:    4
  2787                           ;		Params:   2
  2788                           ;		Temp:     0
  2789                           ;		Total:    6
  2790                           ; This function calls:
  2791                           ;		Nothing
  2792                           ; This function is called by:
  2793                           ;		_spi_TxByte
  2794                           ;		_CC2500_ReadReg
  2795                           ;		_CC2500_WriteReg
  2796                           ;		_CC2500_SetRxd
  2797                           ; This function uses a non-reentrant model
  2798                           ; 
  2799                           	psect	text238,local,class=CODE,delta=2
  2800                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2801                           	line	66
  2802                           ;Spi.c: 65: void Delay_ms(unsigned int delayms)
  2803                           ;Spi.c: 66: {
  2804                           	
  2805  03AF                     _Delay_ms:	
  2806                           ; Regs used in _Delay_ms: [wreg]
  2807                           	line	68
  2808                           ;Spi.c: 67: unsigned int x,y;
  2809                           ;Spi.c: 68: for(y=0;y<delayms;y++)
  2810  03AF  3000               	movlw	low(0)
  2811                           	
  2812  03B0  00E8               	movwf	(_Delay_ms_y)
  2813  03B1  3000               	movlw	high(0)
  2814  03B2  00E9               	movwf	((_Delay_ms_y))+1
  2815  03B3  2BCF               	goto	l32
  2816                           	line	69
  2817                           	
  2818  03B4                     l29:	
  2819                           	line	70
  2820                           ;Spi.c: 69: {
  2821                           ;Spi.c: 70: for (x=0;x < 100; x++);
  2822  03B4  3000               	movlw	low(0)
  2823                           	
  2824  03B5  00E6               	movwf	(_Delay_ms_x)
  2825  03B6  3000               	movlw	high(0)
  2826  03B7  00E7               	movwf	((_Delay_ms_x))+1
  2827  03B8  2BB9               	goto	l33
  2828                           	
  2829  03B9                     l33:	
  2830                           	
  2831  03B9  3001               	movlw	low(01h)
  2832  03BA  07E6               	addwf	(_Delay_ms_x),f
  2833  03BB  1803               	skipnc
  2834  03BC  0AE7               	incf	(_Delay_ms_x+1),f
  2835  03BD  3000               	movlw	high(01h)
  2836  03BE  07E7               	addwf	(_Delay_ms_x+1),f
  2837                           	
  2838  03BF  3000               	movlw	high(064h)
  2839  03C0  0267               	subwf	(_Delay_ms_x+1),w
  2840  03C1  1D03               	skipz
  2841  03C2  2BC5               	goto	u2015
  2842  03C3  3064               	movlw	low(064h)
  2843  03C4  0266               	subwf	(_Delay_ms_x),w
  2844  03C5                     u2015:
  2845  03C5  1C03               	skipc
  2846  03C6  2BC8               	goto	u2011
  2847  03C7  2BC9               	goto	u2010
  2848  03C8                     u2011:
  2849  03C8  2BB9               	goto	l33
  2850  03C9                     u2010:
  2851                           	
  2852  03C9                     l34:	
  2853                           	line	68
  2854                           	
  2855  03C9  3001               	movlw	low(01h)
  2856  03CA  07E8               	addwf	(_Delay_ms_y),f
  2857  03CB  1803               	skipnc
  2858  03CC  0AE9               	incf	(_Delay_ms_y+1),f
  2859  03CD  3000               	movlw	high(01h)
  2860  03CE  07E9               	addwf	(_Delay_ms_y+1),f
  2861                           	
  2862  03CF                     l32:	
  2863                           	
  2864                           	
  2865  03CF  0865               	movf	(_Delay_ms_delayms+1),w
  2866  03D0  0269               	subwf	(_Delay_ms_y+1),w
  2867  03D1  1D03               	skipz
  2868  03D2  2BD5               	goto	u2025
  2869  03D3  0864               	movf	(_Delay_ms_delayms),w
  2870  03D4  0268               	subwf	(_Delay_ms_y),w
  2871  03D5                     u2025:
  2872  03D5  1C03               	skipc
  2873  03D6  2BD8               	goto	u2021
  2874  03D7  2BD9               	goto	u2020
  2875  03D8                     u2021:
  2876  03D8  2BB4               	goto	l29
  2877  03D9                     u2020:
  2878                           	
  2879  03D9                     l30:	
  2880                           	line	72
  2881                           ;Spi.c: 71: }
  2882                           ;Spi.c: 72: }
  2883  03D9                     l28:	
  2884  03D9  0008               	return
  2885                           ; =============== function _Delay_ms ends =====
                                 ==========
  2886                           
  2887                           GLOBAL __end_of_Delay_ms
  2888  03DA                     	__end_of_Delay_ms:
  2889                           	FNSIZE	_Delay_ms,4,2
  2890                           	signat	_Delay_ms,4216
  2891                           	global	_SPI_SCK_SETLOW
  2892                           	global	??_SPI_SCK_SETLOW
  2893                           	global	?_SPI_SCK_SETLOW
  2894                           
  2895                           ; *************** function _SPI_SCK_SETLOW ****
                                 ***********
  2896                           ; Defined at:
  2897                           ;		line 83 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2898                           ; Parameters:
  2899                           ;		None
  2900                           ; Auto variables:
  2901                           ;		None
  2902                           ; Return value:
  2903                           ;		type: void 
  2904                           ;		size: 0
  2905                           ; Registers used:
  2906                           ;		wreg, status,2, status,0
  2907                           ; Tracked objects:
  2908                           ;		On entry : 0/0
  2909                           ;		On exit  : 0/0
  2910                           ;		Unchanged: 0/0
  2911                           ; Data sizes:
  2912                           ;		Autos:    0
  2913                           ;		Params:   0
  2914                           ;		Temp:     1
  2915                           ;		Total:    1
  2916                           ; This function calls:
  2917                           ;		Nothing
  2918                           ; This function is called by:
  2919                           ;		_spi_TxByte
  2920                           ; This function uses a non-reentrant model
  2921                           ; 
  2922                           	psect	text239,local,class=CODE,delta=2
  2923                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2924                           	line	83
  2925                           ;Spi.c: 82: void SPI_SCK_SETLOW(void)
  2926                           ;Spi.c: 83: {
  2927                           	
  2928  0489                     _SPI_SCK_SETLOW:	
  2929                           ; Regs used in _SPI_SCK_SETLOW: [wreg+status,2+
                                 status,0]
  2930                           	line	84
  2931                           ;Spi.c: 84: PORTA &= ~0x04;
  2932  0489  30FB               	movlw	(0FBh)
  2933  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  2934  048B  1303               	bcf	status, 6	;RP2=0, select bank0
  2935  048C  00E4               	movwf	(??_SPI_SCK_SETLOW+0+0)
  2936                           	
  2937  048D  0864               	movf	(??_SPI_SCK_SETLOW+0+0),w
  2938  048E  0585               	andwf	(5),f	;volatile
  2939                           	line	85
  2940                           ;Spi.c: 85: }
  2941  048F                     l38:	
  2942  048F  0008               	return
  2943                           ; =============== function _SPI_SCK_SETLOW ends
                                  ===============
  2944                           
  2945                           GLOBAL __end_of_SPI_SCK_SETLOW
  2946  0490                     	__end_of_SPI_SCK_SETLOW:
  2947                           	FNSIZE	_SPI_SCK_SETLOW,1,0
  2948                           	signat	_SPI_SCK_SETLOW,88
  2949                           	global	_SPI_SCK_SETHIGH
  2950                           	global	??_SPI_SCK_SETHIGH
  2951                           	global	?_SPI_SCK_SETHIGH
  2952                           
  2953                           ; *************** function _SPI_SCK_SETHIGH ***
                                 ************
  2954                           ; Defined at:
  2955                           ;		line 87 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  2956                           ; Parameters:
  2957                           ;		None
  2958                           ; Auto variables:
  2959                           ;		None
  2960                           ; Return value:
  2961                           ;		type: void 
  2962                           ;		size: 0
  2963                           ; Registers used:
  2964                           ;		None
  2965                           ; Tracked objects:
  2966                           ;		On entry : 0/0
  2967                           ;		On exit  : 0/0
  2968                           ;		Unchanged: 0/0
  2969                           ; Data sizes:
  2970                           ;		Autos:    0
  2971                           ;		Params:   0
  2972                           ;		Temp:     0
  2973                           ;		Total:    0
  2974                           ; This function calls:
  2975                           ;		Nothing
  2976                           ; This function is called by:
  2977                           ;		_spi_TxByte
  2978                           ; This function uses a non-reentrant model
  2979                           ; 
  2980                           	psect	text240,local,class=CODE,delta=2
  2981                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  2982                           	line	87
  2983                           ;Spi.c: 86: void SPI_SCK_SETHIGH(void)
  2984                           ;Spi.c: 87: {
  2985                           	
  2986  04A6                     _SPI_SCK_SETHIGH:	
  2987                           ; Regs used in _SPI_SCK_SETHIGH: []
  2988                           	line	88
  2989                           ;Spi.c: 88: PORTA |= 0x04;
  2990  04A6  1283               	bcf	status, 5	;RP0=0, select bank0
  2991  04A7  1303               	bcf	status, 6	;RP2=0, select bank0
  2992                           	
  2993  04A8  1505               	bsf	(5)+(2/8),(2)&7	;volatile
  2994                           	line	89
  2995                           ;Spi.c: 89: }
  2996  04A9                     l39:	
  2997  04A9  0008               	return
  2998                           ; =============== function _SPI_SCK_SETHIGH end
                                 s ===============
  2999                           
  3000                           GLOBAL __end_of_SPI_SCK_SETHIGH
  3001  04AA                     	__end_of_SPI_SCK_SETHIGH:
  3002                           	FNSIZE	_SPI_SCK_SETHIGH,0,0
  3003                           	signat	_SPI_SCK_SETHIGH,88
  3004                           	global	_SPI_MOSI_SETLOW
  3005                           	global	??_SPI_MOSI_SETLOW
  3006                           	global	?_SPI_MOSI_SETLOW
  3007                           
  3008                           ; *************** function _SPI_MOSI_SETLOW ***
                                 ************
  3009                           ; Defined at:
  3010                           ;		line 79 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\PICCC2500_11Nov2014\Spi
                                 .c"
  3011                           ; Parameters:
  3012                           ;		None
  3013                           ; Auto variables:
  3014                           ;		None
  3015                           ; Return value:
  3016                           ;		type: void 
  3017                           ;		size: 0
  3018                           ; Registers used:
  3019                           ;		wreg, status,2, status,0
  3020                           ; Tracked objects:
  3021                           ;		On entry : 300/0
  3022                           ;		On exit  : 0/0
  3023                           ;		Unchanged: 0/0
  3024                           ; Data sizes:
  3025                           ;		Autos:    0
  3026                           ;		Params:   0
  3027                           ;		Temp:     1
  3028                           ;		Total:    1
  3029                           ; This function calls:
  3030                           ;		Nothing
  3031                           ; This function is called by:
  3032                           ;		_spi_TxByte
  3033                           ; This function uses a non-reentrant model
  3034                           ; 
  3035                           	psect	text241,local,class=CODE,delta=2
  3036                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\Spi.c"
  3037                           	line	79
  3038                           ;Spi.c: 78: void SPI_MOSI_SETLOW(void)
  3039                           ;Spi.c: 79: {
  3040                           	
  3041  049D                     _SPI_MOSI_SETLOW:	
  3042                           ; Regs used in _SPI_MOSI_SETLOW: [wreg+status,2
                                 +status,0]
  3043                           	line	80
  3044                           ;Spi.c: 80: PORTA &= ~0x01;
  3045  049D  30FE               	movlw	(0FEh)
  3046  049E  00E4               	movwf	(??_SPI_MOSI_SETLOW+0+0)
  3047                           	
  3048  049F  0864               	movf	(??_SPI_MOSI_SETLOW+0+0),w
  3049  04A0  0585               	andwf	(5),f	;volatile
  3050                           	line	81
  3051                           ;Spi.c: 81: }
  3052  04A1                     l37:	
  3053  04A1  0008               	return
  3054                           ; =============== function _SPI_MOSI_SETLOW end
                                 s ===============
  3055                           
  3056                           GLOBAL __end_of_SPI_MOSI_SETLOW
  3057  04A2                     	__end_of_SPI_MOSI_SETLOW:
  3058                           	FNSIZE	_SPI_MOSI_SETLOW,1,0
  3059                           	signat	_SPI_MOSI_SETLOW,88
  3060                           	global	_isr
  3061                           	global	??_isr
  3062                           	global	?_isr
  3063                           
  3064                           ; *************** function _isr ***************
  3065                           ; Defined at:
  3066                           ;		line 25 in file "C:\Documents and Settings\J
                                 ayamma\My Documents\PIC\test\Timerc.c"
  3067                           ; Parameters:
  3068                           ;		None
  3069                           ; Auto variables:
  3070                           ;		None
  3071                           ; Return value:
  3072                           ;		type: void 
  3073                           ;		size: 0
  3074                           ; Registers used:
  3075                           ;		wreg
  3076                           ; Tracked objects:
  3077                           ;		On entry : 300/0
  3078                           ;		On exit  : 0/0
  3079                           ;		Unchanged: 0/0
  3080                           ; Data sizes:
  3081                           ;		Autos:    0
  3082                           ;		Params:   0
  3083                           ;		Temp:     4
  3084                           ;		Total:    4
  3085                           ; This function calls:
  3086                           ;		Nothing
  3087                           ; This function is called by:
  3088                           ;		Interrupt level 1
  3089                           ; This function uses a non-reentrant model
  3090                           ; 
  3091                           	psect	intrtext,class=CODE,delta=2
  3092                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\test\Timerc.c"
  3093                           	line	25
  3094                           ;Timerc.c: 23: static void interrupt isr(void)
  3095                           ;Timerc.c: 25: {
  3096                           	
  3097  041D                     _isr:	
  3098                           ; Regs used in _isr: [wreg]
  3099                           	psect	intentry,class=CODE,delta=2
  3100                           global interrupt_function
  3101  0004                     interrupt_function:
  3102                           	global saved_w
  3103  0000                     	saved_w	set	btemp+1
  3104  0004  00FF               	movwf	saved_w
  3105  0005  0803               	movf	status,w
  3106  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  3107  0007  1303               	bcf	status, 6	;RP2=0, select bank0
  3108  0008  00EA               	movwf	(??_isr+0)
  3109  0009  0804               	movf	fsr,w
  3110  000A  00EB               	movwf	(??_isr+1)
  3111  000B  080A               	movf	pclath,w
  3112  000C  00EC               	movwf	(??_isr+2)
  3113  000D  087E               	movf	btemp+0,w
  3114  000E  00ED               	movwf	(??_isr+3)
  3115  000F  2C1D               	ljmp	_isr
  3116                           	psect	intrtext
  3117                           	line	27
  3118                           ;Timerc.c: 27: if (TMR1IF)
  3119  041D  1C0C               	btfss	(96/8),(96)&7
  3120  041E  2C20               	goto	i1u1381
  3121  041F  2C21               	goto	i1u1380
  3122  0420                     i1u1381:
  3123  0420  2C27               	goto	i1l12
  3124  0421                     i1u1380:
  3125                           	line	30
  3126                           ;Timerc.c: 29: {
  3127                           ;Timerc.c: 30: Ref1ms_counter++;
  3128                           	
  3129  0421  3001               	movlw	low(01h)
  3130  0422  07FB               	addwf	(123),f	;volatile
  3131  0423  1803               	skipnc
  3132  0424  0AFC               	incf	(123+1),f	;volatile
  3133  0425  3000               	movlw	high(01h)
  3134  0426  07FC               	addwf	(123+1),f	;volatile
  3135                           	line	31
  3136                           	
  3137  0427                     i1l12:	
  3138                           	line	32
  3139                           ;Timerc.c: 31: }
  3140                           ;Timerc.c: 32: TMR1H = 0xFC;
  3141  0427  30FC               	movlw	(0FCh)
  3142                           	
  3143  0428  008F               	movwf	(15)	;volatile
  3144                           	line	33
  3145                           ;Timerc.c: 33: TMR1L =0x17;
  3146  0429  3017               	movlw	(017h)
  3147                           	
  3148  042A  008E               	movwf	(14)	;volatile
  3149                           	line	34
  3150                           ;Timerc.c: 34: TMR1IF=0;
  3151  042B  100C               	bcf	(96/8),(96)&7
  3152                           	line	36
  3153                           ;Timerc.c: 36: }
  3154  042C                     i1l11:	
  3155  042C  086D               	movf	(??_isr+3),w
  3156  042D  00FE               	movwf	btemp+0
  3157  042E  086C               	movf	(??_isr+2),w
  3158  042F  008A               	movwf	pclath
  3159  0430  086B               	movf	(??_isr+1),w
  3160  0431  0084               	movwf	fsr
  3161  0432  086A               	movf	(??_isr+0),w
  3162  0433  0083               	movwf	status
  3163  0434  0EFF               	swapf	saved_w,f
  3164  0435  0E7F               	swapf	saved_w,w
  3165  0436  0009               	retfie
  3166                           ; =============== function _isr ends ==========
                                 =====
  3167                           
  3168                           GLOBAL __end_of_isr
  3169  0437                     	__end_of_isr:
  3170                           	FNSIZE	_isr,4,0
  3171                           	signat	_isr,88
  3172                           	FNCALL	_main,_init_DigIO
  3173                           	FNCALL	_main,_init_timer
  3174                           	FNCALL	_main,_init_SWTimer
  3175                           	FNCALL	_main,_init_spi
  3176                           	FNCALL	_main,_CC2500_Init
  3177                           	FNCALL	_main,_Start_Timer
  3178                           	FNCALL	_main,_GetTimer_State
  3179                           	FNCALL	_main,_RF_Module_Rxchar
  3180                           	FNCALL	_main,_TX_LED_Toggle
  3181                           	FNCALL	_CC2500_Init,_RF_Module_init
  3182                           	FNCALL	_CC2500_Init,_SPI_SS_Enable
  3183                           	FNCALL	_CC2500_Init,_SPI_MISO_READ
  3184                           	FNCALL	_CC2500_Init,_spi_TxByte
  3185                           	FNCALL	_CC2500_Init,_SPI_SS_Disable
  3186                           	FNCALL	_RF_Module_Rxchar,_command
  3187                           	FNCALL	_RF_Module_Rxchar,_CC2500_ReadReg
  3188                           	FNCALL	_RF_Module_Rxchar,_SPI_SS_Enable
  3189                           	FNCALL	_RF_Module_Rxchar,_SPI_MISO_READ
  3190                           	FNCALL	_RF_Module_Rxchar,_spi_TxByte
  3191                           	FNCALL	_RF_Module_Rxchar,_SPI_SS_Disable
  3192                           	FNCALL	_RF_Module_Rxchar,_read_switchs
  3193                           	FNCALL	_RF_Module_Rxchar,_TX_LED_Toggle
  3194                           	FNCALL	_RF_Module_Rxchar,_RF_Module_Txchar
  3195                           	FNCALL	_RF_Module_init,_CC2500_WriteReg
  3196                           	FNCALL	_RF_Module_init,_command
  3197                           	FNCALL	_RF_Module_Txchar,_command
  3198                           	FNCALL	_RF_Module_Txchar,_SPI_SS_Enable
  3199                           	FNCALL	_RF_Module_Txchar,_SPI_MISO_READ
  3200                           	FNCALL	_RF_Module_Txchar,_spi_TxByte
  3201                           	FNCALL	_RF_Module_Txchar,_SPI_SS_Disable
  3202                           	FNCALL	_CC2500_WriteReg,_Delay_ms
  3203                           	FNCALL	_CC2500_WriteReg,_SPI_SS_Enable
  3204                           	FNCALL	_CC2500_WriteReg,_SPI_MISO_READ
  3205                           	FNCALL	_CC2500_WriteReg,_spi_TxByte
  3206                           	FNCALL	_CC2500_WriteReg,_SPI_SS_Disable
  3207                           	FNCALL	_CC2500_WriteReg,_CC2500_ReadReg
  3208                           	FNCALL	_command,_SPI_SS_Enable
  3209                           	FNCALL	_command,_SPI_MISO_READ
  3210                           	FNCALL	_command,_spi_TxByte
  3211                           	FNCALL	_command,_SPI_SS_Disable
  3212                           	FNCALL	_CC2500_ReadReg,_SPI_SS_Enable
  3213                           	FNCALL	_CC2500_ReadReg,_SPI_MISO_READ
  3214                           	FNCALL	_CC2500_ReadReg,_Delay_ms
  3215                           	FNCALL	_CC2500_ReadReg,_spi_TxByte
  3216                           	FNCALL	_CC2500_ReadReg,_SPI_SS_Disable
  3217                           	FNCALL	_spi_TxByte,_SPI_MOSI_SETHIGH
  3218                           	FNCALL	_spi_TxByte,_SPI_MOSI_SETLOW
  3219                           	FNCALL	_spi_TxByte,_SPI_SCK_SETHIGH
  3220                           	FNCALL	_spi_TxByte,_SPI_MISO_READ
  3221                           	FNCALL	_spi_TxByte,_Delay_ms
  3222                           	FNCALL	_spi_TxByte,_SPI_SCK_SETLOW
  3223                           	FNROOT	_main
  3224                           	FNCALL	intlevel1,_isr
  3225                           	global	intlevel1
  3226                           	FNROOT	intlevel1
  3227                           	global	_CC_rfSettings
  3228                           	psect	rbss_1,class=BANK1,space=1
  3229                           
  3230                           	DABS	1,193,47	;_CC_rfSettings
  3231  0000                     	_CC_rfSettings	set	0xC1
  3232                           
  3233                           	psect	idata,class=CODE,delta=2,space=0
  3234                           	file	"C:\Documents and Settings\Jayamma\My Doc
                                 uments\PIC\PICCC2500_11Nov2014\RF_Module.c"
  3235                           	line	15
  3236                           
  3237                           ;initializer for _CC_rfSettings
  3238  0117  3429               	retlw	029h
  3239  0118  342E               	retlw	02Eh
  3240  0119  3406               	retlw	06h
  3241  011A  3407               	retlw	07h
  3242  011B  34D3               	retlw	0D3h
  3243  011C  3491               	retlw	091h
  3244  011D  34FF               	retlw	0FFh
  3245  011E  3404               	retlw	04h
  3246  011F  3405               	retlw	05h
  3247  0120  3400               	retlw	0
  3248  0121  3403               	retlw	03h
  3249  0122  3408               	retlw	08h
  3250  0123  3400               	retlw	0
  3251  0124  345D               	retlw	05Dh
  3252  0125  3444               	retlw	044h
  3253  0126  34EC               	retlw	0ECh
  3254  0127  3486               	retlw	086h
  3255  0128  3483               	retlw	083h
  3256  0129  3403               	retlw	03h
  3257  012A  3423               	retlw	023h
  3258  012B  343B               	retlw	03Bh
  3259  012C  3444               	retlw	044h
  3260  012D  3407               	retlw	07h
  3261  012E  3433               	retlw	033h
  3262  012F  3418               	retlw	018h
  3263  0130  3416               	retlw	016h
  3264  0131  346C               	retlw	06Ch
  3265  0132  3403               	retlw	03h
  3266  0133  3440               	retlw	040h
  3267  0134  3491               	retlw	091h
  3268  0135  3487               	retlw	087h
  3269  0136  346B               	retlw	06Bh
  3270  0137  34F8               	retlw	0F8h
  3271  0138  3456               	retlw	056h
  3272  0139  3410               	retlw	010h
  3273  013A  34A9               	retlw	0A9h
  3274  013B  340A               	retlw	0Ah
  3275  013C  3400               	retlw	0
  3276  013D  3411               	retlw	011h
  3277  013E  3441               	retlw	041h
  3278  013F  3400               	retlw	0
  3279  0140  3459               	retlw	059h
  3280  0141  347F               	retlw	07Fh
  3281  0142  343F               	retlw	03Fh
  3282  0143  3488               	retlw	088h
  3283  0144  3431               	retlw	031h
  3284  0145  340B               	retlw	0Bh
  3285                           	psect	strings,class=CODE,delta=2,reloc=256
  3286                           	global	stringdir,stringtab,__stringbase,string
                                 jmp
  3287  0100                     stringtab:
  3288  0100  00FE               	movwf	(btemp)&07Fh
  3289  0101  1FFE               	btfss	(btemp)&07Fh,7
  3290  0102  2908               	goto	stringcode
  3291  0103  1383               	bcf	status,7
  3292  0104  187E               	btfsc	btemp&7Fh,0
  3293  0105  1783               	bsf	status,7
  3294  0106  0800               	movf	indf,w
  3295  0107  0008               	return
  3296  0108                     stringcode:
  3297  0108  0804               	movf	fsr,w
  3298  0109                     stringdir:
  3299  0109  00FE               movwf btemp&07Fh
  3300  010A  3001               movlw high(stringdir)
  3301  010B  008A               movwf pclath
  3302  010C  087E               movf btemp&07Fh,w
  3303  010D                     stringjmp:
  3304  010D  0782               	addwf pc
  3305  010E                     __stringbase:
  3306  010E  3400               	retlw	0
  3307                           	global	_paTable_CC2500
  3308                           	line	8
  3309  010F                     _paTable_CC2500:
  3310  010F  34FE               	retlw	0FEh
  3311  0110  34FE               	retlw	0FEh
  3312  0111  34FE               	retlw	0FEh
  3313  0112  34FE               	retlw	0FEh
  3314  0113  34FE               	retlw	0FEh
  3315  0114  34FE               	retlw	0FEh
  3316  0115  34FE               	retlw	0FEh
  3317  0116  34FE               	retlw	0FEh
  3318                           	global	_paTable_CC2500
  3319                           	global	_bTempRxBuf
  3320                           	psect	rbss_0,class=BANK0,space=1
  3321                           
  3322                           	DABS	1,63,10	;_bTempRxBuf
  3323  0000                     	_bTempRxBuf	set	0x3F
  3324                           
  3325                           	global	_bTxBuf
  3326                           
  3327                           	DABS	1,73,10	;_bTxBuf
  3328  0000                     	_bTxBuf	set	0x49
  3329                           
  3330                           	global	_TimerStart
  3331                           
  3332                           	DABS	1,47,8	;_TimerStart
  3333  0000                     	_TimerStart	set	0x2F
  3334                           
  3335                           	global	_TimerTimeOutVal
  3336                           
  3337                           	DABS	1,55,8	;_TimerTimeOutVal
  3338  0000                     	_TimerTimeOutVal	set	0x37
  3339                           
  3340                           	global	_TimerState
  3341                           	psect	common,class=COMMON,space=1
  3342                           
  3343                           	DABS	1,117,4	;_TimerState
  3344  0000                     	_TimerState	set	0x75
  3345                           
  3346                           	global	_Ref1ms_counter
  3347                           
  3348                           	DABS	1,123,2	;_Ref1ms_counter
  3349  0000                     	_Ref1ms_counter	set	0x7B
  3350                           
  3351                           	global	_RF_Module_Rxchar_OldPacketNum
  3352                           
  3353                           	DABS	1,125,1	;_RF_Module_Rxchar_OldPacketNum
  3354  0000                     	_RF_Module_Rxchar_OldPacketNum	set	0x7D
  3355                           
  3356                           	global	_RF_Module_Rxchar_Packetcounter
  3357                           
  3358                           	DABS	1,121,1	;_RF_Module_Rxchar_Packetcounter
  3359  0000                     	_RF_Module_Rxchar_Packetcounter	set	0x79
  3360                           
  3361                           	global	_temp
  3362                           	global	_temp
  3363                           
  3364                           	DABS	1,122,1	;_temp
  3365  0000                     	_temp	set	0x7A
  3366                           
  3367                           	global	_CCP1CON
  3368                           	global	_CCP1CON
  3369  0000                     	_CCP1CON	set	0x17
  3370                           
  3371                           	global	_CCPR1H
  3372                           	global	_CCPR1H
  3373  0000                     	_CCPR1H	set	0x16
  3374                           
  3375                           	global	_CCPR1L
  3376                           	global	_CCPR1L
  3377  0000                     	_CCPR1L	set	0x15
  3378                           
  3379                           	global	_CMCON
  3380                           	global	_CMCON
  3381  0000                     	_CMCON	set	0x1F
  3382                           
  3383                           	global	_EEADR
  3384                           	global	_EEADR
  3385  0000                     	_EEADR	set	0x9B
  3386                           
  3387                           	global	_EECON1
  3388                           	global	_EECON1
  3389  0000                     	_EECON1	set	0x9C
  3390                           
  3391                           	global	_EECON2
  3392                           	global	_EECON2
  3393  0000                     	_EECON2	set	0x9D
  3394                           
  3395                           	global	_EEDATA
  3396                           	global	_EEDATA
  3397  0000                     	_EEDATA	set	0x9A
  3398                           
  3399                           	global	_FSR
  3400                           	global	_FSR
  3401  0000                     	_FSR	set	0x4
  3402                           
  3403                           	global	_INDF
  3404                           	global	_INDF
  3405  0000                     	_INDF	set	0x0
  3406                           
  3407                           	global	_INTCON
  3408                           	global	_INTCON
  3409  0000                     	_INTCON	set	0xB
  3410                           
  3411                           	global	_OPTION
  3412  0000                     	_OPTION	set	0x81
  3413                           
  3414                           	global	_PCL
  3415                           	global	_PCL
  3416  0000                     	_PCL	set	0x2
  3417                           
  3418                           	global	_PCLATH
  3419                           	global	_PCLATH
  3420  0000                     	_PCLATH	set	0xA
  3421                           
  3422                           	global	_PCON
  3423                           	global	_PCON
  3424  0000                     	_PCON	set	0x8E
  3425                           
  3426                           	global	_PIE1
  3427                           	global	_PIE1
  3428  0000                     	_PIE1	set	0x8C
  3429                           
  3430                           	global	_PIR1
  3431                           	global	_PIR1
  3432  0000                     	_PIR1	set	0xC
  3433                           
  3434                           	global	_PORTA
  3435  0000                     	_PORTA	set	0x5
  3436                           
  3437                           	global	_PORTB
  3438  0000                     	_PORTB	set	0x6
  3439                           
  3440                           	global	_PR2
  3441                           	global	_PR2
  3442  0000                     	_PR2	set	0x92
  3443                           
  3444                           	global	_RCREG
  3445                           	global	_RCREG
  3446  0000                     	_RCREG	set	0x1A
  3447                           
  3448                           	global	_RCSTA
  3449                           	global	_RCSTA
  3450  0000                     	_RCSTA	set	0x18
  3451                           
  3452                           	global	_SPBRG
  3453                           	global	_SPBRG
  3454  0000                     	_SPBRG	set	0x99
  3455                           
  3456                           	global	_STATUS
  3457                           	global	_STATUS
  3458  0000                     	_STATUS	set	0x3
  3459                           
  3460                           	global	_T1CON
  3461  0000                     	_T1CON	set	0x10
  3462                           
  3463                           	global	_T2CON
  3464                           	global	_T2CON
  3465  0000                     	_T2CON	set	0x12
  3466                           
  3467                           	global	_TMR0
  3468                           	global	_TMR0
  3469  0000                     	_TMR0	set	0x1
  3470                           
  3471                           	global	_TMR1H
  3472  0000                     	_TMR1H	set	0xF
  3473                           
  3474                           	global	_TMR1L
  3475  0000                     	_TMR1L	set	0xE
  3476                           
  3477                           	global	_TMR2
  3478                           	global	_TMR2
  3479  0000                     	_TMR2	set	0x11
  3480                           
  3481                           	global	_TRISA
  3482  0000                     	_TRISA	set	0x85
  3483                           
  3484                           	global	_TRISB
  3485  0000                     	_TRISB	set	0x86
  3486                           
  3487                           	global	_TXREG
  3488                           	global	_TXREG
  3489  0000                     	_TXREG	set	0x19
  3490                           
  3491                           	global	_TXSTA
  3492                           	global	_TXSTA
  3493  0000                     	_TXSTA	set	0x98
  3494                           
  3495                           	global	_VRCON
  3496                           	global	_VRCON
  3497  0000                     	_VRCON	set	0x9F
  3498                           
  3499                           	global	_ADEN
  3500                           	global	_ADEN
  3501  0000                     	_ADEN	set	0xC3	;byte address: 0x18
  3502                           
  3503                           	global	_BOR
  3504                           	global	_BOR
  3505  0000                     	_BOR	set	0x470	;byte address: 0x8E
  3506                           
  3507                           	global	_BRGH
  3508                           	global	_BRGH
  3509  0000                     	_BRGH	set	0x4C2	;byte address: 0x98
  3510                           
  3511                           	global	_C1INV
  3512                           	global	_C1INV
  3513  0000                     	_C1INV	set	0xFC	;byte address: 0x1F
  3514                           
  3515                           	global	_C1OUT
  3516                           	global	_C1OUT
  3517  0000                     	_C1OUT	set	0xFE	;byte address: 0x1F
  3518                           
  3519                           	global	_C2INV
  3520                           	global	_C2INV
  3521  0000                     	_C2INV	set	0xFD	;byte address: 0x1F
  3522                           
  3523                           	global	_C2OUT
  3524                           	global	_C2OUT
  3525  0000                     	_C2OUT	set	0xFF	;byte address: 0x1F
  3526                           
  3527                           	global	_CARRY
  3528                           	global	_CARRY
  3529  0000                     	_CARRY	set	0x18	;byte address: 0x3
  3530                           
  3531                           	global	_CCP1IE
  3532                           	global	_CCP1IE
  3533  0000                     	_CCP1IE	set	0x462	;byte address: 0x8C
  3534                           
  3535                           	global	_CCP1IF
  3536                           	global	_CCP1IF
  3537  0000                     	_CCP1IF	set	0x62	;byte address: 0xC
  3538                           
  3539                           	global	_CCP1M0
  3540                           	global	_CCP1M0
  3541  0000                     	_CCP1M0	set	0xB8	;byte address: 0x17
  3542                           
  3543                           	global	_CCP1M1
  3544                           	global	_CCP1M1
  3545  0000                     	_CCP1M1	set	0xB9	;byte address: 0x17
  3546                           
  3547                           	global	_CCP1M2
  3548                           	global	_CCP1M2
  3549  0000                     	_CCP1M2	set	0xBA	;byte address: 0x17
  3550                           
  3551                           	global	_CCP1M3
  3552                           	global	_CCP1M3
  3553  0000                     	_CCP1M3	set	0xBB	;byte address: 0x17
  3554                           
  3555                           	global	_CCP1X
  3556                           	global	_CCP1X
  3557  0000                     	_CCP1X	set	0xBD	;byte address: 0x17
  3558                           
  3559                           	global	_CCP1Y
  3560                           	global	_CCP1Y
  3561  0000                     	_CCP1Y	set	0xBC	;byte address: 0x17
  3562                           
  3563                           	global	_CIS
  3564                           	global	_CIS
  3565  0000                     	_CIS	set	0xFB	;byte address: 0x1F
  3566                           
  3567                           	global	_CM0
  3568                           	global	_CM0
  3569  0000                     	_CM0	set	0xF8	;byte address: 0x1F
  3570                           
  3571                           	global	_CM1
  3572                           	global	_CM1
  3573  0000                     	_CM1	set	0xF9	;byte address: 0x1F
  3574                           
  3575                           	global	_CM2
  3576                           	global	_CM2
  3577  0000                     	_CM2	set	0xFA	;byte address: 0x1F
  3578                           
  3579                           	global	_CMIE
  3580                           	global	_CMIE
  3581  0000                     	_CMIE	set	0x466	;byte address: 0x8C
  3582                           
  3583                           	global	_CMIF
  3584                           	global	_CMIF
  3585  0000                     	_CMIF	set	0x66	;byte address: 0xC
  3586                           
  3587                           	global	_CREN
  3588                           	global	_CREN
  3589  0000                     	_CREN	set	0xC4	;byte address: 0x18
  3590                           
  3591                           	global	_CSRC
  3592                           	global	_CSRC
  3593  0000                     	_CSRC	set	0x4C7	;byte address: 0x98
  3594                           
  3595                           	global	_DC
  3596                           	global	_DC
  3597  0000                     	_DC	set	0x19	;byte address: 0x3
  3598                           
  3599                           	global	_EEIE
  3600                           	global	_EEIE
  3601  0000                     	_EEIE	set	0x467	;byte address: 0x8C
  3602                           
  3603                           	global	_EEIF
  3604                           	global	_EEIF
  3605  0000                     	_EEIF	set	0x67	;byte address: 0xC
  3606                           
  3607                           	global	_FERR
  3608                           	global	_FERR
  3609  0000                     	_FERR	set	0xC2	;byte address: 0x18
  3610                           
  3611                           	global	_GIE
  3612  0000                     	_GIE	set	0x5F	;byte address: 0xB
  3613                           
  3614                           	global	_INTE
  3615                           	global	_INTE
  3616  0000                     	_INTE	set	0x5C	;byte address: 0xB
  3617                           
  3618                           	global	_INTEDG
  3619                           	global	_INTEDG
  3620  0000                     	_INTEDG	set	0x40E	;byte address: 0x81
  3621                           
  3622                           	global	_INTF
  3623                           	global	_INTF
  3624  0000                     	_INTF	set	0x59	;byte address: 0xB
  3625                           
  3626                           	global	_IRP
  3627                           	global	_IRP
  3628  0000                     	_IRP	set	0x1F	;byte address: 0x3
  3629                           
  3630                           	global	_OERR
  3631                           	global	_OERR
  3632  0000                     	_OERR	set	0xC1	;byte address: 0x18
  3633                           
  3634                           	global	_OSCF
  3635                           	global	_OSCF
  3636  0000                     	_OSCF	set	0x473	;byte address: 0x8E
  3637                           
  3638                           	global	_PD
  3639                           	global	_PD
  3640  0000                     	_PD	set	0x1B	;byte address: 0x3
  3641                           
  3642                           	global	_PEIE
  3643  0000                     	_PEIE	set	0x5E	;byte address: 0xB
  3644                           
  3645                           	global	_POR
  3646                           	global	_POR
  3647  0000                     	_POR	set	0x471	;byte address: 0x8E
  3648                           
  3649                           	global	_PS0
  3650                           	global	_PS0
  3651  0000                     	_PS0	set	0x408	;byte address: 0x81
  3652                           
  3653                           	global	_PS1
  3654                           	global	_PS1
  3655  0000                     	_PS1	set	0x409	;byte address: 0x81
  3656                           
  3657                           	global	_PS2
  3658                           	global	_PS2
  3659  0000                     	_PS2	set	0x40A	;byte address: 0x81
  3660                           
  3661                           	global	_PSA
  3662                           	global	_PSA
  3663  0000                     	_PSA	set	0x40B	;byte address: 0x81
  3664                           
  3665                           	global	_RA0
  3666                           	global	_RA0
  3667  0000                     	_RA0	set	0x28	;byte address: 0x5
  3668                           
  3669                           	global	_RA1
  3670                           	global	_RA1
  3671  0000                     	_RA1	set	0x29	;byte address: 0x5
  3672                           
  3673                           	global	_RA2
  3674                           	global	_RA2
  3675  0000                     	_RA2	set	0x2A	;byte address: 0x5
  3676                           
  3677                           	global	_RA3
  3678                           	global	_RA3
  3679  0000                     	_RA3	set	0x2B	;byte address: 0x5
  3680                           
  3681                           	global	_RA4
  3682                           	global	_RA4
  3683  0000                     	_RA4	set	0x2C	;byte address: 0x5
  3684                           
  3685                           	global	_RA5
  3686                           	global	_RA5
  3687  0000                     	_RA5	set	0x2D	;byte address: 0x5
  3688                           
  3689                           	global	_RA6
  3690                           	global	_RA6
  3691  0000                     	_RA6	set	0x2E	;byte address: 0x5
  3692                           
  3693                           	global	_RA7
  3694                           	global	_RA7
  3695  0000                     	_RA7	set	0x2F	;byte address: 0x5
  3696                           
  3697                           	global	_RB0
  3698                           	global	_RB0
  3699  0000                     	_RB0	set	0x30	;byte address: 0x6
  3700                           
  3701                           	global	_RB1
  3702                           	global	_RB1
  3703  0000                     	_RB1	set	0x31	;byte address: 0x6
  3704                           
  3705                           	global	_RB2
  3706                           	global	_RB2
  3707  0000                     	_RB2	set	0x32	;byte address: 0x6
  3708                           
  3709                           	global	_RB3
  3710                           	global	_RB3
  3711  0000                     	_RB3	set	0x33	;byte address: 0x6
  3712                           
  3713                           	global	_RB4
  3714                           	global	_RB4
  3715  0000                     	_RB4	set	0x34	;byte address: 0x6
  3716                           
  3717                           	global	_RB5
  3718                           	global	_RB5
  3719  0000                     	_RB5	set	0x35	;byte address: 0x6
  3720                           
  3721                           	global	_RB6
  3722                           	global	_RB6
  3723  0000                     	_RB6	set	0x36	;byte address: 0x6
  3724                           
  3725                           	global	_RB7
  3726                           	global	_RB7
  3727  0000                     	_RB7	set	0x37	;byte address: 0x6
  3728                           
  3729                           	global	_RBIE
  3730                           	global	_RBIE
  3731  0000                     	_RBIE	set	0x5B	;byte address: 0xB
  3732                           
  3733                           	global	_RBIF
  3734                           	global	_RBIF
  3735  0000                     	_RBIF	set	0x58	;byte address: 0xB
  3736                           
  3737                           	global	_RBPU
  3738                           	global	_RBPU
  3739  0000                     	_RBPU	set	0x40F	;byte address: 0x81
  3740                           
  3741                           	global	_RCIE
  3742                           	global	_RCIE
  3743  0000                     	_RCIE	set	0x465	;byte address: 0x8C
  3744                           
  3745                           	global	_RCIF
  3746                           	global	_RCIF
  3747  0000                     	_RCIF	set	0x65	;byte address: 0xC
  3748                           
  3749                           	global	_RD
  3750                           	global	_RD
  3751  0000                     	_RD	set	0x4E0	;byte address: 0x9C
  3752                           
  3753                           	global	_RP0
  3754                           	global	_RP0
  3755  0000                     	_RP0	set	0x1D	;byte address: 0x3
  3756                           
  3757                           	global	_RP1
  3758                           	global	_RP1
  3759  0000                     	_RP1	set	0x1E	;byte address: 0x3
  3760                           
  3761                           	global	_RX9
  3762                           	global	_RX9
  3763  0000                     	_RX9	set	0xC6	;byte address: 0x18
  3764                           
  3765                           	global	_RX9D
  3766                           	global	_RX9D
  3767  0000                     	_RX9D	set	0xC0	;byte address: 0x18
  3768                           
  3769                           	global	_SPEN
  3770                           	global	_SPEN
  3771  0000                     	_SPEN	set	0xC7	;byte address: 0x18
  3772                           
  3773                           	global	_SREN
  3774                           	global	_SREN
  3775  0000                     	_SREN	set	0xC5	;byte address: 0x18
  3776                           
  3777                           	global	_SYNC
  3778                           	global	_SYNC
  3779  0000                     	_SYNC	set	0x4C4	;byte address: 0x98
  3780                           
  3781                           	global	_T0CS
  3782                           	global	_T0CS
  3783  0000                     	_T0CS	set	0x40D	;byte address: 0x81
  3784                           
  3785                           	global	_T0IE
  3786                           	global	_T0IE
  3787  0000                     	_T0IE	set	0x5D	;byte address: 0xB
  3788                           
  3789                           	global	_T0IF
  3790                           	global	_T0IF
  3791  0000                     	_T0IF	set	0x5A	;byte address: 0xB
  3792                           
  3793                           	global	_T0SE
  3794                           	global	_T0SE
  3795  0000                     	_T0SE	set	0x40C	;byte address: 0x81
  3796                           
  3797                           	global	_T1CKPS0
  3798                           	global	_T1CKPS0
  3799  0000                     	_T1CKPS0	set	0x84	;byte address: 0x10
  3800                           
  3801                           	global	_T1CKPS1
  3802                           	global	_T1CKPS1
  3803  0000                     	_T1CKPS1	set	0x85	;byte address: 0x10
  3804                           
  3805                           	global	_T1OSCEN
  3806                           	global	_T1OSCEN
  3807  0000                     	_T1OSCEN	set	0x83	;byte address: 0x10
  3808                           
  3809                           	global	_T1SYNC
  3810                           	global	_T1SYNC
  3811  0000                     	_T1SYNC	set	0x82	;byte address: 0x10
  3812                           
  3813                           	global	_T2CKPS0
  3814                           	global	_T2CKPS0
  3815  0000                     	_T2CKPS0	set	0x90	;byte address: 0x12
  3816                           
  3817                           	global	_T2CKPS1
  3818                           	global	_T2CKPS1
  3819  0000                     	_T2CKPS1	set	0x91	;byte address: 0x12
  3820                           
  3821                           	global	_TMR1CS
  3822                           	global	_TMR1CS
  3823  0000                     	_TMR1CS	set	0x81	;byte address: 0x10
  3824                           
  3825                           	global	_TMR1IE
  3826  0000                     	_TMR1IE	set	0x460	;byte address: 0x8C
  3827                           
  3828                           	global	_TMR1IF
  3829  0000                     	_TMR1IF	set	0x60	;byte address: 0xC
  3830                           
  3831                           	global	_TMR1ON
  3832                           	global	_TMR1ON
  3833  0000                     	_TMR1ON	set	0x80	;byte address: 0x10
  3834                           
  3835                           	global	_TMR2IE
  3836                           	global	_TMR2IE
  3837  0000                     	_TMR2IE	set	0x461	;byte address: 0x8C
  3838                           
  3839                           	global	_TMR2IF
  3840                           	global	_TMR2IF
  3841  0000                     	_TMR2IF	set	0x61	;byte address: 0xC
  3842                           
  3843                           	global	_TMR2ON
  3844                           	global	_TMR2ON
  3845  0000                     	_TMR2ON	set	0x92	;byte address: 0x12
  3846                           
  3847                           	global	_TO
  3848                           	global	_TO
  3849  0000                     	_TO	set	0x1C	;byte address: 0x3
  3850                           
  3851                           	global	_TOUTPS0
  3852                           	global	_TOUTPS0
  3853  0000                     	_TOUTPS0	set	0x93	;byte address: 0x12
  3854                           
  3855                           	global	_TOUTPS1
  3856                           	global	_TOUTPS1
  3857  0000                     	_TOUTPS1	set	0x94	;byte address: 0x12
  3858                           
  3859                           	global	_TOUTPS2
  3860                           	global	_TOUTPS2
  3861  0000                     	_TOUTPS2	set	0x95	;byte address: 0x12
  3862                           
  3863                           	global	_TOUTPS3
  3864                           	global	_TOUTPS3
  3865  0000                     	_TOUTPS3	set	0x96	;byte address: 0x12
  3866                           
  3867                           	global	_TRISA0
  3868                           	global	_TRISA0
  3869  0000                     	_TRISA0	set	0x428	;byte address: 0x85
  3870                           
  3871                           	global	_TRISA1
  3872                           	global	_TRISA1
  3873  0000                     	_TRISA1	set	0x429	;byte address: 0x85
  3874                           
  3875                           	global	_TRISA2
  3876                           	global	_TRISA2
  3877  0000                     	_TRISA2	set	0x42A	;byte address: 0x85
  3878                           
  3879                           	global	_TRISA3
  3880                           	global	_TRISA3
  3881  0000                     	_TRISA3	set	0x42B	;byte address: 0x85
  3882                           
  3883                           	global	_TRISA4
  3884                           	global	_TRISA4
  3885  0000                     	_TRISA4	set	0x42C	;byte address: 0x85
  3886                           
  3887                           	global	_TRISA5
  3888                           	global	_TRISA5
  3889  0000                     	_TRISA5	set	0x42D	;byte address: 0x85
  3890                           
  3891                           	global	_TRISA6
  3892                           	global	_TRISA6
  3893  0000                     	_TRISA6	set	0x42E	;byte address: 0x85
  3894                           
  3895                           	global	_TRISA7
  3896                           	global	_TRISA7
  3897  0000                     	_TRISA7	set	0x42F	;byte address: 0x85
  3898                           
  3899                           	global	_TRISB0
  3900                           	global	_TRISB0
  3901  0000                     	_TRISB0	set	0x430	;byte address: 0x86
  3902                           
  3903                           	global	_TRISB1
  3904                           	global	_TRISB1
  3905  0000                     	_TRISB1	set	0x431	;byte address: 0x86
  3906                           
  3907                           	global	_TRISB2
  3908                           	global	_TRISB2
  3909  0000                     	_TRISB2	set	0x432	;byte address: 0x86
  3910                           
  3911                           	global	_TRISB3
  3912                           	global	_TRISB3
  3913  0000                     	_TRISB3	set	0x433	;byte address: 0x86
  3914                           
  3915                           	global	_TRISB4
  3916                           	global	_TRISB4
  3917  0000                     	_TRISB4	set	0x434	;byte address: 0x86
  3918                           
  3919                           	global	_TRISB5
  3920                           	global	_TRISB5
  3921  0000                     	_TRISB5	set	0x435	;byte address: 0x86
  3922                           
  3923                           	global	_TRISB6
  3924                           	global	_TRISB6
  3925  0000                     	_TRISB6	set	0x436	;byte address: 0x86
  3926                           
  3927                           	global	_TRISB7
  3928                           	global	_TRISB7
  3929  0000                     	_TRISB7	set	0x437	;byte address: 0x86
  3930                           
  3931                           	global	_TRMT
  3932                           	global	_TRMT
  3933  0000                     	_TRMT	set	0x4C1	;byte address: 0x98
  3934                           
  3935                           	global	_TX9
  3936                           	global	_TX9
  3937  0000                     	_TX9	set	0x4C6	;byte address: 0x98
  3938                           
  3939                           	global	_TX9D
  3940                           	global	_TX9D
  3941  0000                     	_TX9D	set	0x4C0	;byte address: 0x98
  3942                           
  3943                           	global	_TXEN
  3944                           	global	_TXEN
  3945  0000                     	_TXEN	set	0x4C5	;byte address: 0x98
  3946                           
  3947                           	global	_TXIE
  3948                           	global	_TXIE
  3949  0000                     	_TXIE	set	0x464	;byte address: 0x8C
  3950                           
  3951                           	global	_TXIF
  3952                           	global	_TXIF
  3953  0000                     	_TXIF	set	0x64	;byte address: 0xC
  3954                           
  3955                           	global	_VR0
  3956                           	global	_VR0
  3957  0000                     	_VR0	set	0x4F8	;byte address: 0x9F
  3958                           
  3959                           	global	_VR1
  3960                           	global	_VR1
  3961  0000                     	_VR1	set	0x4F9	;byte address: 0x9F
  3962                           
  3963                           	global	_VR2
  3964                           	global	_VR2
  3965  0000                     	_VR2	set	0x4FA	;byte address: 0x9F
  3966                           
  3967                           	global	_VR3
  3968                           	global	_VR3
  3969  0000                     	_VR3	set	0x4FB	;byte address: 0x9F
  3970                           
  3971                           	global	_VREN
  3972                           	global	_VREN
  3973  0000                     	_VREN	set	0x4FF	;byte address: 0x9F
  3974                           
  3975                           	global	_VROE
  3976                           	global	_VROE
  3977  0000                     	_VROE	set	0x4FE	;byte address: 0x9F
  3978                           
  3979                           	global	_VRR
  3980                           	global	_VRR
  3981  0000                     	_VRR	set	0x4FD	;byte address: 0x9F
  3982                           
  3983                           	global	_WR
  3984                           	global	_WR
  3985  0000                     	_WR	set	0x4E1	;byte address: 0x9C
  3986                           
  3987                           	global	_WREN
  3988                           	global	_WREN
  3989  0000                     	_WREN	set	0x4E2	;byte address: 0x9C
  3990                           
  3991                           	global	_WRERR
  3992                           	global	_WRERR
  3993  0000                     	_WRERR	set	0x4E3	;byte address: 0x9C
  3994                           
  3995                           	global	_ZERO
  3996                           	global	_ZERO
  3997  0000                     	_ZERO	set	0x1A	;byte address: 0x3
  3998                           
  3999                           	PSECT	fnauto0,class=BANK0,space=1
  4000                           	FNCONF	fnauto0,??,?
  4001                           
  4002                           	DABS	1,126,2	;btemp
  4003                           	global	btemp
  4004  0000                     	btemp set 07Eh
  4005                           apbank macro
  4006                           	bcf	status,5
  4007                           	bcf	status,6
  4008  0053                     	endm


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Wed Nov 19 07:48:03 2014

                            __Lrbss_0 002F  
                                   l1 0350  
                                   l2 032A  
                                   l3 0350  
                                   l5 041C  
                                   l6 02DF  
                                   l7 02DA  
                                   l8 02DA  
                           __Lrdata_1 00C1  
                                   pc 0002  
                           __Lramdata 00C1  
                                  l10 046B  
                                  l20 0268  
                                  l21 029A  
                                  l13 0478  
                                  l30 03D9  
                                  l14 045E  
                                  _DC 0019  
                                  l23 026E  
                                  l32 03CF  
                                  l40 049C  
                                  l24 026F  
                                  l33 03B9  
                                  l25 027D  
                                  l41 031C  
                                  l17 0488  
                                  l34 03C9  
                                  l26 0496  
                                  l42 031C  
                                  l18 0481  
                                  l50 0206  
                                  l19 029D  
                                  l27 04A5  
                                  l43 02F2  
                                  l51 0206  
                                  l28 03D9  
                                  l36 04AB  
                                  l60 01B6  
                                  l52 0164  
                                  l37 04A1  
                                  l29 03B4  
                                  l45 02F8  
                                  l61 01B6  
                                  l38 048F  
                                  l70 0450  
                                  l46 0307  
                                  l62 0206  
                                  l54 016A  
                                  l39 04A9  
                                  l71 043C  
                                  l47 0319  
                                  l63 01FF  
                                  l55 0174  
                                  l64 01F1  
                                  l56 018A  
                                  l73 0442  
                                  l49 0312  
                                  l65 01D2  
                                  l90 0356  
                                  l66 01D9  
                                  l58 0183  
                                  l67 01DF  
                                  l59 01A1  
                                  l92 035C  
                                  l68 01E5  
                                  l93 0259  
                                  l69 01EB  
                                  l94 020D  
                                  l95 0214  
                                  l89 0382  
                                  l97 021A  
                                  l98 024C  
                                  _PD 001B  
                                  _RD 04E0  
                                  _TO 001C  
                                  _WR 04E1  
                        ??_init_DigIO 0053  
                                  fsr 0004  
                      ?_SPI_SS_Enable 0060  
             __end_of_CC2500_WriteReg 025A  
                     ??_SPI_SS_Enable 0060  
                                 l100 0257  
             _RF_Module_Rxchar_status 0054  
                                 l150 03DD  
                                 l160 039E  
                                 l152 03E3  
                                 l153 03ED  
                                 l154 03FE  
                                 l162 0058  
                                 l163 0047  
                                 l156 03AE  
                                 l157 038B  
                                 l149 03FF  
                                 l165 0058  
                                 l158 03AA  
                                 _CM0 00F8  
                                 _CM1 00F9  
                                 _CM2 00FA  
                                 _CIS 00FB  
                                 _GIE 005F  
                                 _BOR 0470  
                                 _RA0 0028  
                                 _RA1 0029  
                                 _RB0 0030  
                                 _RA2 002A  
                                 _RB1 0031  
                                 _RA3 002B  
                                 _RB2 0032  
                                 _RA4 002C  
                                 _RB3 0033  
                                 _RA5 002D  
                                 _RB4 0034  
                                 _RA6 002E  
                                 _RB5 0035  
                                 _RA7 002F  
                                 _RB6 0036  
                                 _RB7 0037  
                                 _FSR 0004  
                                 _PCL 0002  
                                 _PS0 0408  
                                 _PR2 0092  
                                 _PS1 0409  
                                 _RP0 001D  
                                 _PS2 040A  
                                 _IRP 001F  
                                 _RP1 001E  
                                 _PSA 040B  
                                 _VR0 04F8  
                                 _VR1 04F9  
                                 _VR2 04FA  
                                 _VR3 04FB  
                                 _POR 0471  
                                 _RX9 00C6  
                                 _TX9 04C6  
                                 _VRR 04FD  
                                 _isr 041D  
                                 indf 0000  
                        ??_init_timer 0053  
                      _SPI_SS_Disable 04A2  
                     ?_SPI_SS_Disable 0060  
                          _TimerState 0075  
                          _TimerStart 002F  
                          _spi_TxByte 025A  
                       _CC2500_Init_i 0053  
                    ??_SPI_SS_Disable 0060  
                  __end_of_spi_TxByte 029E  
                                _ADEN 00C3  
                                ?_isr 006A  
                            __tempreg 0053  
                                _EEIE 0467  
                                _EEIF 0067  
                                _CMIE 0466  
                                _CMIF 0066  
                   _spi_TxByte_txchar 0060  
                                _BRGH 04C2  
                                _T0IE 005D  
                                _T0IF 005A  
                                _CREN 00C4  
                                _T0CS 040D  
                                _FERR 00C2  
                                u2010 03C9  
                                u2011 03C8  
                                u2020 03D9  
                                u2021 03D8  
                                u2030 02AB  
                                u2015 03C5  
                                u2031 02AA  
                                u2040 02D3  
                                u2025 03D5  
                                u2041 02D2  
                                _T0SE 040C  
                                _CSRC 04C7  
                                u2060 0350  
                                u2061 034F  
                                u2045 02CF  
                                _INDF 0000  
            _RF_Module_Rxchar_rxbytes 0053  
                                u1800 01BC  
                                u1801 01BB  
                                u1730 015B  
                                u1810 004E  
                                u1731 015A  
                                u1811 004D  
                                u1820 035C  
                                u1740 016A  
                                u1821 035B  
                                u1741 0169  
                                u1830 021A  
                                u1750 018A  
                                u1910 03FE  
                                _PIE1 008C  
                                u1831 0219  
                                u1751 0189  
                                u1911 03FD  
                                u1840 024A  
                                u1920 02F0  
                                u1760 0193  
                                u1841 0249  
                                u1921 02EF  
                                u1761 0192  
                                u1850 0256  
                                u1930 02F8  
                                u1770 019A  
                                u1851 0255  
                                u1931 02F7  
                                u1771 0199  
                                u1940 0319  
                                u1780 01A8  
                                u1941 0318  
                                u1781 01A7  
                                u1950 0442  
                                u1870 0398  
                                u1790 01B3  
                                u1951 0441  
                                u1871 0397  
                                u1791 01B2  
                                u1880 03AA  
                                u1881 03A9  
                                u1970 026C  
                                u1890 03E3  
                                _PEIE 005E  
                                i1l11 042C  
                                u1971 026B  
                                u1891 03E2  
                                i1l12 0427  
                                u1980 027A  
                                _INTE 005C  
                                u1981 0279  
                                _INTF 0059  
                                u1990 029A  
                                _RBIE 005B  
                                u1991 0299  
                                _RBIF 0058  
                                _RCIE 0465  
                                _RCIF 0065  
                                _PCON 008E  
                                _PIR1 000C  
                                _OERR 00C1  
                                _RBPU 040F  
                                _OSCF 0473  
                                _RX9D 00C0  
                                _TMR0 0001  
                                _TMR2 0011  
                                _SPEN 00C7  
                           __databank 0001  
                                _TX9D 04C0  
                                _SREN 00C5  
                                _VREN 04FF  
                                _TRMT 04C1  
                                _ZERO 001A  
                                _TXIE 0464  
                                _WREN 04E2  
                                _TXIF 0064  
                                _TXEN 04C5  
                                _VROE 04FE  
                                _SYNC 04C4  
                      _RF_Module_init 0383  
                _RF_Module_Txchar_Len 0059  
                                _main 0038  
                     ?_RF_Module_init 0055  
                                _temp 007A  
                                btemp 007E  
                          _bTempRxBuf 003F  
                         ?_spi_TxByte 0060  
                                start 0010  
                            _init_spi 0479  
                      ??_init_SWTimer 0053  
                    ??_RF_Module_init 0055  
                      _Ref1ms_counter 007B  
                   interrupt_function 0004  
               _CC2500_WriteReg_value 0058  
                           ?_init_spi 0053  
                       _CC_rfSettings 00C1  
_RF_Module_Rxchar_ValidPacketReceived 0055  
              __end_of_SPI_SS_Disable 04A6  
                          ??_init_spi 0053  
              _GetTimer_State_TimerID 0053  
                         _CC2500_Init 03DA  
                               ??_isr 006A  
                           stringcode 0108  
                             _CCP1CON 0017  
                      _CC2500_ReadReg 0351  
                 __end_of_CC2500_Init 0400  
                       _SPI_MISO_READ 0497  
                     ?_CC2500_ReadReg 005C  
                               _C1INV 00FC  
                               _C2INV 00FD  
                               _C1OUT 00FE  
                               _C2OUT 00FF  
                       _TX_LED_Toggle 0482  
                               ?_main 0053  
                               _CCP1X 00BD  
                               _CCP1Y 00BC  
                               _EEADR 009B  
                               _CARRY 0018  
                               _CMCON 001F  
                               _T1CON 0010  
                               _T2CON 0012  
              _Start_Timer_TimeoutVal 0053  
                             _T1CKPS0 0084  
                             _T1CKPS1 0085  
                        ??_spi_TxByte 0060  
                             _T2CKPS0 0090  
                             _T2CKPS1 0091  
                     __end_of_command 0451  
            __end_of_RF_Module_Rxchar 0207  
                               _RCREG 001A  
              __end_of_RF_Module_init 03AF  
                               _RCSTA 0018  
            __end_of_RF_Module_Txchar 031D  
                               _TMR1H 000F  
                               _TMR1L 000E  
                               _SPBRG 0099  
                               _PORTA 0005  
                               _PORTB 0006  
                             _T1OSCEN 0083  
                    ??_CC2500_ReadReg 005C  
                               _TRISA 0085  
                               _TRISB 0086  
                               _VRCON 009F  
                               _WRERR 04E3  
                               _TXREG 0019  
                               _TXSTA 0098  
                    _Delay_ms_delayms 0064  
                           _command_a 005E  
                     _SPI_SCK_SETHIGH 04A6  
               __end_of_SPI_MISO_READ 049D  
                    __end_of_Delay_ms 03DA  
                     _SPI_MOSI_SETLOW 049D  
               __end_of_TX_LED_Toggle 0489  
                    ?_SPI_SCK_SETHIGH 0064  
                        ?_CC2500_Init 0053  
                             _TOUTPS0 0093  
                             _TOUTPS1 0094  
                             _TOUTPS2 0095  
                             _TOUTPS3 0096  
                               pclath 000A  
                    ?_SPI_MOSI_SETLOW 0064  
            __end_of_SPI_MOSI_SETHIGH 04AC  
                            intlevel1 0004  
                      _GetTimer_State 029E  
                               status 0003  
                     _TimerTimeOutVal 0037  
                     ?_GetTimer_State 0053  
              __end_of_CC2500_ReadReg 0383  
                        _init_SWTimer 031D  
                         _command_val 005F  
                   ??_SPI_SCK_SETHIGH 0064  
       _RF_Module_Rxchar_OldPacketNum 007D  
                         _Start_Timer 0400  
                    ??_GetTimer_State 0053  
                   ??_SPI_MOSI_SETLOW 0064  
                __end_of_init_SWTimer 0351  
                _CC2500_ReadReg_value 005D  
                 __end_of_Start_Timer 041D  
                      ??_read_switchs 0059  
                         __stringbase 010E  
             _RF_Module_Txchar_Txdata 005A  
                       _SPI_SS_Enable 0490  
  _RF_Module_Rxchar_NewPacketReceived 0056  
                    _spi_TxByte_index 0061  
                          _Delay_ms_x 0066  
                          _Delay_ms_y 0068  
                              ??_main 0053  
                             _command 0437  
             _RF_Module_Txchar_status 005B  
                            ?_command 005E  
                _CC2500_WriteReg_addr 005A  
              __end_of_GetTimer_State 02E0  
                           ??_command 005E  
                        ?_Start_Timer 0053  
               __end_of_SPI_SS_Enable 0497  
                            stringdir 0109  
                            stringjmp 010D  
                            stringtab 0100  
              _spi_TxByte_received_ch 0062  
                              _CCP1M0 00B8  
                              _CCP1M1 00B9  
                              _CCP1M2 00BA  
                              _CCP1M3 00BB  
                              _CCP1IE 0462  
                              _CCP1IF 0062  
                              _EEDATA 009A  
                              _CCPR1H 0016  
                              _CCPR1L 0015  
                              _EECON1 009C  
                              _EECON2 009D  
                        __end_of_main 005A  
                       ??_CC2500_Init 0053  
                              _T1SYNC 0082  
                              _INTEDG 040E  
                              _PCLATH 000A  
                              _INTCON 000B  
                              i1u1380 0421  
                              i1u1381 0420  
                      _SPI_SCK_SETLOW 0489  
                    _RF_Module_Rxchar 0146  
                              _TMR1IE 0460  
                              _TMR1IF 0060  
                              _TMR1CS 0081  
                              _TMR2IE 0461  
                              _TMR2IF 0061  
                              _TMR1ON 0080  
                              _OPTION 0081  
                              _TMR2ON 0092  
                    _RF_Module_Txchar 02E0  
                              _TRISA0 0428  
                              _TRISA1 0429  
                              _TRISB0 0430  
                              _TRISA2 042A  
                              _TRISB1 0431  
                              _TRISA3 042B  
                              _TRISB2 0432  
                              _TRISA4 042C  
                              _TRISB3 0433  
                              _TRISA5 042D  
                              _TRISB4 0434  
                              _TRISA6 042E  
                              _TRISB5 0435  
                              _TRISA7 042F  
                              _TRISB6 0436  
                              _TRISB7 0437  
             __end_of_SPI_SCK_SETHIGH 04AA  
                              _STATUS 0003  
                      _paTable_CC2500 010F  
                     ?_SPI_SCK_SETLOW 0064  
                       ?_init_SWTimer 0053  
             __end_of_SPI_MOSI_SETLOW 04A2  
                    __end_of_init_spi 0482  
                    _RF_Module_init_i 0056  
                     _CC2500_WriteReg 0207  
                    ??_SPI_SCK_SETLOW 0064  
                 _CC2500_ReadReg_addr 005C  
                        _read_switchs 0451  
                   ?_RF_Module_Rxchar 0053  
                   ?_RF_Module_Txchar 0059  
                              _bTxBuf 0049  
                _read_switchs_ret_val 0059  
                    ?_CC2500_WriteReg 0058  
                  _RF_Module_Rxchar_i 0057  
                __end_of_read_switchs 045F  
                  _RF_Module_Txchar_i 005C  
                    _SPI_MOSI_SETHIGH 04AA  
                      ?_SPI_MISO_READ 0064  
                _Start_Timer_Timer_ID 0055  
      _RF_Module_Rxchar_Packetcounter 0079  
                      ?_TX_LED_Toggle 0059  
                   ??_CC2500_WriteReg 0059  
                         __end_of_isr 0437  
                     ??_SPI_MISO_READ 0064  
           _RF_Module_init_ErrorCount 0055  
                     ??_TX_LED_Toggle 0059  
              __end_of_SPI_SCK_SETLOW 0490  
                          _init_DigIO 046C  
                   ?_SPI_MOSI_SETHIGH 0064  
                  __end_of_init_DigIO 0479  
                       ??_Start_Timer 0055  
                              saved_w 007F  
                  ??_RF_Module_Rxchar 0053  
                  ??_RF_Module_Txchar 005A  
                            _Delay_ms 03AF  
                           ?_Delay_ms 0064  
                          _init_timer 045F  
                         ?_init_DigIO 0053  
                  __end_of_init_timer 046C  
                          ??_Delay_ms 0066  
                _init_SWTimer_counter 0053  
                   _CC2500_WriteReg_i 0059  
                         ?_init_timer 0053  
                            __Hcommon 007E  
                  ??_SPI_MOSI_SETHIGH 0064  
                           __Hrdata_1 00F0  
                           __Hramdata 00F0  
                            __Hrbss_0 0053  
                            __Lcommon 0075  
                       ?_read_switchs 0059  
