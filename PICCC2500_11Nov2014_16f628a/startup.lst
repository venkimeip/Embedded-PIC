

HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
                                                      Wed Nov 19 07:48:03 2014


     1                           
     2                           	; HI-TECH C PRO for the PIC10/12/16 MCU family
                                  V9.60PL5
     3                           	; Copyright (C) 1984-2009 HI-TECH Software
     4                           
     5                           	; Auto-generated runtime startup code for fina
                                 l link stage.
     6                           
     7                           	;
     8                           	; Compiler options:
     9                           	;
    10                           	; -oTest.cof -mTest.map --summary=default --ou
                                 tput=default SW_TIMER.p1 \
    11                           	; Timerc.p1 DigIO.p1 Spi.p1 RF_Module.p1 main.
                                 p1 --chip=16F628A -P \
    12                           	; --runtime=default --opt=default -D__DEBUG=1 
                                 -g --asmlist \
    13                           	; --errformat=Error   [%n] %f; %l.%c %s --msgf
                                 ormat=Advisory[%n] %s \
    14                           	; --warnformat=Warning [%n] %f; %l.%c %s
    15                           	;
    16                           
    17                           
    18                           	processor	16F628A
    19                           
    20                           	global	_main,start,_exit,reset_vec
    21                           	fnroot	_main
    22                           	psect	config,class=CONFIG,delta=2
    23                           	psect	idloc,class=IDLOC,delta=2
    24                           	psect	rbss_0,class=BANK0,space=1
    25                           	psect	rbss_1,class=BANK1,space=1
    26                           	psect	rbss_2,class=BANK2,space=1
    27                           	psect	rbss_3,class=BANK3,space=1
    28                           	psect	rdata_0,class=BANK0,space=1
    29                           	psect	rdata_1,class=BANK1,space=1
    30                           	psect	rdata_2,class=BANK2,space=1
    31                           	psect	rdata_3,class=BANK3,space=1
    32                           	psect	nvram,class=BANK0,space=1
    33                           	psect	nvram_1,class=BANK1,space=1
    34                           	psect	nvram_2,class=BANK2,space=1
    35                           	psect	nvram_3,class=BANK3,space=1
    36                           	psect	nvbit_0,class=BANK0,bit,space=1
    37                           	psect	nvbit_1,class=BANK1,bit,space=1
    38                           	psect	nvbit_2,class=BANK2,bit,space=1
    39                           	psect	nvbit_3,class=BANK3,bit,space=1
    40                           	psect	temp,ovrld,class=BANK0,space=1
    41                           	psect	struct,ovrld,class=BANK0,space=1
    42                           	psect	code,class=CODE,delta=2
    43                           	psect	rbit_0,class=BANK0,bit,space=1
    44                           	psect	ptbit_0,class=BANK0,bit,space=1
    45                           	psect	rbit_1,class=BANK1,bit,space=1
    46                           	psect	rbit_2,class=BANK2,bit,space=1
    47                           	psect	rbit_3,class=BANK3,bit,space=1
    48                           	psect	pstrings,class=CODE,delta=2
    49                           	psect	powerup,class=CODE,delta=2
    50                           	psect	reset_vec,class=CODE,delta=2
    51                           	psect	maintext,class=CODE,delta=2
    52  0000                     	C	set	0
    53  0000                     	Z	set	2
    54  0000                     	PCL	set	2
    55  0000                     	INDF	set	0
    56                           
    57                           	psect	fnautoc,class=COMMON,space=1
    58                           	psect	common,class=COMMON,space=1
    59                           	psect	fnauto0,class=BANK0,space=1
    60                           	psect	fnauto1,class=BANK1,space=1
    61                           	psect	fnauto2,class=BANK2,space=1
    62  0000                     	STATUS	equ	3
    63  0000                     	PCLATH	equ	0Ah
    64                           
    65                           	psect	eeprom_data,class=EEDATA,delta=2,space=2
    66                           	psect	idata,class=CODE,delta=2
    67                           	psect	idata_0,class=CODE,delta=2
    68                           	psect	idata_1,class=CODE,delta=2
    69                           	psect	idata_2,class=CODE,delta=2
    70                           	psect	idata_3,class=CODE,delta=2
    71                           	psect	intcode,class=CODE,delta=2
    72                           	psect	intret,class=CODE,delta=2
    73                           	psect	intentry,class=CODE,delta=2
    74                           	global	intlevel0,intlevel1,intlevel2, intlevel
                                 3, intlevel4, intlevel5
    75  0004                     intlevel0:
    76  0004                     intlevel1:
    77  0004                     intlevel2:
    78  0004                     intlevel3:
    79  0004                     intlevel4:
    80  0004                     intlevel5:
    81                           	psect	intsave,class=BANK0,space=1
    82                           	psect	intsave_1,class=BANK1,space=1
    83                           	psect	intsave_2,class=BANK2,space=1
    84                           	psect	intsave_3,class=BANK3,space=1
    85                           	psect	init,class=CODE,delta=2
    86                           	psect	init23,class=CODE,delta=2
    87                           	psect	text,class=CODE,delta=2
    88                           	psect	end_init,class=CODE,delta=2
    89                           	psect	clrtext,class=CODE,delta=2
    90                           	psect	float_text0,class=CODE,delta=2,size=2048
    91                           	psect	float_text1,class=CODE,delta=2,size=2048
    92                           	psect	float_text2,class=CODE,delta=2,size=2048
    93                           	psect	float_text3,class=CODE,delta=2,size=2048
    94                           	psect	float_text4,class=CODE,delta=2,size=2048
    95  0000                     	FSR	set	4
    96                           	psect	strings,class=CODE,delta=2,reloc=256
    97                           
    98                           	psect	reset_vec
    99  0000                     reset_vec:
   100                           	; No powerup routine
   101                           	global start
   102                           
   103                           ; jump to start
   104  0000  2810               	goto	start & 0x7FF | (reset_vec & not 0x7FF)
   105                           
   106                           
   107                           
   108                           	psect	init
   109  0010                     start
   110  0010                     _exit
   111  0000                     FSR	set	4
   112  0000                     INDF	set	0
   113  0000                     PCLATH	set	0Ah
   114  0000                     PC	set	2
   115                           global btemp, __Lramdata, __Lidata, __Hramdata
   116  0010  30C1               movlw	low(__Lramdata)
   117  0011  0084               movwf	FSR
   118  0012  3001               movlw	high(__Lidata)
   119  0013  00FE               movwf	btemp
   120  0014  3017               movlw	low(__Lidata)
   121  0015  00FF               movwf	btemp+1
   122  0016                     copyloop:
   123  0016  2021               fcall fetch
   124  0017  0080               movwf	INDF
   125  0018  0A84               incf	FSR,f
   126  0019  0804               movf	FSR,w
   127  001A  3AF0               xorlw	low(__Hramdata)
   128  001B  1903               btfsc	STATUS,2
   129  001C  2825               goto	done_copy
   130  001D  0AFF               incf	btemp+1,f
   131  001E  1903               btfsc	STATUS,2
   132  001F  0AFE               incf	btemp,f
   133  0020  2816               goto copyloop
   134  0021                     fetch:
   135  0021  087E               movf	btemp,w
   136  0022  008A               movwf	PCLATH
   137  0023  087F               movf	btemp+1,w
   138  0024  0082               movwf	PC
   139  0025                     done_copy:
   140                           
   141                           ;----------------------------------------------
                                 ---------------------------------
   142                           ;		Clear (zero) uninitialized global variables
   143                           
   144                           ;	36 bytes of RAM objects in bank 0 to zero
   145                           
   146                           	psect	init
   147                           	global	__Lrbss_0
   148  0025  302F               	movlw	low(__Lrbss_0)		;load the low address in
                                 to FSR
   149  0026  0084               	movwf	FSR
   150  0027  3053               	movlw	low(__Lrbss_0+36)		;load the high addres
                                 s+1 into W
   151  0028  2030               	fcall	clear_ram		;go and zero that range of ad
                                 dresses
   152                           
   153                           	psect	clrtext,class=CODE,delta=2
   154                           	global	clear_ram
   155                           ;	Called with FSR containing the base address, 
                                 and
   156                           ;	W with the last address+1
   157  0030                     clear_ram:
   158  0030  0064               	clrwdt			;clear the watchdog before getting in
                                 to this loop
   159  0031                     clrloop:
   160  0031  0180               	clrf	INDF		;clear RAM location pointed to by F
                                 SR
   161  0032  0A84               	incf	FSR,f		;increment pointer to next locatio
                                 n
   162  0033  0604               	xorwf	FSR,w		;XOR with final address
   163  0034  1903               	btfsc	STATUS,2	;have we reached the end yet?
   164  0035  3400               	retlw	0		;all done for this bank, return
   165  0036  0604               	xorwf	FSR,w		;XOR again to restore value
   166  0037  2831               	goto	clrloop		;go and do the next byte
   167                           
   168                           ;	No RAM objects to clear in bank 1
   169                           ;	No RAM objects to clear in bank 2
   170                           ;	No RAM objects to clear in bank 3
   171                           ;	9 bytes of RAM objects in common bank to zero
   172                           
   173                           	psect	init
   174  0029  1783               	bsf	STATUS,7		;select indirect bank 2/3
   175                           	global	__Lcommon
   176  002A  3075               	movlw	low(__Lcommon)		;load the low address in
                                 to FSR
   177  002B  0084               	movwf	FSR
   178  002C  307E               	movlw	low(__Lcommon+9)		;load the high address
                                 +1 into W
   179  002D  2030               	fcall	clear_ram		;go and zero that range of ad
                                 dresses
   180                           
   181                           
   182                           ;----------------------------------------------
                                 ---------------------------------
   183                           	psect	end_init
   184  002E  0183               	clrf	STATUS
   185  002F  2838               	ljmp _main


HI-TECH Software PICC Macro Assembler V9.60PL5 build 3884 
Symbol Table                                          Wed Nov 19 07:48:03 2014

  __Lrbss_0 002F           PC 0002   __Lramdata 00C1          FSR 0004  
       INDF 0000        _main 0038        _exit 0010        fetch 0021  
      btemp 007E        start 0010    clear_ram 0030       PCLATH 000A  
     STATUS 0003    done_copy 0025    intlevel0 0004    intlevel1 0004  
  intlevel2 0004    intlevel3 0004    intlevel4 0004    intlevel5 0004  
   __Lidata 0117    reset_vec 0000     copyloop 0016      clrloop 0031  
 __Hramdata 00F0    __Lcommon 0075  
